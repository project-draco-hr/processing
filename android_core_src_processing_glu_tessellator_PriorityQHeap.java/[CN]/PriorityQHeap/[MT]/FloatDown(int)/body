{
  PriorityQ.PQnode[] n=nodes;
  PriorityQ.PQhandleElem[] h=handles;
  int hCurr, hChild;
  int child;
  hCurr=n[curr].handle;
  for (; ; ) {
    child=curr << 1;
    if (child < size && LEQ(leq,h[n[child + 1].handle].key,h[n[child].handle].key)) {
      ++child;
    }
    assert(child <= max);
    hChild=n[child].handle;
    if (child > size || LEQ(leq,h[hCurr].key,h[hChild].key)) {
      n[curr].handle=hCurr;
      h[hCurr].node=curr;
      break;
    }
    n[curr].handle=hChild;
    h[hChild].node=curr;
    curr=child;
  }
}
