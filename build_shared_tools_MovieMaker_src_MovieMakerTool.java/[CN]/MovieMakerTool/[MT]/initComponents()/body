{
  imageFolderHelpLabel=new JLabel();
  imageFolderField=new JTextField();
  chooseImageFolderButton=new JButton();
  soundFileHelpLable=new JLabel();
  soundFileField=new JTextField();
  chooseSoundFileButton=new JButton();
  createMovieButton=new JButton();
  widthLabel=new JLabel();
  widthField=new JTextField();
  heightLabel=new JLabel();
  heightField=new JTextField();
  compressionLabel=new JLabel();
  compressionBox=new JComboBox();
  fpsLabel=new JLabel();
  fpsField=new JTextField();
  passThroughCheckBox=new JCheckBox();
  FormListener formListener=new FormListener();
  setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
  addWindowListener(new WindowAdapter(){
    public void windowClosing(    WindowEvent e){
      setVisible(false);
    }
  }
);
  Base.registerWindowCloseKeys(getRootPane(),new ActionListener(){
    public void actionPerformed(    ActionEvent actionEvent){
      setVisible(false);
    }
  }
);
  setTitle("QuickTime Movie Maker");
  aboutLabel=new JLabel("<html>" + "<b>This tool creates a QuickTime movie from a sequence of images.</b><br> " + "<br>"+ "To avoid artifacts caused by re-compressing images as video,<br> "+ "use uncompressed TIFF or (lossless) PNG images as the source.<br>"+ "<br>"+ "TIFF images will write more quickly, but require more disk space:<br>"+ "<tt>saveFrame(\"frames/####.tif\");</tt><br>"+ "<br>"+ "PNG images are smaller, but your sketch will run more slowly:<br>"+ "<tt>saveFrame(\"frames/####.png\");</tt><br>"+ "<br>"+ "<font color=#808080>This code is based on QuickTime Movie Maker 1.5.1 2011-01-17.<br>"+ "Copyright ?? 2010-2011 Werner Randelshofer. All rights reserved.<br>"+ "This software is licensed under Creative Commons Atribution 3.0.");
  imageFolderHelpLabel.setText("Drag a folder with image files into the field below:");
  chooseImageFolderButton.setText("Choose...");
  chooseImageFolderButton.addActionListener(formListener);
  soundFileHelpLable.setText("Drag a sound file into the field below (.au, .aiff, .wav, .mp3):");
  chooseSoundFileButton.setText("Choose...");
  chooseSoundFileButton.addActionListener(formListener);
  createMovieButton.setText("Create Movie...");
  createMovieButton.addActionListener(formListener);
  Font font=new Font("Dialog",Font.PLAIN,11);
  widthLabel.setFont(font);
  widthLabel.setText("Width:");
  widthField.setColumns(4);
  widthField.setFont(font);
  widthField.setText("320");
  heightLabel.setFont(font);
  heightLabel.setText("Height:");
  heightField.setColumns(4);
  heightField.setFont(font);
  heightField.setText("240");
  compressionLabel.setFont(font);
  compressionLabel.setText("Compression:");
  compressionBox.setFont(font);
  compressionBox.setModel(new DefaultComboBoxModel(new String[]{"None","Animation","JPEG","PNG"}));
  fpsLabel.setFont(font);
  fpsLabel.setText("Frame Rate:");
  fpsField.setColumns(4);
  fpsField.setFont(font);
  fpsField.setText("30");
  passThroughCheckBox.setFont(font);
  passThroughCheckBox.setText("Same size as originals");
  passThroughCheckBox.setToolTipText("Check this box if the folder contains already encoded video frames in the desired size.");
  GroupLayout layout=new GroupLayout(getContentPane());
  getContentPane().setLayout(layout);
  layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(61,61,61).addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(widthLabel).addComponent(fpsLabel)).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(fpsField,GroupLayout.PREFERRED_SIZE,GroupLayout.DEFAULT_SIZE,GroupLayout.PREFERRED_SIZE).addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED).addComponent(compressionLabel).addGap(1,1,1).addComponent(compressionBox,GroupLayout.PREFERRED_SIZE,GroupLayout.DEFAULT_SIZE,GroupLayout.PREFERRED_SIZE).addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED).addComponent(passThroughCheckBox)).addGroup(layout.createSequentialGroup().addComponent(widthField,GroupLayout.PREFERRED_SIZE,GroupLayout.DEFAULT_SIZE,GroupLayout.PREFERRED_SIZE).addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED).addComponent(heightLabel).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addComponent(heightField,GroupLayout.PREFERRED_SIZE,GroupLayout.DEFAULT_SIZE,GroupLayout.PREFERRED_SIZE))).addGap(41,41,41)).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(aboutLabel,GroupLayout.DEFAULT_SIZE,484,Short.MAX_VALUE).addComponent(imageFolderHelpLabel).addComponent(soundFileHelpLable).addGroup(layout.createSequentialGroup().addComponent(soundFileField,GroupLayout.DEFAULT_SIZE,372,Short.MAX_VALUE).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addComponent(chooseSoundFileButton)).addComponent(createMovieButton,GroupLayout.Alignment.TRAILING).addGroup(GroupLayout.Alignment.TRAILING,layout.createSequentialGroup().addComponent(imageFolderField,GroupLayout.DEFAULT_SIZE,372,Short.MAX_VALUE).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addComponent(chooseImageFolderButton)))).addGroup(layout.createSequentialGroup().addContainerGap()))));
  layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(aboutLabel,GroupLayout.PREFERRED_SIZE,GroupLayout.DEFAULT_SIZE,GroupLayout.PREFERRED_SIZE).addGap(18,18,18).addComponent(imageFolderHelpLabel).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE).addComponent(imageFolderField,GroupLayout.PREFERRED_SIZE,GroupLayout.DEFAULT_SIZE,GroupLayout.PREFERRED_SIZE).addComponent(chooseImageFolderButton)).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE).addComponent(widthLabel).addComponent(widthField,GroupLayout.PREFERRED_SIZE,GroupLayout.DEFAULT_SIZE,GroupLayout.PREFERRED_SIZE).addComponent(heightLabel).addComponent(heightField,GroupLayout.PREFERRED_SIZE,GroupLayout.DEFAULT_SIZE,GroupLayout.PREFERRED_SIZE)).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE).addComponent(compressionBox,GroupLayout.PREFERRED_SIZE,GroupLayout.DEFAULT_SIZE,GroupLayout.PREFERRED_SIZE).addComponent(fpsLabel).addComponent(fpsField,GroupLayout.PREFERRED_SIZE,GroupLayout.DEFAULT_SIZE,GroupLayout.PREFERRED_SIZE).addComponent(compressionLabel).addComponent(passThroughCheckBox)).addGap(18,18,18).addComponent(soundFileHelpLable).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE).addComponent(soundFileField,GroupLayout.PREFERRED_SIZE,GroupLayout.DEFAULT_SIZE,GroupLayout.PREFERRED_SIZE).addComponent(chooseSoundFileButton)).addGap(18,18,18).addComponent(createMovieButton).addContainerGap()));
  pack();
}
