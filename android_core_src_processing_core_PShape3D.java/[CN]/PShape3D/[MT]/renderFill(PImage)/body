{
  pgl.enableVertexArrays();
  pgl.enableColorArrays();
  pgl.enableNormalArrays();
  pgl.enableTexCoordArrays();
  for (int i=0; i < fillIndexData.size(); i++) {
    IndexData index=(IndexData)fillIndexData.get(i);
    int first=index.first;
    int offset=index.offset;
    int size=index.size;
    pgl.bindVertexBuffer(root.glFillVertexBufferID);
    pgl.setVertexFormat(3,first);
    pgl.bindVertexBuffer(root.glFillColorBufferID);
    pgl.setColorFormat(4,first);
    pgl.bindVertexBuffer(root.glFillNormalBufferID);
    pgl.setNormalFormat(3,first);
    pgl.bindVertexBuffer(root.glFillTexCoordBufferID);
    pgl.setTexCoordFormat(2,first);
    PTexture tex=null;
    if (textureImage != null) {
      tex=pg.getTexture(textureImage);
      if (tex != null) {
        pgl.enableTexturing(tex.glTarget);
        pgl.setActiveTexUnit(0);
        pgl.bindTexture(tex.glTarget,tex.glID);
      }
    }
    pgl.bindIndexBuffer(root.glFillIndexBufferID);
    pgl.renderIndexBuffer(offset,size);
    if (tex != null) {
      pgl.unbindTexture(tex.glTarget);
      pgl.disableTexturing(tex.glTarget);
    }
    pgl.unbindIndexBuffer();
    pgl.unbindVertexBuffer();
  }
  pgl.disableVertexArrays();
  pgl.disableColorArrays();
  pgl.disableNormalArrays();
  pgl.disableTexCoordArrays();
}
