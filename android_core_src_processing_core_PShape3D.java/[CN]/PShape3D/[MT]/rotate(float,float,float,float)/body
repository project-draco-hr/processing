{
  loadVertices();
  float c=PApplet.cos(angle);
  float s=PApplet.sin(angle);
  float t=1.0f - c;
  float[] m=new float[9];
  m[0]=(t * v0 * v0) + c;
  m[1]=(t * v0 * v1) - (s * v2);
  m[2]=(t * v0 * v2) + (s * v1);
  m[3]=(t * v0 * v1) + (s * v2);
  m[4]=(t * v1 * v1) + c;
  m[5]=(t * v1 * v2) - (s * v0);
  m[6]=(t * v0 * v2) - (s * v1);
  m[7]=(t * v1 * v2) + (s * v0);
  m[8]=(t * v2 * v2) + c;
  float x, y, z;
  for (int i=0; i < vertexCount; i++) {
    x=vertices[3 * i + 0] - xmin;
    y=vertices[3 * i + 1] - ymin;
    z=vertices[3 * i + 2] - zmin;
    vertices[3 * i + 0]=m[0] * x + m[1] * y + m[2] * z + xmin;
    vertices[3 * i + 1]=m[3] * x + m[4] * y + m[5] * z + ymin;
    vertices[3 * i + 2]=m[6] * x + m[7] * y + m[8] * z + zmin;
  }
  updateVertices();
}
