{
  if (last < first || first < firstVertex || lastVertex < last) {
    PGraphics.showWarning("PShape3D: wrong vertex index");
    updateElement=-1;
    return;
  }
  if (updateElement != -1) {
    PGraphics.showWarning("PShape3D: can load only one type of data at the time");
    return;
  }
  if (PGraphicsAndroid3D.maxTextureUnits <= unit) {
    PGraphics.showWarning("PShape3D: wrong texture unit");
    return;
  }
  updateElement=TEXCOORDS;
  firstUpdateIdx=first;
  lastUpdateIdx=last;
  updateTexunit=unit;
  if (numTexBuffers <= unit) {
    addTexBuffers(unit - numTexBuffers + 1);
  }
  getGl().glBindBuffer(GL11.GL_ARRAY_BUFFER,glTexCoordBufferID[unit]);
  texcoords=allTexcoords[unit];
}
