{
  pgl.enableVertexArrays();
  pgl.enableColorArrays();
  pgl.enableNormalArrays();
  pgl.enableTexCoordArrays();
  pgl.bindVertexBuffer(root.glFillVertexBufferID);
  pgl.bindVertexBuffer(root.glFillColorBufferID);
  pgl.bindVertexBuffer(root.glFillNormalBufferID);
  pgl.bindVertexBuffer(root.glFillTexCoordBufferID);
  PTexture tex=null;
  if (textureImage != null) {
    tex=renderer.getTexture(textureImage);
    if (tex != null) {
      pgl.enableTexturing(tex.glTarget);
      pgl.setActiveTexUnit(0);
      pgl.bindTexture(tex.glTarget,tex.glID);
    }
  }
  pgl.bindIndexBuffer(root.glFillIndexBufferID);
  for (int i=0; i < fillIndexData.size(); i++) {
    IndexData index=(IndexData)fillIndexData.get(i);
    int first=index.first;
    int offset=index.offset;
    int size=index.size;
    pgl.renderIndexBuffer(offset,size);
  }
  if (tex != null) {
    pgl.unbindTexture(tex.glTarget);
    pgl.disableTexturing(tex.glTarget);
  }
  pgl.unbindIndexBuffer();
  pgl.unbindVertexBuffer();
  pgl.disableVertexArrays();
  pgl.disableColorArrays();
  pgl.disableNormalArrays();
  pgl.disableTexCoordArrays();
}
