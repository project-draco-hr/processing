{
  if (pixels == null) {
    throw new RuntimeException("PTexture: null pixels array");
  }
  if (pixels.length != w * h) {
    throw new RuntimeException("PTexture: wrong length of pixels array");
  }
  if (glID == 0) {
    createTexture(width,height);
  }
  gl.glEnable(glTarget);
  gl.glBindTexture(glTarget,glID);
  if (usingMipmaps) {
    if (a3d.gl11 != null && PGraphicsAndroid3D.mipmapSupported) {
      int[] rgbaPixels=new int[w * h];
      convertToRGBA(pixels,rgbaPixels,format,w,h);
      gl.glTexParameterf(GL11.GL_TEXTURE_2D,GL11.GL_GENERATE_MIPMAP,GL11.GL_TRUE);
      setTexels(x,y,w,h,rgbaPixels);
    }
 else {
      if (w != width || h != height) {
        System.err.println("Sorry but I don't know how to generate mipmaps for a subregion.");
        return;
      }
      int w0=glWidth;
      int h0=glHeight;
      int[] argbPixels=new int[w0 * h0];
      convertToARGB(pixels,argbPixels,format);
      int level=0;
      Bitmap bitmap=Bitmap.createBitmap(w0,h0,Config.ARGB_8888);
      bitmap.setPixels(argbPixels,0,w0,0,0,w0,h0);
      while (w0 >= 1 || h0 >= 1) {
        GLUtils.texImage2D(glTarget,level,bitmap,0);
        if (w0 == 1 || h0 == 1) {
          break;
        }
        level++;
        h0/=2;
        w0/=2;
        Bitmap bitmap2=Bitmap.createScaledBitmap(bitmap,w0,h0,true);
        bitmap.recycle();
        bitmap=bitmap2;
      }
    }
  }
 else {
    int[] rgbaPixels=new int[w * h];
    convertToRGBA(pixels,rgbaPixels,format,w,h);
    setTexels(x,y,w,h,rgbaPixels);
  }
  gl.glDisable(glTarget);
}
