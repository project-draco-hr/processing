{
  if (params.target == TEXTURE2D) {
    glTarget=GL10.GL_TEXTURE_2D;
  }
 else {
    throw new RuntimeException("GTexture: Unknown texture target");
  }
  if (params.format == RGB) {
    glFormat=GL10.GL_RGB;
  }
 else   if (params.format == ARGB) {
    glFormat=GL10.GL_RGBA;
  }
 else   if (params.format == ALPHA) {
    glFormat=GL10.GL_ALPHA;
  }
 else {
    throw new RuntimeException("GTexture: Unknown texture format");
  }
  if (params.minFilter == NEAREST) {
    glMinFilter=GL10.GL_NEAREST;
  }
 else   if (params.minFilter == LINEAR) {
    glMinFilter=GL10.GL_LINEAR;
  }
 else   if (params.minFilter == NEAREST_MIPMAP_NEAREST) {
    glMinFilter=GL10.GL_NEAREST_MIPMAP_NEAREST;
  }
 else   if (params.minFilter == LINEAR_MIPMAP_NEAREST) {
    glMinFilter=GL10.GL_LINEAR_MIPMAP_NEAREST;
  }
 else   if (params.minFilter == NEAREST_MIPMAP_LINEAR) {
    glMinFilter=GL10.GL_NEAREST_MIPMAP_LINEAR;
  }
 else   if (params.minFilter == LINEAR_MIPMAP_LINEAR) {
    glMinFilter=GL10.GL_LINEAR_MIPMAP_LINEAR;
  }
 else {
    throw new RuntimeException("GTexture: Unknown minimization filter");
  }
  if (params.magFilter == NEAREST) {
    glMagFilter=GL10.GL_NEAREST;
  }
 else   if (params.magFilter == LINEAR) {
    glMagFilter=GL10.GL_LINEAR;
  }
 else {
    throw new RuntimeException("GTexture: Unknown magnification filter");
  }
  if (params.wrapU == CLAMP) {
    glWrapS=GL10.GL_CLAMP_TO_EDGE;
  }
 else   if (params.wrapU == REPEAT) {
    glWrapS=GL10.GL_REPEAT;
  }
 else {
    throw new RuntimeException("GTexture: Unknown wrapping mode");
  }
  if (params.wrapV == CLAMP) {
    glWrapT=GL10.GL_CLAMP_TO_EDGE;
  }
 else   if (params.wrapV == REPEAT) {
    glWrapT=GL10.GL_REPEAT;
  }
 else {
    throw new RuntimeException("GTexture: Unknown wrapping mode");
  }
}
