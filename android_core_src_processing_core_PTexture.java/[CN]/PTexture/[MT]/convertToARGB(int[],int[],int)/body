{
  int t=0;
  int p=0;
  int pixel;
switch (arrayFormat) {
case ALPHA:
    for (int y=0; y < height; y++) {
      for (int x=0; x < width; x++) {
        pixel=intArray[p++];
        tIntArray[t++]=(pixel << 24) & 0xFF000000;
      }
      t+=glWidth - width;
    }
  break;
case RGB:
for (int y=0; y < height; y++) {
  for (int x=0; x < width; x++) {
    pixel=intArray[p++];
    tIntArray[t++]=pixel | 0xFF000000;
  }
  t+=glWidth - width;
}
break;
case ARGB:
for (int y=0; y < height; y++) {
PApplet.arrayCopy(intArray,width * y,tIntArray,glWidth * y,width);
}
break;
case YUV420:
int frameSize=width * height;
for (int j=0, yp=0, yt=0; j < height; j++) {
int uvp=frameSize + (j >> 1) * width, u=0, v=0;
for (int i=0; i < width; i++, yp++) {
int y=(0xFF & ((int)intArray[yp])) - 16;
if (y < 0) y=0;
if ((i & 1) == 0) {
v=(0xFF & intArray[uvp++]) - 128;
u=(0xFF & intArray[uvp++]) - 128;
}
int y1192=1192 * y;
int r=(y1192 + 1634 * v);
int g=(y1192 - 833 * v - 400 * u);
int b=(y1192 + 2066 * u);
if (r < 0) r=0;
 else if (r > 262143) r=262143;
if (g < 0) g=0;
 else if (g > 262143) g=262143;
if (b < 0) b=0;
 else if (b > 262143) b=262143;
tIntArray[yt++]=0xFF000000 | ((r << 6) & 0xFF0000) | ((g >> 2) & 0xFF00)| ((b >> 10) & 0xFF);
}
yt+=glWidth - width;
}
break;
}
}
