{
  statusNotice(Language.text("editor.status.printing"));
  StringBuilder html=new StringBuilder("<html><body>");
  for (  SketchCode tab : sketch.getCode()) {
    html.append("<b>" + tab.getPrettyName() + "</b><br>");
    html.append(textarea.getTextAsHtml((SyntaxDocument)tab.getDocument()));
    html.append("<br>");
  }
  html.setLength(html.length() - 4);
  html.append("</body></html>");
  JTextPane jtp=new JTextPane();
  jtp.setEditorKit(new HTMLEditorKit(){
    public ViewFactory getViewFactory(){
      return new HTMLFactory(){
        public View create(        Element e){
          View v=super.create(e);
          if (!(v instanceof javax.swing.text.html.ParagraphView))           return v;
 else           return new javax.swing.text.html.ParagraphView(e){
            protected SizeRequirements calculateMinorAxisRequirements(            int axis,            SizeRequirements r){
              r=super.calculateMinorAxisRequirements(axis,r);
              r.minimum=1;
              return r;
            }
          }
;
        }
      }
;
    }
  }
);
  jtp.setFont(new Font(Preferences.get("editor.font.family"),Font.PLAIN,10));
  jtp.setText(html.toString().replace("\n","<br>").replaceAll("(?<!&nbsp;)&nbsp;"," "));
  if (printerJob == null) {
    printerJob=PrinterJob.getPrinterJob();
  }
  if (pageFormat != null) {
    printerJob.setPrintable(jtp.getPrintable(null,null),pageFormat);
  }
 else {
    printerJob.setPrintable(jtp.getPrintable(null,null));
  }
  printerJob.setJobName(sketch.getCurrentCode().getPrettyName());
  if (printerJob.printDialog()) {
    try {
      printerJob.print();
      statusNotice(Language.text("editor.status.printing.done"));
    }
 catch (    PrinterException pe) {
      statusError(Language.text("editor.status.printing.error"));
      pe.printStackTrace();
    }
  }
 else {
    statusNotice(Language.text("editor.status.printing.canceled"));
  }
}
