{
  if (family == GROUP) {
    havePolys=false;
    haveLines=false;
    havePoints=false;
    for (int i=0; i < childCount; i++) {
      PShapeOpenGL child=(PShapeOpenGL)children[i];
      child.aggregateImpl();
      havePolys|=child.havePolys;
      haveLines|=child.haveLines;
      havePoints|=child.havePoints;
    }
  }
 else {
    havePolys=-1 < firstPolyIndexCache && -1 < lastpolyIndexCache;
    haveLines=-1 < firstLineIndexCache && -1 < lastLineIndexCache;
    havePoints=-1 < firstPointIndexCache && -1 < lastPointIndexCache;
  }
  if (havePolys)   updatePolyIndexCache();
  if (is3D()) {
    if (haveLines)     updateLineIndexCache();
    if (havePoints)     updatePointIndexCache();
  }
  if (matrix != null) {
    if (havePolys)     tessGeo.applyMatrixOnPolyGeometry(matrix,firstPolyVertex,lastPolyVertex);
    if (is3D()) {
      if (haveLines)       tessGeo.applyMatrixOnLineGeometry(matrix,firstLineVertex,lastLineVertex);
      if (havePoints)       tessGeo.applyMatrixOnPointGeometry(matrix,firstPointVertex,lastPointVertex);
    }
  }
}
