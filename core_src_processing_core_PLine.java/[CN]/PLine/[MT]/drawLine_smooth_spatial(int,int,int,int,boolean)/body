{
  int xi, yi;
  int offset=0;
  int temp;
  int end;
  float iz=m_z0;
  int ir=(int)m_r0;
  int ig=(int)m_g0;
  int ib=(int)m_b0;
  int ia=(int)m_a0;
  if (vertical) {
    xi=x0 << 16;
    yi=y0 << 16;
    end=length + y0;
    while ((yi >> 16) < end) {
      offset=(yi >> 16) * SCREEN_WIDTH + (xi >> 16);
      int pr=ir & 0xFF0000;
      int pg=(ig >> 8) & 0xFF00;
      int pb=(ib >> 16);
      if (iz <= m_zbuffer[offset]) {
        int alpha=(((~xi >> 8) & 0xFF) * (ia >> 16)) >> 8;
        int r0=m_pixels[offset];
        int g0=r0 & 0xFF00;
        int b0=r0 & 0xFF;
        r0&=0xFF0000;
        r0=r0 + (((pr - r0) * alpha) >> 8);
        g0=g0 + (((pg - g0) * alpha) >> 8);
        b0=b0 + (((pb - b0) * alpha) >> 8);
        m_pixels[offset]=0xFF000000 | (r0 & 0xFF0000) | (g0 & 0xFF00)| (b0 & 0xFF);
        m_zbuffer[offset]=iz;
      }
      temp=((xi >> 16) + 1);
      if (temp >= SCREEN_WIDTH) {
        xi+=dt;
        yi+=(1 << 16);
        continue;
      }
      offset=(yi >> 16) * SCREEN_WIDTH + temp;
      if (iz <= m_zbuffer[offset]) {
        int alpha=(((xi >> 8) & 0xFF) * (ia >> 16)) >> 8;
        int r0=m_pixels[offset];
        int g0=r0 & 0xFF00;
        int b0=r0 & 0xFF;
        r0&=0xFF0000;
        r0=r0 + (((pr - r0) * alpha) >> 8);
        g0=g0 + (((pg - g0) * alpha) >> 8);
        b0=b0 + (((pb - b0) * alpha) >> 8);
        m_pixels[offset]=0xFF000000 | (r0 & 0xFF0000) | (g0 & 0xFF00)| (b0 & 0xFF);
        m_zbuffer[offset]=iz;
      }
      xi+=dt;
      yi+=(1 << 16);
      iz+=dz;
      ir+=dr;
      ig+=dg;
      ib+=db;
      ia+=da;
    }
  }
 else {
    xi=x0 << 16;
    yi=y0 << 16;
    end=length + x0;
    while ((xi >> 16) < end) {
      offset=(yi >> 16) * SCREEN_WIDTH + (xi >> 16);
      int pr=ir & 0xFF0000;
      int pg=(ig >> 8) & 0xFF00;
      int pb=(ib >> 16);
      if (iz <= m_zbuffer[offset]) {
        int alpha=(((~yi >> 8) & 0xFF) * (ia >> 16)) >> 8;
        int r0=m_pixels[offset];
        int g0=r0 & 0xFF00;
        int b0=r0 & 0xFF;
        r0&=0xFF0000;
        r0=r0 + (((pr - r0) * alpha) >> 8);
        g0=g0 + (((pg - g0) * alpha) >> 8);
        b0=b0 + (((pb - b0) * alpha) >> 8);
        m_pixels[offset]=0xFF000000 | (r0 & 0xFF0000) | (g0 & 0xFF00)| (b0 & 0xFF);
        m_zbuffer[offset]=iz;
      }
      temp=((yi >> 16) + 1);
      if (temp >= SCREEN_HEIGHT) {
        xi+=(1 << 16);
        yi+=dt;
        continue;
      }
      offset=temp * SCREEN_WIDTH + (xi >> 16);
      if (iz <= m_zbuffer[offset]) {
        int alpha=(((yi >> 8) & 0xFF) * (ia >> 16)) >> 8;
        int r0=m_pixels[offset];
        int g0=r0 & 0xFF00;
        int b0=r0 & 0xFF;
        r0&=0xFF0000;
        r0=r0 + (((pr - r0) * alpha) >> 8);
        g0=g0 + (((pg - g0) * alpha) >> 8);
        b0=b0 + (((pb - b0) * alpha) >> 8);
        m_pixels[offset]=0xFF000000 | (r0 & 0xFF0000) | (g0 & 0xFF00)| (b0 & 0xFF);
        m_zbuffer[offset]=iz;
      }
      xi+=(1 << 16);
      yi+=dt;
      iz+=dz;
      ir+=dr;
      ig+=dg;
      ib+=db;
      ia+=da;
    }
  }
}
