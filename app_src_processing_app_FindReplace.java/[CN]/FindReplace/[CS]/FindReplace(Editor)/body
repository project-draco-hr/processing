{
  super(Language.text("find"));
  this.editor=editor;
  Container pain=getContentPane();
  JLabel findLabel=new JLabel(Language.text("find.find"));
  JLabel replaceLabel=new JLabel(Language.text("find.replace_with"));
  findField=new JTextField();
  replaceField=new JTextField();
  if (findString != null)   findField.setText(findString);
  if (replaceString != null)   replaceField.setText(replaceString);
  ignoreCaseBox=new JCheckBox(Language.text("find.ignore_case"));
  ignoreCaseBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      ignoreCase=ignoreCaseBox.isSelected();
    }
  }
);
  ignoreCaseBox.setSelected(ignoreCase);
  allTabsBox=new JCheckBox(Language.text("find.all_tabs"));
  allTabsBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      allTabs=allTabsBox.isSelected();
    }
  }
);
  allTabsBox.setSelected(allTabs);
  allTabsBox.setEnabled(true);
  wrapAroundBox=new JCheckBox(Language.text("find.wrap_around"));
  wrapAroundBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      wrapAround=wrapAroundBox.isSelected();
    }
  }
);
  wrapAroundBox.setSelected(wrapAround);
  GroupLayout layout=new GroupLayout(pain);
  pain.setLayout(layout);
  layout.setAutoCreateGaps(true);
  layout.setAutoCreateContainerGaps(true);
  Group buttonsHorizontalGroup=layout.createSequentialGroup();
  replaceAllButton=new JButton(Language.text("find.btn.replace_all"));
  replaceButton=new JButton(Language.text("find.btn.replace"));
  replaceAndFindButton=new JButton(Language.text("find.btn.find_and_replace"));
  previousButton=new JButton(Language.text("find.btn.previous"));
  findButton=new JButton(Language.text("find.btn.find"));
  if (Base.isMacOS()) {
    buttonsHorizontalGroup.addComponent(replaceAllButton).addComponent(replaceButton).addComponent(replaceAndFindButton).addComponent(previousButton).addComponent(findButton);
  }
 else {
    buttonsHorizontalGroup.addComponent(findButton).addComponent(previousButton).addComponent(replaceAndFindButton).addComponent(replaceButton).addComponent(replaceAllButton);
  }
  setFound(false);
  Group buttonsVerticalGroup=layout.createParallelGroup();
  buttonsVerticalGroup.addComponent(findButton).addComponent(previousButton).addComponent(replaceAndFindButton).addComponent(replaceButton).addComponent(replaceAllButton);
  layout.setHorizontalGroup(layout.createParallelGroup().addGroup(GroupLayout.Alignment.TRAILING,layout.createSequentialGroup().addGap(replaceLabel.getPreferredSize().width - findLabel.getPreferredSize().width).addComponent(findLabel).addComponent(findField)).addGroup(GroupLayout.Alignment.TRAILING,layout.createSequentialGroup().addComponent(replaceLabel).addComponent(replaceField)).addGroup(GroupLayout.Alignment.TRAILING,layout.createSequentialGroup().addComponent(ignoreCaseBox).addComponent(allTabsBox).addComponent(wrapAroundBox)).addGroup(buttonsHorizontalGroup));
  layout.setVerticalGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER).addComponent(findLabel).addComponent(findField)).addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER).addComponent(replaceLabel).addComponent(replaceField)).addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER).addComponent(ignoreCaseBox).addComponent(allTabsBox).addComponent(wrapAroundBox)).addGroup(buttonsVerticalGroup));
  setLocationRelativeTo(null);
  Dimension size=layout.preferredLayoutSize(pain);
  setSize(size.width,size.height);
  Dimension screen=Toolkit.getScreenSize();
  setLocation((screen.width - size.width) / 2,(screen.height - size.height) / 2);
  replaceButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      replace();
    }
  }
);
  replaceAllButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      replaceAll();
    }
  }
);
  replaceAndFindButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      replaceAndFindNext();
    }
  }
);
  findButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      findNext();
    }
  }
);
  previousButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      findPrevious();
    }
  }
);
  getRootPane().setDefaultButton(findButton);
  setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
  addWindowListener(new WindowAdapter(){
    public void windowClosing(    WindowEvent e){
      handleClose();
    }
  }
);
  Toolkit.registerWindowCloseKeys(getRootPane(),new ActionListener(){
    public void actionPerformed(    ActionEvent actionEvent){
      handleClose();
    }
  }
);
  Toolkit.setIcon(this);
  addWindowListener(new WindowAdapter(){
    public void windowActivated(    WindowEvent e){
      findField.requestFocusInWindow();
      findField.selectAll();
    }
  }
);
  pack();
  setResizable(true);
  setLocationRelativeTo(null);
}
