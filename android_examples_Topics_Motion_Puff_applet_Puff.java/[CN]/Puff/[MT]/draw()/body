{
  background(0);
  noStroke();
  fill(255,255,255,5);
  for (int i=0; i < cells; i++) {
    if (i == 0) {
      px[i]=headX + sin(radians(angle[i])) * radiiX[i];
      py[i]=headY + cos(radians(angle[i])) * radiiY[i];
    }
 else {
      px[i]=px[i - 1] + cos(radians(angle[i])) * radiiX[i];
      py[i]=py[i - 1] + sin(radians(angle[i])) * radiiY[i];
      if (px[i] >= width - cellRadius[i] / 2 || px[i] <= cellRadius[i] / 2) {
        radiiX[i]*=-1;
        cellRadius[i]=random(1,40);
        frequency[i]=random(-13,13);
      }
      if (py[i] >= height - cellRadius[i] / 2 || py[i] <= cellRadius[i] / 2) {
        radiiY[i]*=-1;
        cellRadius[i]=random(1,40);
        frequency[i]=random(-9,9);
      }
    }
    ellipse(px[i],py[i],cellRadius[i],cellRadius[i]);
    angle[i]+=frequency[i];
  }
  headX+=speedX;
  headY+=speedY;
  if (headX >= width - cellRadius[0] / 2 || headX <= cellRadius[0] / 2) {
    speedX*=-1;
  }
  if (headY >= height - cellRadius[0] / 2 || headY <= cellRadius[0] / 2) {
    speedY*=-1;
  }
}
