{
  try {
    while ((Thread.currentThread() == thread) && !finished) {
      if (PApplet.THREAD_DEBUG)       println(Thread.currentThread().getName() + " formerly nextFrame()");
      if (looping || redraw) {
        if (fpsTarget != 0)         framerate_delay();
synchronized (g) {
          if (THREAD_DEBUG)           println(Thread.currentThread().getName() + " 1a beginFrame");
          g.beginFrame();
          if (THREAD_DEBUG)           println(Thread.currentThread().getName() + " 1b draw");
          for (int i=0; i < libraryCount; i++) {
            if (libraryCalls[i][PLibrary.PRE])             libraries[i].pre();
          }
          draw();
          dequeueMouseEvents();
          dequeueKeyEvents();
          if (THREAD_DEBUG)           println(Thread.currentThread().getName() + " 2b endFrame");
          for (int i=0; i < libraryCount; i++) {
            if (libraryCalls[i][PLibrary.DRAW])             libraries[i].draw();
          }
          g.endFrame();
          frameCount++;
          if (THREAD_DEBUG)           println(Thread.currentThread().getName() + "   3a calling repaint() " + frameCount);
          repaint();
          if (THREAD_DEBUG)           println(Thread.currentThread().getName() + "   3b calling Toolkit.sync " + frameCount);
          getToolkit().sync();
          if (THREAD_DEBUG)           println(Thread.currentThread().getName() + "   3c done " + frameCount);
          for (int i=0; i < libraryCount; i++) {
            if (libraryCalls[i][PLibrary.POST])             libraries[i].post();
          }
        }
      }
      redraw=false;
      try {
        if (THREAD_DEBUG)         println(Thread.currentThread().getName() + " " + looping+ " "+ redraw);
        if (THREAD_DEBUG)         println(Thread.currentThread().getName() + " gonna sleep");
        Thread.sleep(looping ? 1 : 10000);
        if (THREAD_DEBUG)         println(Thread.currentThread().getName() + " outta sleep");
      }
 catch (      InterruptedException e) {
      }
    }
  }
 catch (  Exception e) {
    finished=true;
    if (leechErr != null) {
      leechErr.println(LEECH_WAKEUP);
      e.printStackTrace(leechErr);
    }
 else {
      System.err.println(LEECH_WAKEUP);
      e.printStackTrace();
    }
  }
  if (THREAD_DEBUG)   println(Thread.currentThread().getName() + " thread finished");
}
