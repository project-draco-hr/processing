{
  String openglError="Before using OpenGL, first select " + "Import Library > opengl from the Sketch menu.";
  try {
    Class rendererClass=Class.forName(irenderer);
    Class constructorParams[]=null;
    Object constructorValues[]=null;
    if (ipath == null) {
      constructorParams=new Class[]{Integer.TYPE,Integer.TYPE,PApplet.class};
      constructorValues=new Object[]{new Integer(iwidth),new Integer(iheight),applet};
    }
 else {
      constructorParams=new Class[]{Integer.TYPE,Integer.TYPE,PApplet.class,String.class};
      constructorValues=new Object[]{new Integer(iwidth),new Integer(iheight),applet,ipath};
    }
    Constructor constructor=rendererClass.getConstructor(constructorParams);
    return (PGraphics)constructor.newInstance(constructorValues);
  }
 catch (  InvocationTargetException ite) {
    String msg=ite.getTargetException().getMessage();
    if ((msg != null) && (msg.indexOf("no jogl in java.library.path") != -1)) {
      throw new RuntimeException(openglError);
    }
 else {
      Throwable target=ite.getTargetException();
      target.printStackTrace();
      throw new RuntimeException(target.getMessage());
    }
  }
catch (  ClassNotFoundException cnfe) {
    if (cnfe.getMessage().indexOf("processing.opengl.PGraphicsGL") != -1) {
      throw new RuntimeException(openglError);
    }
 else {
      throw new RuntimeException("You need to use \"Import Library\" " + "to add " + irenderer + " to your sketch.");
    }
  }
catch (  Exception e) {
    if ((e instanceof IllegalArgumentException) || (e instanceof NoSuchMethodException) || (e instanceof IllegalAccessException)) {
      String msg="public " + irenderer.substring(irenderer.lastIndexOf('.') + 1) + "(int width, int height, PApplet parent"+ ((ipath == null) ? "" : ", String filename")+ ") does not exist.";
      throw new RuntimeException(msg);
    }
 else {
      e.printStackTrace();
      return null;
    }
  }
}
