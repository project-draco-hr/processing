{
  if (PApplet.javaVersion >= 1.4f) {
    if (loadImageFormats == null) {
      try {
        Class ioClass=Class.forName("javax.imageio.ImageIO");
        Method getFormatNamesMethod=ioClass.getMethod("getReaderFormatNames",(Class[])null);
        loadImageFormats=(String[])getFormatNamesMethod.invoke((Class[])null,(Object[])null);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
    if (loadImageFormats != null) {
      for (int i=0; i < loadImageFormats.length; i++) {
        if (filename.endsWith("." + loadImageFormats[i])) {
          return loadImageIO(filename);
        }
      }
    }
  }
  if (filename.toLowerCase().endsWith(".tga")) {
    try {
      return loadImageTGA(filename);
    }
 catch (    IOException e) {
      e.printStackTrace();
      return null;
    }
  }
  byte bytes[]=loadBytes(filename);
  if (bytes == null)   return null;
  if (filename.toLowerCase().endsWith(".tif") || filename.toLowerCase().endsWith(".tiff")) {
    return PImage.loadTIFF(bytes);
  }
  Image awtImage=Toolkit.getDefaultToolkit().createImage(bytes);
  MediaTracker tracker=new MediaTracker(this);
  tracker.addImage(awtImage,0);
  try {
    tracker.waitForAll();
  }
 catch (  InterruptedException e) {
  }
  PImage image=new PImage(awtImage);
  if ((filename.toLowerCase().endsWith(".gif")) || (filename.toLowerCase().endsWith(".png"))) {
    for (int i=0; i < image.pixels.length; i++) {
      if ((image.pixels[i] & 0xff000000) != 0xff000000) {
        image.format=ARGB;
        break;
      }
    }
  }
  return image;
}
