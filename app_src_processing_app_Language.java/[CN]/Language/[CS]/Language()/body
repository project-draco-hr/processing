{
  this.language=Locale.getDefault().getLanguage();
  this.languages=new HashMap<String,String>();
  final String[] SUPPORTED={"de","en","es","fr","ja","nl","pt"};
  for (  String code : SUPPORTED) {
    languages.put(code,Locale.forLanguageTag(code).getDisplayLanguage(Locale.forLanguageTag(code)));
  }
  if (!this.languages.containsKey(this.language)) {
    this.language="en";
  }
  try {
    File file=Base.getContentFile("lib/language.txt");
    if (file.exists()) {
      String language=PApplet.loadStrings(file)[0];
      language=language.trim().toLowerCase();
      if (!language.equals("")) {
        this.language=language;
      }
 else {
        Base.saveFile(this.language,file);
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  this.bundle=ResourceBundle.getBundle(Language.FILE,new Locale(this.language),new UTF8Control());
}
