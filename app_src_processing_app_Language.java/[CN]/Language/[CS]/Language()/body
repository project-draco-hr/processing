{
  this.language=Locale.getDefault().getLanguage();
  languages=new HashMap<String,String>();
  for (  String code : listSupported()) {
    languages.put(code,Locale.forLanguageTag(code).getDisplayLanguage(Locale.forLanguageTag(code)));
  }
  if (!languages.containsKey(language)) {
    language="en";
  }
  try {
    File file=Base.getContentFile("lib/language.txt");
    if (file.exists()) {
      String language=PApplet.loadStrings(file)[0];
      language=language.trim().toLowerCase();
      if (!language.equals("")) {
        this.language=language;
      }
 else {
        Base.saveFile(this.language,file);
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  bundle=ResourceBundle.getBundle(Language.FILE,new Locale(this.language),new UTF8Control());
}
