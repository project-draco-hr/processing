{
  this.editor=editor;
  this.pps=pps;
  editor.getJavaTextArea().getPainter().addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      isMouse1Down=isMouse1Down || (e.getButton() == MouseEvent.BUTTON1);
      isMouse2Down=isMouse2Down || (e.getButton() == MouseEvent.BUTTON2);
    }
    @Override public void mouseReleased(    MouseEvent e){
      boolean releasingMouse1=e.getButton() == MouseEvent.BUTTON1;
      boolean releasingMouse2=e.getButton() == MouseEvent.BUTTON2;
      if (JavaMode.inspectModeHotkeyEnabled && inspectModeEnabled && isMouse1Down&& releasingMouse1) {
        handleInspect(e);
      }
 else       if (!inspectModeEnabled && isMouse2Down && releasingMouse2) {
        handleInspect(e);
      }
      isMouse1Down=isMouse1Down && !releasingMouse1;
      isMouse2Down=isMouse2Down && !releasingMouse2;
    }
  }
);
  editor.getJavaTextArea().getPainter().addMouseMotionListener(new MouseAdapter(){
    @Override public void mouseDragged(    MouseEvent e){
      if (editor.isSelectionActive()) {
        inspectModeEnabled=false;
        isMouse2Down=false;
      }
    }
    @Override public void mouseMoved(    MouseEvent e){
      isMouse1Down=false;
      isMouse2Down=false;
      isHotkeyDown=mouseEventHotkeyTest.test(e);
      inspectModeEnabled=isHotkeyDown;
    }
  }
);
  editor.getJavaTextArea().addMouseWheelListener(new MouseAdapter(){
    @Override public void mouseWheelMoved(    MouseWheelEvent e){
      if (isMouse1Down)       inspectModeEnabled=false;
    }
  }
);
  editor.getJavaTextArea().addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    KeyEvent e){
      isHotkeyDown=isHotkeyDown || keyEventHotkeyTest.test(e);
      inspectModeEnabled=inspectModeEnabled || (!isMouse1Down && isHotkeyDown);
    }
    @Override public void keyReleased(    KeyEvent e){
      isHotkeyDown=isHotkeyDown && !keyEventHotkeyTest.test(e);
      inspectModeEnabled=inspectModeEnabled && isHotkeyDown;
    }
  }
);
}
