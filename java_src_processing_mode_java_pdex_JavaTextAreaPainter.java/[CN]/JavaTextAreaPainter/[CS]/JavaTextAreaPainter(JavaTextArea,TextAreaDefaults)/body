{
  super(textArea,defaults);
  addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent evt){
      if (!getJavaEditor().hasJavaTabs()) {
        if (evt.getButton() == MouseEvent.BUTTON1) {
          if ((evt.isControlDown() && !Platform.isMacOS()) || evt.isMetaDown()) {
            handleCtrlClick(evt);
          }
        }
      }
    }
  }
);
  addMouseListener(new MouseAdapter(){
    long lastTime;
    public void mousePressed(    MouseEvent event){
      JavaEditor javaEditor=getJavaEditor();
      if (javaEditor.isDebuggerEnabled()) {
        long thisTime=event.getWhen();
        if (thisTime - lastTime > 100) {
          if (event.getX() < Editor.LEFT_GUTTER) {
            int offset=getJavaTextArea().xyToOffset(event.getX(),event.getY());
            if (offset >= 0) {
              int lineIndex=getJavaTextArea().getLineOfOffset(offset);
              javaEditor.toggleBreakpoint(lineIndex);
            }
          }
          lastTime=thisTime;
        }
      }
    }
  }
);
  addMouseMotionListener(new MouseMotionAdapter(){
    @Override public void mouseMoved(    final MouseEvent evt){
      int line=textArea.yToLine(evt.getY());
      int x=evt.getX();
      LineMarker marker=getJavaEditor().findError(line);
      if (marker != null) {
        Problem problem=marker.getProblem();
        int lineOffset=textArea.getLineStartOffset(problem.getLineNumber());
        int lineStart=textArea.getLineStartOffset(line);
        int lineEnd=textArea.getLineStopOffset(line);
        int errorStart=lineOffset + problem.getPDELineStartOffset();
        int errorEnd=lineOffset + problem.getPDELineStopOffset() + 1;
        int startOffset=Math.max(errorStart,lineStart) - lineStart;
        int stopOffset=Math.min(errorEnd,lineEnd) - lineStart;
        if (x >= getJavaTextArea().offsetToX(line,startOffset) && x <= getJavaTextArea().offsetToX(line,stopOffset)) {
          setToolTipText(problem.getMessage());
          evt.consume();
        }
      }
    }
  }
);
  tweakMode=false;
  cursorType=Cursor.DEFAULT_CURSOR;
}
