{
  int line=evt.getY() / getFontMetrics().getHeight() + textArea.getFirstLine();
  if (line < 0 || line > textArea.getLineCount() - 1) {
    return null;
  }
  LineMarker marker=getJavaEditor().findError(line);
  if (marker != null) {
    Problem problem=marker.getProblem();
    int lineOffset=textArea.getLineStartOffset(problem.getLineNumber());
    int lineStart=textArea.getLineStartOffset(line);
    int lineEnd=textArea.getLineStopOffset(line);
    int errorStart=lineOffset + problem.getPDELineStartOffset();
    int errorEnd=lineOffset + problem.getPDELineStopOffset() + 1;
    int startOffset=Math.max(errorStart,lineStart) - lineStart;
    int stopOffset=Math.min(errorEnd,lineEnd) - lineStart;
    int x=evt.getX();
    if (x >= getJavaTextArea().offsetToX(line,startOffset) && x <= getJavaTextArea().offsetToX(line,stopOffset)) {
      getJavaEditor().statusToolTip(JavaTextAreaPainter.this,problem.getMessage(),problem.isError());
      return super.getToolTipText();
    }
  }
  return null;
}
