{
  if (errorCheckerService == null) {
    return;
  }
  if (errorCheckerService.problemsList == null) {
    return;
  }
  boolean notFound=true;
  boolean isWarning=false;
  Problem problem=null;
  for (  ErrorMarker emarker : errorCheckerService.getEditor().errorBar.errorPoints) {
    if (emarker.getProblem().getLineNumber() == line) {
      notFound=false;
      if (emarker.getType() == ErrorMarker.Warning) {
        isWarning=true;
      }
      problem=emarker.getProblem();
      break;
    }
  }
  if (notFound) {
    return;
  }
  int y=textArea.lineToY(line);
  y+=fm.getLeading() + fm.getMaxDescent();
  int start=textArea.getLineStartOffset(line) + problem.getPDELineStartOffset();
  int pLength=problem.getPDELineStopOffset() + 1 - problem.getPDELineStartOffset();
  try {
    String badCode=null;
    String goodCode=null;
    try {
      SyntaxDocument doc=textArea.getDocument();
      badCode=doc.getText(start,pLength);
      goodCode=doc.getText(textArea.getLineStartOffset(line),problem.getPDELineStartOffset());
    }
 catch (    BadLocationException bl) {
      return;
    }
    int aw=fm.stringWidth(trimRight(badCode)) + textArea.getHorizontalOffset();
    int rw=fm.stringWidth(badCode.trim());
    int x1=fm.stringWidth(goodCode) + (aw - rw), y1=y + fm.getHeight() - 2, x2=x1 + rw;
    x1+=getGutterWidth();
    x2+=getGutterWidth();
    gfx.setColor(errorColor);
    if (isWarning) {
      gfx.setColor(warningColor);
    }
    int xx=x1;
    while (xx < x2) {
      gfx.drawLine(xx,y1,xx + 2,y1 + 1);
      xx+=2;
      gfx.drawLine(xx,y1 + 1,xx + 2,y1);
      xx+=2;
    }
  }
 catch (  Exception e) {
    System.out.println("Looks like I messed up! XQTextAreaPainter.paintLine() : " + e);
  }
}
