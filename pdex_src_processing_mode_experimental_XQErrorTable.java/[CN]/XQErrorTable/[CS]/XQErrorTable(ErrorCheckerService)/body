{
  this.errorCheckerService=errorCheckerService;
  for (int i=0; i < this.getColumnModel().getColumnCount(); i++) {
    this.getColumnModel().getColumn(i).setPreferredWidth(columnWidths[i]);
  }
  this.getTableHeader().setReorderingAllowed(false);
  this.addMouseListener(new MouseAdapter(){
    @Override synchronized public void mouseReleased(    MouseEvent e){
      try {
        errorCheckerService.scrollToErrorLine(((XQErrorTable)e.getSource()).getSelectedRow());
      }
 catch (      Exception e1) {
        System.out.println("Exception XQErrorTable mouseReleased " + e);
      }
    }
  }
);
  this.getTableHeader().addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      columnResizing=true;
    }
    @Override public void mouseReleased(    MouseEvent e){
      columnResizing=false;
      for (int i=0; i < ((JTableHeader)e.getSource()).getColumnModel().getColumnCount(); i++) {
        columnWidths[i]=((JTableHeader)e.getSource()).getColumnModel().getColumn(i).getWidth();
      }
    }
  }
);
}
