{
  if (frmImportSuggest != null)   if (frmImportSuggest.isVisible())   return;
  log("Looking for class " + className);
  RegExpResourceFilter regf=new RegExpResourceFilter(Pattern.compile(".*"),Pattern.compile(className + ".class",Pattern.CASE_INSENSITIVE));
  String[] resources=classPath.findResources("",regf);
  ArrayList<String> candidates=new ArrayList<String>();
  for (  String res : resources) {
    candidates.add(res);
  }
  for (  Library lib : editor.dmode.contribLibraries) {
    ClassPath cp=factory.createFromPath(lib.getClassPath());
    resources=cp.findResources("",regf);
    for (    String res : resources) {
      candidates.add(res);
      log("Res: " + res);
    }
  }
  if (editor.getSketch().hasCodeFolder()) {
    File codeFolder=editor.getSketch().getCodeFolder();
    ClassPath cp=factory.createFromPath(Base.contentsToClassPath(codeFolder));
    resources=cp.findResources("",regf);
    for (    String res : resources) {
      candidates.add(res);
      log("Res: " + res);
    }
  }
  resources=new String[candidates.size()];
  for (int i=0; i < resources.length; i++) {
    resources[i]=candidates.get(i).replace('/','.').substring(0,candidates.get(i).length() - 6);
  }
  if (resources.length >= 1) {
    final JList classList=new JList(resources);
    classList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    frmImportSuggest=new JFrame();
    frmImportSuggest.setSize(350,200);
    Toolkit.setIcon(frmImportSuggest);
    frmImportSuggest.setLayout(new BoxLayout(frmImportSuggest.getContentPane(),BoxLayout.Y_AXIS));
    ((JComponent)frmImportSuggest.getContentPane()).setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
    JLabel lbl=new JLabel("<html>The class \"" + className + "\" couldn't be determined, choose the import you need from the following list.</html>");
    JScrollPane jsp=new JScrollPane();
    jsp.setViewportView(classList);
    JButton btnInsertImport=new JButton("Insert import");
    btnInsertImport.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent evt){
        if (classList.getSelectedValue() != null) {
          try {
            String impString="import " + classList.getSelectedValue() + ";\n";
            int ct=editor.getSketch().getCurrentCodeIndex();
            editor.getSketch().setCurrentCode(0);
            editor.textArea().getDocument().insertString(0,impString,null);
            editor.getSketch().setCurrentCode(ct);
            errorCheckerService.runManualErrorCheck();
            frmImportSuggest.setVisible(false);
            frmImportSuggest=null;
          }
 catch (          BadLocationException e) {
            log("Failed to insert import for " + className);
            e.printStackTrace();
          }
        }
      }
    }
);
    frmImportSuggest.add(lbl);
    frmImportSuggest.add(jsp);
    frmImportSuggest.add(btnInsertImport);
    frmImportSuggest.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    frmImportSuggest.setLocation(editor.getX() + (editor.getWidth() - frmImportSuggest.getWidth()) / 2,editor.getY() + (editor.getHeight() - frmImportSuggest.getHeight()) / 2);
    editor.ta.hideSuggestion();
    frmImportSuggest.setVisible(true);
  }
}
