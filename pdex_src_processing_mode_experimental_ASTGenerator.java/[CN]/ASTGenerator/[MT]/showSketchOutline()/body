{
  frmOutlineView=new JFrame();
  frmOutlineView.setAlwaysOnTop(true);
  frmOutlineView.setUndecorated(true);
  Point tp=editor.ta.getLocationOnScreen();
  log("TA Co " + tp);
  frmOutlineView.setBounds(tp.x + editor.ta.getWidth() - 300,tp.y,300,editor.ta.getHeight());
  JScrollPane jsp=new JScrollPane();
  DefaultMutableTreeNode soNode=new DefaultMutableTreeNode();
  generateSketchOutlineTree(soNode,codeTree);
  final JTree soTree=new JTree(soNode);
  soTree.setRootVisible(false);
  for (int i=0; i < soTree.getRowCount(); i++) {
    soTree.expandRow(i);
  }
  jsp.setViewportView(soTree);
  jsp.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
  jsp.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
  frmOutlineView.add(jsp);
  frmOutlineView.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
  frmOutlineView.setVisible(true);
  frmOutlineView.addWindowFocusListener(new WindowFocusListener(){
    public void windowLostFocus(    WindowEvent e){
      frmOutlineView.setVisible(false);
      frmOutlineView.dispose();
    }
    public void windowGainedFocus(    WindowEvent e){
    }
  }
);
  soTree.addTreeSelectionListener(new TreeSelectionListener(){
    public void valueChanged(    TreeSelectionEvent e){
      log(e);
      SwingWorker worker=new SwingWorker(){
        protected Object doInBackground() throws Exception {
          return null;
        }
        protected void done(){
          if (soTree.getLastSelectedPathComponent() == null) {
            return;
          }
          DefaultMutableTreeNode tnode=(DefaultMutableTreeNode)soTree.getLastSelectedPathComponent();
          if (tnode.getUserObject() == null) {
            return;
          }
          if (tnode.getUserObject() instanceof ASTNodeWrapper) {
            ASTNodeWrapper awrap=(ASTNodeWrapper)tnode.getUserObject();
            errorCheckerService.highlightNode(awrap);
          }
        }
      }
;
      worker.execute();
    }
  }
);
}
