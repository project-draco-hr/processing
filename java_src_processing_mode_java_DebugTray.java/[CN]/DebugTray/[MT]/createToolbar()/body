{
  final Mode mode=editor.getMode();
  Box box=Box.createHorizontalBox();
  continueButton=new EditorButton(mode,"theme/debug/continue",Language.text("toolbar.debug.continue")){
    @Override public void actionPerformed(    ActionEvent e){
      Logger.getLogger(DebugTray.class.getName()).log(Level.INFO,"Invoked 'Continue' toolbar button");
      editor.debugger.continueDebug();
    }
  }
;
  box.add(continueButton);
  box.add(Box.createHorizontalStrut(GAP));
  stepButton=new EditorButton(mode,"theme/debug/step",Language.text("toolbar.debug.step"),Language.text("toolbar.debug.step_into")){
    @Override public void actionPerformed(    ActionEvent e){
      if (isShiftDown()) {
        Logger.getLogger(DebugTray.class.getName()).log(Level.INFO,"Invoked 'Step Into' toolbar button");
        editor.debugger.stepInto();
      }
 else {
        Logger.getLogger(DebugTray.class.getName()).log(Level.INFO,"Invoked 'Step' toolbar button");
        editor.debugger.stepOver();
      }
    }
  }
;
  box.add(stepButton);
  box.add(Box.createHorizontalStrut(GAP));
  breakpointButton=new EditorButton(mode,"theme/debug/breakpoint",Language.text("toolbar.debug.toggle_breakpoints")){
    @Override public void actionPerformed(    ActionEvent e){
      Logger.getLogger(DebugTray.class.getName()).log(Level.INFO,"Invoked 'Toggle Breakpoint' toolbar button");
      editor.debugger.toggleBreakpoint();
    }
  }
;
  box.add(breakpointButton);
  box.add(Box.createHorizontalStrut(GAP));
  JLabel label=new JLabel();
  box.add(label);
  continueButton.setRolloverLabel(label);
  stepButton.setRolloverLabel(label);
  breakpointButton.setRolloverLabel(label);
  box.add(Box.createHorizontalGlue());
  box.setBorder(new EmptyBorder(GAP,GAP,GAP,GAP));
  box.setMaximumSize(new Dimension(getMaximumSize().width,getPreferredSize().height));
  return box;
}
