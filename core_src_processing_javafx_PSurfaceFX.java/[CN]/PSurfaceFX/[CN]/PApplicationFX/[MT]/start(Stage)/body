{
  PApplet sketch=surface.sketch;
  Screen screen=null;
  int displayNum=sketch.sketchDisplay();
  if (displayNum > 0) {
    List<Screen> devices=Screen.getScreens();
    if (displayNum <= devices.size()) {
      screen=devices.get(displayNum - 1);
    }
 else {
      System.err.format("Display %d does not exist, " + "using the default display instead.%n",displayNum);
      for (int i=0; i < devices.size(); i++) {
        System.err.format("Display %d is %s%n",(i + 1),devices.get(i));
      }
    }
  }
  if (screen == null) {
    screen=Screen.getPrimary();
  }
  boolean fullScreen=sketch.sketchFullScreen();
  boolean spanDisplays=sketch.sketchDisplay() == PConstants.SPAN;
  Rectangle2D screenRect=screen.getBounds();
  if (spanDisplays) {
    double minX=screenRect.getMinX();
    double maxX=screenRect.getMaxX();
    double minY=screenRect.getMinY();
    double maxY=screenRect.getMaxY();
    for (    Screen s : Screen.getScreens()) {
      Rectangle2D bounds=s.getBounds();
      minX=Math.min(minX,bounds.getMinX());
      maxX=Math.max(maxX,bounds.getMaxX());
      minY=Math.min(minY,bounds.getMinY());
      maxY=Math.max(maxY,bounds.getMaxY());
    }
    screenRect=new Rectangle2D(minX,minY,maxX - minX,maxY - minY);
  }
  sketch.displayWidth=(int)screenRect.getWidth();
  sketch.displayHeight=(int)screenRect.getHeight();
  int sketchWidth=sketch.sketchWidth();
  int sketchHeight=sketch.sketchHeight();
  if (fullScreen || spanDisplays) {
    sketchWidth=(int)screenRect.getWidth();
    sketchHeight=(int)screenRect.getHeight();
    stage.setX(screenRect.getMinX());
    stage.setY(screenRect.getMinY());
    stage.setWidth(screenRect.getWidth());
    stage.setHeight(screenRect.getHeight());
    stage.setFullScreen(true);
    stage.setFullScreenExitHint("");
  }
  Canvas canvas=surface.canvas;
  surface.fx.context=canvas.getGraphicsContext2D();
  StackPane stackPane=new StackPane();
  stackPane.getChildren().add(canvas);
  canvas.widthProperty().bind(stackPane.widthProperty());
  canvas.heightProperty().bind(stackPane.heightProperty());
  int width=sketchWidth;
  int height=sketchHeight;
  int smooth=sketch.sketchSmooth();
  if ((PApplet.platform == PConstants.MACOSX || PApplet.platform == PConstants.LINUX) && PApplet.javaVersionName.equals("1.8.0_60")) {
    System.err.println("smooth() disabled for JavaFX with this Java version due to Oracle bug");
    System.err.println("https://github.com/processing/processing/issues/3795");
    smooth=0;
  }
  SceneAntialiasing sceneAntialiasing=(smooth == 0) ? SceneAntialiasing.DISABLED : SceneAntialiasing.BALANCED;
  stage.setScene(new Scene(stackPane,width,height,false,sceneAntialiasing));
  surface.stage=stage;
}
