{
  WritableRaster raster=getColorModel().createCompatibleWritableRaster(w,h);
  int span=(int)radius * ACCURACY;
  int[][] interp=new int[span][3];
  int prev=0;
  for (int i=1; i < count; i++) {
    int c0=color[i - 1];
    int c1=color[i];
    int last=(int)(offset[i] * (span - 1));
    for (int j=prev; j < last; j++) {
      float btwn=PApplet.norm(j,prev,last);
      interp[j][0]=(int)PApplet.lerp((c0 >> 16) & 0xff,(c1 >> 16) & 0xff,btwn);
      interp[j][1]=(int)PApplet.lerp((c0 >> 8) & 0xff,(c1 >> 8) & 0xff,btwn);
      interp[j][2]=(int)PApplet.lerp(c0 & 0xff,c1 & 0xff,btwn);
    }
    prev=last;
  }
  int[] data=new int[w * h * 4];
  int index=0;
  for (int j=0; j < h; j++) {
    for (int i=0; i < w; i++) {
      float distance=PApplet.dist(cx,cy,x + i,y + j);
      if (distance > 2000)       System.out.println("calc dist is " + distance);
      int which=PApplet.min((int)(distance * ACCURACY),interp.length - 1);
      data[index++]=interp[which][0];
      data[index++]=interp[which][1];
      data[index++]=interp[which][2];
      data[index++]=255;
    }
  }
  raster.setPixels(0,0,w,h,data);
  return raster;
}
