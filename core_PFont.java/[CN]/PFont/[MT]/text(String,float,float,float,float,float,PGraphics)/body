{
  float spaceWidth=width(' ') * parent.textSize;
  float runningX=boxX1;
  float currentY=boxY1;
  float boxWidth=boxX2 - boxX1;
  float lineX=boxX1;
  if (parent.textAlign == CENTER) {
    lineX=lineX + boxWidth / 2f;
  }
 else   if (parent.textAlign == RIGHT) {
    lineX=boxX2;
  }
  currentY+=ascent() * parent.textSize;
  if (currentY > boxY2)   return;
  int length=str.length();
  if (length > textBuffer.length) {
    textBuffer=new char[length + 10];
  }
  str.getChars(0,length,textBuffer,0);
  int wordStart=0;
  int wordStop=0;
  int lineStart=0;
  int index=0;
  while (index < length) {
    if ((textBuffer[index] == ' ') || (index == length - 1)) {
      float wordWidth=parent.textSize * calcWidth(textBuffer,wordStart,index);
      if (runningX + wordWidth > boxX2) {
        if (runningX == boxX1) {
          do {
            index--;
            if (index == wordStart) {
              return;
            }
            wordWidth=parent.textSize * calcWidth(textBuffer,wordStart,index);
          }
 while (wordWidth > boxWidth);
          textLine(lineStart,index,lineX,currentY,boxZ,parent);
        }
 else {
          textLine(lineStart,wordStop,lineX,currentY,boxZ,parent);
          index=wordStop;
          while ((index < length) && (textBuffer[index] == ' ')) {
            index++;
          }
        }
        lineStart=index;
        wordStart=index;
        wordStop=index;
        runningX=boxX1;
        currentY+=parent.textLeading;
        if (currentY > boxY2)         return;
      }
 else {
        runningX+=wordWidth + spaceWidth;
        wordStop=index;
        wordStart=index + 1;
      }
    }
 else     if (textBuffer[index] == '\n') {
      if (lineStart != index) {
        textLine(lineStart,index,lineX,currentY,boxZ,parent);
      }
      lineStart=index + 1;
      wordStart=lineStart;
      currentY+=parent.textLeading;
      if (currentY > boxY2)       return;
    }
    index++;
  }
  if ((lineStart < length) && (lineStart != index)) {
    textLine(lineStart,index,lineX,currentY,boxZ,parent);
  }
}
