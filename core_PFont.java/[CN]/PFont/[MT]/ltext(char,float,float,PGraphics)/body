{
  int glyph=index(c);
  if (glyph == -1)   return;
  int sx=(int)x - topExtent[glyph];
  int sy=(int)y - leftExtent[glyph];
  int px=0;
  int py=0;
  int pw=width[glyph];
  int ph=height[glyph];
  if ((sx >= parent.width) || (sy - pw >= parent.height) || (sy + pw < 0)|| (sx + ph < 0))   return;
  if (sx < 0) {
    py-=sx;
    ph+=sx;
    sx=0;
  }
  if (sx + ph >= parent.width) {
    ph-=((sx + ph) - parent.width);
  }
  if (sy < pw) {
    pw-=-1 + pw - sy;
  }
  if (sy >= parent.height) {
    int extra=1 + sy - parent.height;
    pw-=extra;
    px+=extra;
    sy-=extra;
  }
  int fr=parent.fillRi;
  int fg=parent.fillGi;
  int fb=parent.fillBi;
  int fa=parent.fillAi;
  int pixels1[]=images[glyph].pixels;
  int pixels2[]=parent.pixels;
  for (int row=py; row < py + ph; row++) {
    for (int col=px; col < px + pw; col++) {
      int a1=(fa * pixels1[row * twidth + col]) >> 8;
      int a2=a1 ^ 0xff;
      int p1=pixels1[row * width[glyph] + col];
      try {
        int index=(sy + px - col) * parent.width + (sx + row - py);
        int p2=pixels2[index];
        pixels2[index]=(0xff000000 | (((a1 * fr + a2 * ((p2 >> 16) & 0xff)) & 0xff00) << 8) | ((a1 * fg + a2 * ((p2 >> 8) & 0xff)) & 0xff00)| ((a1 * fb + a2 * (p2 & 0xff)) >> 8));
      }
 catch (      ArrayIndexOutOfBoundsException e) {
        System.out.println("out of bounds " + sy + " "+ px+ " "+ col);
      }
    }
  }
}
