{
  System.err.println(s);
  if (s.indexOf("Caution") != -1)   return;
  String buildPathSubst=buildPath.replace(File.separatorChar,'/') + "/";
  String partialTempPath=null;
  int partialStartIndex=-1;
  int fileIndex=-1;
  for (int i=0; i < sketch.codeCount; i++) {
    partialTempPath=buildPathSubst + sketch.code[i].preprocName;
    partialStartIndex=s.indexOf(partialTempPath);
    if (partialStartIndex != -1) {
      fileIndex=i;
      break;
    }
  }
  if (partialStartIndex != -1) {
    String s1=s.substring(partialStartIndex + partialTempPath.length() + 1);
    int colon=s1.indexOf(':');
    int lineNumber=Integer.parseInt(s1.substring(0,colon));
    int err=s1.indexOf("Error:");
    if (err != -1) {
      if (firstErrorFound) {
        secondErrorFound=true;
        return;
      }
      firstErrorFound=true;
      String description=s1.substring(err + "Error:".length());
      description=description.trim();
      exception=new PdeException(description,lineNumber - 1);
    }
 else {
      System.err.println("i suck: " + s);
    }
  }
 else {
    if (!secondErrorFound) {
      System.err.println(s);
    }
  }
}
