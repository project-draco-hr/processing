{
  final Iterator<String> frames=trace.iterator();
  final String exceptionLine=frames.next();
  final Matcher m=EXCEPTION_PARSER.matcher(exceptionLine);
  if (!m.matches()) {
    System.err.println("Can't parse this exception line:");
    System.err.println(exceptionLine);
    editor.statusError("Unknown exception");
    return;
  }
  final String exceptionClass=m.group(1);
  final String message=m.group(2);
  if (Runner.handleCommonErrors(exceptionClass,message,editor)) {
    return;
  }
  while (frames.hasNext()) {
    final String line=frames.next();
    if (line.contains("processing.android")) {
      final Matcher lm=LOCATION.matcher(line);
      if (lm.find()) {
        final String filename=lm.group(1);
        final int lineNumber=Integer.parseInt(lm.group(2)) - 1;
        final RunnerException rex=editor.getSketch().placeException(message,filename,lineNumber);
        editor.statusError(rex == null ? new RunnerException(message,false) : rex);
      }
    }
  }
}
