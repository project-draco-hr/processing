{
  if (tintedPixels == null) {
    tintedPixels=new int[source.width * source.height];
  }
  if ((source.format == ARGB) || (source.format == RGB)) {
    if (tint) {
      int a2=(tintColor >> 24) & 0xff;
      int r2=(tintColor >> 16) & 0xff;
      int g2=(tintColor >> 8) & 0xff;
      int b2=(tintColor) & 0xff;
      if (source.format == RGB) {
        int alpha=a2 << 24;
        for (int i=0; i < tintedPixels.length; i++) {
          int argb1=source.pixels[i];
          int r1=(argb1 >> 16) & 0xff;
          int g1=(argb1 >> 8) & 0xff;
          int b1=(argb1) & 0xff;
          tintedPixels[i]=alpha | (((r2 * r1) & 0xff00) << 8) | ((g2 * g1) & 0xff00)| (((b2 * b1) & 0xff00) >> 8);
        }
      }
 else {
        for (int i=0; i < tintedPixels.length; i++) {
          int argb1=source.pixels[i];
          int a1=(argb1 >> 24) & 0xff;
          int r1=(argb1 >> 16) & 0xff;
          int g1=(argb1 >> 8) & 0xff;
          int b1=(argb1) & 0xff;
          tintedPixels[i]=(((a2 * a1) & 0xff00) << 16) | (((r2 * r1) & 0xff00) << 8) | ((g2 * g1) & 0xff00)| (((b2 * b1) & 0xff00) >> 8);
        }
      }
      tinted=true;
      tintedColor=tintColor;
      WritableRaster raster=((BufferedImage)image).getRaster();
      raster.setDataElements(0,0,source.width,source.height,tintedPixels);
    }
 else {
      WritableRaster raster=((BufferedImage)image).getRaster();
      raster.setDataElements(0,0,source.width,source.height,tintedPixels);
    }
  }
 else   if (source.format == ALPHA) {
    int lowbits=tintColor & 0x00ffffff;
    if (((tintColor >> 24) & 0xff) >= 254) {
      for (int i=0; i < tintedPixels.length; i++) {
        tintedPixels[i]=(source.pixels[i] == 0) ? 0 : (source.pixels[i] << 24) | lowbits;
      }
    }
 else {
      int alphabits=(tintColor >> 24) & 0xff;
      for (int i=0; i < tintedPixels.length; i++) {
        tintedPixels[i]=(source.pixels[i] == 0) ? 0 : (((alphabits * source.pixels[i]) & 0xFF00) << 16) | lowbits;
      }
    }
    tinted=true;
    tintedColor=tintColor;
    WritableRaster raster=((BufferedImage)image).getRaster();
    raster.setDataElements(0,0,source.width,source.height,tintedPixels);
  }
}
