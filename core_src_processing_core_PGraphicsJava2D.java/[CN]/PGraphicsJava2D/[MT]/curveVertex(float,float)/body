{
  if (shape != POLYGON) {
    throw new RuntimeException("curveVertex() can only be used with " + "POLYGON shapes");
  }
  curveInitCheck();
  vertexCount=0;
  if (splineVertices == null) {
    splineVertices=new float[DEFAULT_SPLINE_VERTICES][VERTEX_FIELD_COUNT];
  }
  if (splineVertexCount == DEFAULT_SPLINE_VERTICES) {
    System.arraycopy(splineVertices[DEFAULT_SPLINE_VERTICES - 3],0,splineVertices[0],0,VERTEX_FIELD_COUNT);
    System.arraycopy(splineVertices[DEFAULT_SPLINE_VERTICES - 2],0,splineVertices[1],0,VERTEX_FIELD_COUNT);
    System.arraycopy(splineVertices[DEFAULT_SPLINE_VERTICES - 1],0,splineVertices[2],0,VERTEX_FIELD_COUNT);
    splineVertexCount=3;
  }
  if (splineVertexCount >= 3) {
    curveCoordX[0]=splineVertices[splineVertexCount - 3][X];
    curveCoordY[0]=splineVertices[splineVertexCount - 3][Y];
    curveCoordX[1]=splineVertices[splineVertexCount - 2][X];
    curveCoordY[1]=splineVertices[splineVertexCount - 2][Y];
    curveCoordX[2]=splineVertices[splineVertexCount - 1][X];
    curveCoordY[2]=splineVertices[splineVertexCount - 1][Y];
    curveCoordX[3]=x;
    curveCoordY[3]=y;
    curveToBezierMatrix.mult(curveCoordX,curveDrawX);
    curveToBezierMatrix.mult(curveCoordY,curveDrawY);
    if (gpath == null) {
      gpath=new GeneralPath();
      gpath.moveTo(curveDrawX[0],curveDrawY[0]);
    }
    gpath.curveTo(curveDrawX[1],curveDrawY[1],curveDrawX[2],curveDrawY[2],curveDrawX[3],curveDrawY[3]);
  }
  splineVertices[splineVertexCount][X]=x;
  splineVertices[splineVertexCount][Y]=y;
  splineVertexCount++;
}
