{
  super.bind();
  if (pg == null) {
    setRenderer(PGraphicsOpenGL.pgCurrent);
    loadAttributes();
    loadUniforms();
  }
  if (-1 < vertexLoc)   pgl.enableVertexAttribArray(vertexLoc);
  if (-1 < colorLoc)   pgl.enableVertexAttribArray(colorLoc);
  if (-1 < offsetLoc)   pgl.enableVertexAttribArray(offsetLoc);
  if (pg.getHint(ENABLE_STROKE_PERSPECTIVE) && pg.nonOrthoProjection()) {
    setUniformValue(perspectiveLoc,1);
  }
 else {
    setUniformValue(perspectiveLoc,0);
  }
  super.setCommonUniforms();
}
