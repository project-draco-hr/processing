{
  if (-1 < transformMatrixLoc) {
    pgCurrent.updateGLProjmodelview();
    setUniformMatrix(transformMatrixLoc,pgCurrent.glProjmodelview);
  }
  if (-1 < modelviewMatrixLoc) {
    pgCurrent.updateGLModelview();
    setUniformMatrix(modelviewMatrixLoc,pgCurrent.glModelview);
  }
  if (-1 < projectionMatrixLoc) {
    pgCurrent.updateGLProjection();
    setUniformMatrix(projectionMatrixLoc,pgCurrent.glProjection);
  }
  if (-1 < viewportLoc) {
    float x=pgCurrent.viewport.get(0);
    float y=pgCurrent.viewport.get(1);
    float w=pgCurrent.viewport.get(2);
    float h=pgCurrent.viewport.get(3);
    setUniformValue(viewportLoc,x,y,w,h);
  }
  if (-1 < bufferSamplerLoc) {
    setUniformValue(bufferSamplerLoc,lastTexUnit);
    pgl.activeTexture(PGL.TEXTURE0 + lastTexUnit);
    pgCurrent.bindBackTexture();
  }
}
