{
  PMatrix3D mm=pg.modelview;
  PMatrix3D nm=pg.modelviewInv;
  for (int i=0; i < nvert; i++) {
    int inIdx=i0 + i;
    int tessIdx=firstPolyVertex + i;
    index=3 * inIdx;
    float x=in.vertices[index++];
    float y=in.vertices[index++];
    float z=in.vertices[index];
    index=3 * inIdx;
    float nx=in.normals[index++];
    float ny=in.normals[index++];
    float nz=in.normals[index];
    index=4 * tessIdx;
    if (clampXY) {
      polyVertices[index++]=PApplet.ceil(x * mm.m00 + y * mm.m01 + z * mm.m02 + mm.m03);
      polyVertices[index++]=PApplet.ceil(x * mm.m10 + y * mm.m11 + z * mm.m12 + mm.m13);
    }
 else {
      polyVertices[index++]=x * mm.m00 + y * mm.m01 + z * mm.m02 + mm.m03;
      polyVertices[index++]=x * mm.m10 + y * mm.m11 + z * mm.m12 + mm.m13;
    }
    polyVertices[index++]=x * mm.m20 + y * mm.m21 + z * mm.m22 + mm.m23;
    polyVertices[index]=x * mm.m30 + y * mm.m31 + z * mm.m32 + mm.m33;
    index=3 * tessIdx;
    polyNormals[index++]=nx * nm.m00 + ny * nm.m10 + nz * nm.m20;
    polyNormals[index++]=nx * nm.m01 + ny * nm.m11 + nz * nm.m21;
    polyNormals[index]=nx * nm.m02 + ny * nm.m12 + nz * nm.m22;
    for (    String name : polyAttribs.keySet()) {
      VertexAttribute attrib=polyAttribs.get(name);
      if (attrib.isColor() || attrib.isOther())       continue;
      float[] inValues=in.fattribs.get(name);
      index=3 * inIdx;
      x=inValues[index++];
      y=inValues[index++];
      z=inValues[index];
      float[] tessValues=fpolyAttribs.get(name);
      if (attrib.isPosition()) {
        index=4 * tessIdx;
        if (clampXY) {
          tessValues[index++]=PApplet.ceil(x * mm.m00 + y * mm.m01 + z * mm.m02 + mm.m03);
          tessValues[index++]=PApplet.ceil(x * mm.m10 + y * mm.m11 + z * mm.m12 + mm.m13);
        }
 else {
          tessValues[index++]=x * mm.m00 + y * mm.m01 + z * mm.m02 + mm.m03;
          tessValues[index++]=x * mm.m10 + y * mm.m11 + z * mm.m12 + mm.m13;
        }
        tessValues[index++]=x * mm.m20 + y * mm.m21 + z * mm.m22 + mm.m23;
        tessValues[index]=x * mm.m30 + y * mm.m31 + z * mm.m32 + mm.m33;
      }
 else {
        index=3 * tessIdx;
        tessValues[index++]=x * nm.m00 + y * nm.m10 + z * nm.m20;
        tessValues[index++]=x * nm.m01 + y * nm.m11 + z * nm.m21;
        tessValues[index]=x * nm.m02 + y * nm.m12 + z * nm.m22;
      }
    }
  }
}
