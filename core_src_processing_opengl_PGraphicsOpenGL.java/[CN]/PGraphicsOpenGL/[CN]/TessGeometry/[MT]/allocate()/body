{
  polyVertices=new float[4 * PGL.DEFAULT_TESS_VERTICES];
  polyColors=new int[PGL.DEFAULT_TESS_VERTICES];
  polyNormals=new float[3 * PGL.DEFAULT_TESS_VERTICES];
  polyTexcoords=new float[2 * PGL.DEFAULT_TESS_VERTICES];
  polyAmbient=new int[PGL.DEFAULT_TESS_VERTICES];
  polySpecular=new int[PGL.DEFAULT_TESS_VERTICES];
  polyEmissive=new int[PGL.DEFAULT_TESS_VERTICES];
  polyShininess=new float[PGL.DEFAULT_TESS_VERTICES];
  polyIndices=new short[PGL.DEFAULT_TESS_VERTICES];
  lineVertices=new float[4 * PGL.DEFAULT_TESS_VERTICES];
  lineColors=new int[PGL.DEFAULT_TESS_VERTICES];
  lineAttribs=new float[4 * PGL.DEFAULT_TESS_VERTICES];
  lineIndices=new short[PGL.DEFAULT_TESS_VERTICES];
  pointVertices=new float[4 * PGL.DEFAULT_TESS_VERTICES];
  pointColors=new int[PGL.DEFAULT_TESS_VERTICES];
  pointAttribs=new float[2 * PGL.DEFAULT_TESS_VERTICES];
  pointIndices=new short[PGL.DEFAULT_TESS_VERTICES];
  polyVerticesBuffer=PGL.allocateFloatBuffer(polyVertices);
  polyColorsBuffer=PGL.allocateIntBuffer(polyColors);
  polyNormalsBuffer=PGL.allocateFloatBuffer(polyNormals);
  polyTexcoordsBuffer=PGL.allocateFloatBuffer(polyTexcoords);
  polyAmbientBuffer=PGL.allocateIntBuffer(polyAmbient);
  polySpecularBuffer=PGL.allocateIntBuffer(polySpecular);
  polyEmissiveBuffer=PGL.allocateIntBuffer(polyEmissive);
  polyShininessBuffer=PGL.allocateFloatBuffer(polyShininess);
  polyIndicesBuffer=PGL.allocateShortBuffer(polyIndices);
  lineVerticesBuffer=PGL.allocateFloatBuffer(lineVertices);
  lineColorsBuffer=PGL.allocateIntBuffer(lineColors);
  lineAttribsBuffer=PGL.allocateFloatBuffer(lineAttribs);
  lineIndicesBuffer=PGL.allocateShortBuffer(lineIndices);
  pointVerticesBuffer=PGL.allocateFloatBuffer(pointVertices);
  pointColorsBuffer=PGL.allocateIntBuffer(pointColors);
  pointAttribsBuffer=PGL.allocateFloatBuffer(pointAttribs);
  pointIndicesBuffer=PGL.allocateShortBuffer(pointIndices);
  clear();
}
