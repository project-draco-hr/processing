{
  polyVertices=PGL.allocateDirectFloatBuffer(4 * PGL.DEFAULT_TESS_VERTICES);
  polyColors=PGL.allocateDirectIntBuffer(PGL.DEFAULT_TESS_VERTICES);
  polyNormals=PGL.allocateDirectFloatBuffer(3 * PGL.DEFAULT_TESS_VERTICES);
  polyTexcoords=PGL.allocateDirectFloatBuffer(2 * PGL.DEFAULT_TESS_VERTICES);
  polyAmbient=PGL.allocateDirectIntBuffer(PGL.DEFAULT_TESS_VERTICES);
  polySpecular=PGL.allocateDirectIntBuffer(PGL.DEFAULT_TESS_VERTICES);
  polyEmissive=PGL.allocateDirectIntBuffer(PGL.DEFAULT_TESS_VERTICES);
  polyShininess=PGL.allocateDirectFloatBuffer(PGL.DEFAULT_TESS_VERTICES);
  polyIndices=PGL.allocateDirectShortBuffer(PGL.DEFAULT_TESS_VERTICES);
  lineVertices=PGL.allocateDirectFloatBuffer(4 * PGL.DEFAULT_TESS_VERTICES);
  lineColors=PGL.allocateDirectIntBuffer(PGL.DEFAULT_TESS_VERTICES);
  lineAttribs=PGL.allocateDirectFloatBuffer(4 * PGL.DEFAULT_TESS_VERTICES);
  lineIndices=PGL.allocateDirectShortBuffer(PGL.DEFAULT_TESS_VERTICES);
  pointVertices=PGL.allocateDirectFloatBuffer(4 * PGL.DEFAULT_TESS_VERTICES);
  pointColors=PGL.allocateDirectIntBuffer(PGL.DEFAULT_TESS_VERTICES);
  pointAttribs=PGL.allocateDirectFloatBuffer(2 * PGL.DEFAULT_TESS_VERTICES);
  pointIndices=PGL.allocateDirectShortBuffer(PGL.DEFAULT_TESS_VERTICES);
  clear();
}
