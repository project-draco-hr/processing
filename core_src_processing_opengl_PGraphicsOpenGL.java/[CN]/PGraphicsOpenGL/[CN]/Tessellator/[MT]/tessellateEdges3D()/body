{
  boolean bevel=!noCapsJoins();
  int nInVert=in.getNumEdgeVertices(bevel);
  int nInInd=in.getNumEdgeIndices(bevel);
  tess.lineVertexCheck(nInVert);
  tess.lineIndexCheck(nInInd);
  int index=in.renderMode == RETAINED ? tess.lineIndexCache.addNew() : tess.lineIndexCache.getLast();
  firstLineIndexCache=index;
  short[] lastInd={-1,-1};
  for (int i=in.firstEdge; i <= in.lastEdge; i++) {
    int[] edge=in.edges[i];
    int i0=edge[0];
    int i1=edge[1];
    if (bevel) {
      index=addLine3D(i0,i1,index,lastInd,false);
      if (edge[2] == EDGE_STOP || edge[2] == EDGE_SINGLE) {
        lastInd[0]=lastInd[1]=-1;
      }
    }
 else {
      index=addLine3D(i0,i1,index,null,false);
    }
  }
  lastLineIndexCache=index;
}
