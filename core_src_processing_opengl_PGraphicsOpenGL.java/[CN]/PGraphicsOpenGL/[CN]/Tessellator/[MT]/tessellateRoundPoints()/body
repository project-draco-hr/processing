{
  int nInVert=in.lastVertex - in.firstVertex + 1;
  if (stroke && 1 <= nInVert) {
    int nPtVert=PApplet.min(MAX_POINT_ACCURACY,PApplet.max(MIN_POINT_ACCURACY,(int)(TWO_PI * strokeWeight / POINT_ACCURACY_FACTOR))) + 1;
    if (PGL.MAX_VERTEX_INDEX1 <= nPtVert) {
      throw new RuntimeException("Error in point tessellation.");
    }
    updateTex();
    int nvertTot=nPtVert * nInVert;
    int nindTot=3 * (nPtVert - 1) * nInVert;
    if (is3D) {
      tessellateRoundPoints3D(nvertTot,nindTot,nPtVert);
    }
 else     if (is2D) {
      beginNoTex();
      tessellateRoundPoints2D(nvertTot,nindTot,nPtVert);
      endNoTex();
    }
  }
}
