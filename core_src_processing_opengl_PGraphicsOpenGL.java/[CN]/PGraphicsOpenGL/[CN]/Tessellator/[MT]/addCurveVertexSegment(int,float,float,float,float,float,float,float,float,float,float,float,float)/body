{
  int fa=(in.colors[i] >> 24) & 0xFF;
  int fr=(in.colors[i] >> 16) & 0xFF;
  int fg=(in.colors[i] >> 8) & 0xFF;
  int fb=(in.colors[i] >> 0) & 0xFF;
  int aa=(in.ambient[i] >> 24) & 0xFF;
  int ar=(in.ambient[i] >> 16) & 0xFF;
  int ag=(in.ambient[i] >> 8) & 0xFF;
  int ab=(in.ambient[i] >> 0) & 0xFF;
  int sa=(in.specular[i] >> 24) & 0xFF;
  int sr=(in.specular[i] >> 16) & 0xFF;
  int sg=(in.specular[i] >> 8) & 0xFF;
  int sb=(in.specular[i] >> 0) & 0xFF;
  int ea=(in.emissive[i] >> 24) & 0xFF;
  int er=(in.emissive[i] >> 16) & 0xFF;
  int eg=(in.emissive[i] >> 8) & 0xFF;
  int eb=(in.emissive[i] >> 0) & 0xFF;
  float nx=in.normals[3 * i + 0];
  float ny=in.normals[3 * i + 1];
  float nz=in.normals[3 * i + 2];
  float u=in.texcoords[2 * i + 0];
  float v=in.texcoords[2 * i + 1];
  float sh=in.shininess[i];
  float x0=x2;
  float y0=y2;
  float z0=z2;
  PMatrix3D draw=pg.curveDrawMatrix;
  float xplot1=draw.m10 * x1 + draw.m11 * x2 + draw.m12 * x3 + draw.m13 * x4;
  float xplot2=draw.m20 * x1 + draw.m21 * x2 + draw.m22 * x3 + draw.m23 * x4;
  float xplot3=draw.m30 * x1 + draw.m31 * x2 + draw.m32 * x3 + draw.m33 * x4;
  float yplot1=draw.m10 * y1 + draw.m11 * y2 + draw.m12 * y3 + draw.m13 * y4;
  float yplot2=draw.m20 * y1 + draw.m21 * y2 + draw.m22 * y3 + draw.m23 * y4;
  float yplot3=draw.m30 * y1 + draw.m31 * y2 + draw.m32 * y3 + draw.m33 * y4;
  float zplot1=draw.m10 * z1 + draw.m11 * z2 + draw.m12 * z3 + draw.m13 * z4;
  float zplot2=draw.m20 * z1 + draw.m21 * z2 + draw.m22 * z3 + draw.m23 * z4;
  float zplot3=draw.m30 * z1 + draw.m31 * z2 + draw.m32 * z3 + draw.m33 * z4;
  double[] vertex0=new double[]{x0,y0,z0,fa,fr,fg,fb,nx,ny,nz,u,v,aa,ar,ag,ab,sa,sr,sg,sb,ea,er,eg,eb,sh};
  gluTess.addVertex(vertex0);
  for (int j=0; j < pg.curveDetail; j++) {
    x0+=xplot1;
    xplot1+=xplot2;
    xplot2+=xplot3;
    y0+=yplot1;
    yplot1+=yplot2;
    yplot2+=yplot3;
    z0+=zplot1;
    zplot1+=zplot2;
    zplot2+=zplot3;
    double[] vertex1=new double[]{x0,y0,z0,fa,fr,fg,fb,nx,ny,nz,u,v,aa,ar,ag,ab,sa,sr,sg,sb,ea,er,eg,eb,sh};
    gluTess.addVertex(vertex1);
  }
}
