{
  if (!polyBuffersCreated || polyBuffersContextIsOutdated()) {
    polyBuffersContext=pgl.getCurrentContext();
    int sizef=INIT_VERTEX_BUFFER_SIZE * PGL.SIZEOF_FLOAT;
    int sizei=INIT_VERTEX_BUFFER_SIZE * PGL.SIZEOF_INT;
    int sizex=INIT_INDEX_BUFFER_SIZE * PGL.SIZEOF_INDEX;
    glPolyVertex=createVertexBufferObject(polyBuffersContext,pgl);
    pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolyVertex);
    pgl.bufferData(PGL.ARRAY_BUFFER,3 * sizef,null,PGL.STATIC_DRAW);
    glPolyColor=createVertexBufferObject(polyBuffersContext,pgl);
    pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolyColor);
    pgl.bufferData(PGL.ARRAY_BUFFER,sizei,null,PGL.STATIC_DRAW);
    glPolyNormal=createVertexBufferObject(polyBuffersContext,pgl);
    pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolyNormal);
    pgl.bufferData(PGL.ARRAY_BUFFER,3 * sizef,null,PGL.STATIC_DRAW);
    glPolyTexcoord=createVertexBufferObject(polyBuffersContext,pgl);
    pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolyTexcoord);
    pgl.bufferData(PGL.ARRAY_BUFFER,2 * sizef,null,PGL.STATIC_DRAW);
    glPolyAmbient=createVertexBufferObject(polyBuffersContext,pgl);
    pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolyAmbient);
    pgl.bufferData(PGL.ARRAY_BUFFER,sizei,null,PGL.STATIC_DRAW);
    glPolySpecular=createVertexBufferObject(polyBuffersContext,pgl);
    pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolySpecular);
    pgl.bufferData(PGL.ARRAY_BUFFER,sizei,null,PGL.STATIC_DRAW);
    glPolyEmissive=createVertexBufferObject(polyBuffersContext,pgl);
    pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolyEmissive);
    pgl.bufferData(PGL.ARRAY_BUFFER,sizei,null,PGL.STATIC_DRAW);
    glPolyShininess=createVertexBufferObject(polyBuffersContext,pgl);
    pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolyShininess);
    pgl.bufferData(PGL.ARRAY_BUFFER,sizef,null,PGL.STATIC_DRAW);
    pgl.bindBuffer(PGL.ARRAY_BUFFER,0);
    glPolyIndex=createVertexBufferObject(polyBuffersContext,pgl);
    pgl.bindBuffer(PGL.ELEMENT_ARRAY_BUFFER,glPolyIndex);
    pgl.bufferData(PGL.ELEMENT_ARRAY_BUFFER,sizex,null,PGL.STATIC_DRAW);
    pgl.bindBuffer(PGL.ELEMENT_ARRAY_BUFFER,0);
    polyBuffersCreated=true;
  }
  boolean created=false;
  for (  String name : attribs.keySet()) {
    VertexAttribute attrib=attribs.get(name);
    if (!attrib.bufferCreated() || polyBuffersContextIsOutdated()) {
      attrib.createBuffer(pgl);
      created=true;
    }
  }
  if (created)   pgl.bindBuffer(PGL.ARRAY_BUFFER,0);
}
