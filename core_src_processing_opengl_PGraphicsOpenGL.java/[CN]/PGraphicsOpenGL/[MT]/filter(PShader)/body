{
  if (!shader.isPolyShader()) {
    PGraphics.showWarning(INVALID_FILTER_SHADER_ERROR);
    return;
  }
  boolean needEndDraw=false;
  if (primaryGraphics) {
    pgl.enableFBOLayer();
  }
 else   if (!drawing) {
    beginDraw();
    needEndDraw=true;
  }
  loadTexture();
  Texture tex=texture.get();
  Texture ftex=filterTexture.get();
  if (ftex == null || ftex.contextIsOutdated()) {
    ftex=new Texture(this,tex.width,tex.height,tex.getParameters());
    ftex.invertedY(true);
    filterImage=wrapTexture(ftex);
    filterTexture=new WeakReference<Texture>(ftex);
  }
  ftex.set(tex);
  pgl.depthMask(false);
  pgl.disable(PGL.DEPTH_TEST);
  begin2D();
  boolean prevLights=lights;
  lights=false;
  int prevTextureMode=textureMode;
  textureMode=NORMAL;
  boolean prevStroke=stroke;
  stroke=false;
  int prevBlendMode=blendMode;
  blendMode(REPLACE);
  PShader prevShader=polyShader;
  polyShader=shader;
  beginShape(QUADS);
  texture(filterImage);
  vertex(0,0,0,0);
  vertex(width,0,1,0);
  vertex(width,height,1,1);
  vertex(0,height,0,1);
  endShape();
  end2D();
  polyShader=prevShader;
  stroke=prevStroke;
  lights=prevLights;
  textureMode=prevTextureMode;
  blendMode(prevBlendMode);
  if (!hints[DISABLE_DEPTH_TEST]) {
    pgl.enable(PGL.DEPTH_TEST);
  }
  if (!hints[DISABLE_DEPTH_MASK]) {
    pgl.depthMask(true);
  }
  if (needEndDraw) {
    endDraw();
  }
}
