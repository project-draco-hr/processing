{
  if (!(shader instanceof TextureShader)) {
    PGraphics.showWarning(INVALID_FILTER_SHADER_ERROR);
    return;
  }
  boolean needEndDraw=false;
  if (primarySurface)   pgl.needFBOLayer();
 else   if (!drawing) {
    beginDraw();
    needEndDraw=true;
  }
  loadTexture();
  if (filterTexture == null || filterTexture.contextIsOutdated()) {
    filterTexture=new Texture(texture.width,texture.height,texture.getParameters());
    filterTexture.invertedY(true);
    filterImage=wrapTexture(filterTexture);
  }
  filterTexture.set(texture);
  pgl.depthMask(false);
  pgl.disable(PGL.DEPTH_TEST);
  begin2D();
  boolean prevLights=lights;
  lights=false;
  int prevTextureMode=textureMode;
  textureMode=NORMAL;
  boolean prevStroke=stroke;
  stroke=false;
  int prevBlendMode=blendMode;
  blendMode(REPLACE);
  TextureShader prevTexShader=textureShader;
  textureShader=(TextureShader)shader;
  beginShape(QUADS);
  texture(filterImage);
  vertex(0,0,0,0);
  vertex(width,0,1,0);
  vertex(width,height,1,1);
  vertex(0,height,0,1);
  endShape();
  end2D();
  textureShader=prevTexShader;
  stroke=prevStroke;
  lights=prevLights;
  textureMode=prevTextureMode;
  blendMode(prevBlendMode);
  if (!hints[DISABLE_DEPTH_TEST]) {
    pgl.enable(PGL.DEPTH_TEST);
  }
  if (!hints[DISABLE_DEPTH_MASK]) {
    pgl.depthMask(true);
  }
  if (needEndDraw) {
    endDraw();
  }
}
