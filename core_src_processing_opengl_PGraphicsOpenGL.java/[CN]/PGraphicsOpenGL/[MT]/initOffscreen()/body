{
  pgPrimary=(PGraphicsOpenGL)parent.g;
  pgl.initOffscreenSurface(pgPrimary.pgl);
  pgl.updateOffscreen(pgPrimary.pgl);
  loadTextureImpl(Texture.BILINEAR,false);
  Texture.Parameters params=new Texture.Parameters(ARGB,Texture.BILINEAR,false);
  ptexture=new Texture(parent,width,height,params);
  ptexture.invertedY(true);
  ptexture.colorBufferOf(this);
  if (offscreenFramebuffer != null) {
    offscreenFramebuffer.release();
  }
  if (offscreenFramebufferMultisample != null) {
    offscreenFramebufferMultisample.release();
  }
  boolean packed=depthBits == 24 && stencilBits == 8 && packedDepthStencilSupported;
  if (PGraphicsOpenGL.fboMultisampleSupported && 1 < quality) {
    offscreenFramebufferMultisample=new FrameBuffer(parent,texture.glWidth,texture.glHeight,quality,0,depthBits,stencilBits,packed,false);
    offscreenFramebufferMultisample.clear();
    offscreenMultisample=true;
    offscreenFramebuffer=new FrameBuffer(parent,texture.glWidth,texture.glHeight,1,1,0,0,false,false);
  }
 else {
    quality=0;
    offscreenFramebuffer=new FrameBuffer(parent,texture.glWidth,texture.glHeight,1,1,depthBits,stencilBits,packed,false);
    offscreenMultisample=false;
  }
  offscreenFramebuffer.setColorBuffer(texture);
  offscreenFramebuffer.clear();
}
