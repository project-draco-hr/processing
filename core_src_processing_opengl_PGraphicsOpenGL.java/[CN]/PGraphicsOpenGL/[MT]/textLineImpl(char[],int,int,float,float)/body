{
  textTex=(PFontTexture)textFont.getCache(pgPrimary);
  if (textTex == null) {
    textTex=new PFontTexture(parent,textFont,maxTextureSize,maxTextureSize,is3D());
    textFont.setCache(pgPrimary,textTex);
  }
 else {
    if (textTex.contextIsOutdated()) {
      textTex=new PFontTexture(parent,textFont,PApplet.min(PGL.MAX_FONT_TEX_SIZE,maxTextureSize),PApplet.min(PGL.MAX_FONT_TEX_SIZE,maxTextureSize),is3D());
      textFont.setCache(pgPrimary,textTex);
    }
  }
  textTex.setFirstTexture();
  int savedTextureMode=textureMode;
  boolean savedStroke=stroke;
  float savedNormalX=normalX;
  float savedNormalY=normalY;
  float savedNormalZ=normalZ;
  boolean savedTint=tint;
  int savedTintColor=tintColor;
  int savedBlendMode=blendMode;
  textureMode=NORMAL;
  stroke=false;
  normalX=0;
  normalY=0;
  normalZ=1;
  tint=true;
  tintColor=fillColor;
  blendMode(BLEND);
  super.textLineImpl(buffer,start,stop,x,y);
  textureMode=savedTextureMode;
  stroke=savedStroke;
  normalX=savedNormalX;
  normalY=savedNormalY;
  normalZ=savedNormalZ;
  tint=savedTint;
  tintColor=savedTintColor;
  blendMode(savedBlendMode);
}
