{
  if (canvas != null) {
    keyPoller.requestStop();
    mousePoller.requestStop();
    try {
      Display.setParent(null);
    }
 catch (    LWJGLException e) {
      e.printStackTrace();
    }
    Display.destroy();
    pg.parent.remove(canvas);
  }
  canvas=new Canvas();
  canvas.setFocusable(true);
  canvas.requestFocus();
  canvas.setIgnoreRepaint(true);
  canvas.setBackground(Color.BLACK);
  canvas.setForeground(Color.BLACK);
  pg.parent.setLayout(new BorderLayout());
  pg.parent.add(canvas,BorderLayout.CENTER);
  canvas.setBounds(0,0,pg.parent.width,pg.parent.height);
  try {
    PixelFormat format=new PixelFormat(32,request_alpha_bits,request_depth_bits,request_stencil_bits,0);
    Display.setDisplayMode(new DisplayMode(pg.parent.width,pg.parent.height));
    Display.setParent(canvas);
    Display.create(format);
    Display.setVSyncEnabled(true);
  }
 catch (  LWJGLException e) {
    e.printStackTrace();
  }
  context=Display.getDrawable().hashCode();
  keyPoller=new KeyPoller(pg.parent);
  keyPoller.start();
  mousePoller=new MousePoller(pg.parent);
  mousePoller.start();
  reqNumSamples=qualityToSamples(antialias);
  fboLayerCreated=false;
  fboLayerInUse=false;
  firstFrame=true;
  needToClearBuffers=true;
}
