{
  if (externalEditor)   return false;
  char c=event.getKeyChar();
  int code=event.getKeyCode();
  if ((event.getModifiers() & KeyEvent.META_MASK) != 0) {
    return false;
  }
  if (!editor.sketch.current.modified) {
    if ((code == KeyEvent.VK_BACK_SPACE) || (code == KeyEvent.VK_TAB) || (code == KeyEvent.VK_ENTER)|| ((c >= 32) && (c < 128))) {
      editor.sketch.setModified();
    }
  }
switch ((int)c) {
case 9:
    tabsExpand=false;
  if (tabsExpand) {
    textarea.setSelectedText(tabString);
    event.consume();
    return true;
  }
 else {
    char contents[]=textarea.getText().toCharArray();
    int prevCharIndex=textarea.getCaretPosition() - 1;
    int lineStart=calcLineStart(prevCharIndex,contents);
    int indent=calcBraceIndent(lineStart,contents);
    if (indent == -1) {
      indent=0;
    }
 else {
      indent+=tabSize;
    }
    int spaceCount=calcSpaceCount(prevCharIndex,contents);
    System.out.println(indent + " " + lineStart+ " "+ spaceCount);
    textarea.setSelectionStart(lineStart);
    textarea.setSelectionEnd(lineStart + spaceCount);
    textarea.setSelectedText(Editor.EMPTY.substring(0,indent));
    event.consume();
    return true;
  }
case 10:
case 13:
if (autoIndent) {
  char contents[]=textarea.getText().toCharArray();
  int origIndex=textarea.getCaretPosition() - 1;
  int spaceCount=calcSpaceCount(origIndex,contents);
  int index=origIndex + 1;
  while ((index < contents.length) && (contents[index] == ' ')) {
    spaceCount--;
    index++;
  }
  if (origIndex != -1) {
    if (contents[origIndex] == '{') {
      spaceCount+=tabSize;
    }
  }
  String insertion="\n" + Editor.EMPTY.substring(0,spaceCount);
  textarea.setSelectedText(insertion);
  event.consume();
  return true;
}
break;
case '}':
if (autoIndent) {
if (textarea.getSelectionStart() != textarea.getSelectionEnd()) {
textarea.setSelectedText("");
}
char contents[]=textarea.getText().toCharArray();
int prevCharIndex=textarea.getCaretPosition() - 1;
int index=prevCharIndex;
boolean finished=false;
while ((index != -1) && (!finished)) {
if (contents[index] == 10) {
  finished=true;
  index++;
}
 else if (contents[index] != ' ') {
  return false;
}
 else {
  index--;
}
}
if (!finished) return false;
int lineStartIndex=index;
int pairedSpaceCount=calcBraceIndent(prevCharIndex,contents);
if (pairedSpaceCount == -1) return false;
textarea.setSelectionStart(lineStartIndex);
textarea.setSelectedText(Editor.EMPTY.substring(0,pairedSpaceCount));
event.consume();
return true;
}
break;
}
return false;
}
