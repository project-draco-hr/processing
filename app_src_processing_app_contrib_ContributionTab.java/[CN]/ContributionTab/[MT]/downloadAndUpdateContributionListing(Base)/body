{
  retryConnectingButton.setEnabled(false);
  statusPanel.setMessage(Language.text("contrib.status.downloading_list"));
  contribListing.downloadAvailableList(base,new ContribProgressBar(progressBar){
    @Override public void startTask(    String name,    int maxValue){
      super.startTask(name,maxValue);
      progressBar.setString(null);
    }
    @Override public void setProgress(    int value){
      super.setProgress(value);
      progressBar.setValue(value);
      progressBar.setStringPainted(true);
      statusPanel.setMessage(Language.text("contrib.status.downloading_list"));
    }
    @Override public void finishedAction(){
      progressBar.setVisible(false);
      updateContributionListing();
      updateCategoryChooser();
      retryConnectingButton.setEnabled(true);
      if (error) {
        if (exception instanceof SocketTimeoutException) {
          statusPanel.setErrorMessage(Language.text("contrib.errors.list_download.timeout"));
        }
 else {
          statusPanel.setErrorMessage(Language.text("contrib.errors.list_download"));
        }
        exception.printStackTrace();
        retryConnectingButton.setVisible(true);
      }
 else {
        statusPanel.setMessage(Language.text("contrib.status.done"));
        retryConnectingButton.setVisible(false);
      }
    }
  }
);
}
