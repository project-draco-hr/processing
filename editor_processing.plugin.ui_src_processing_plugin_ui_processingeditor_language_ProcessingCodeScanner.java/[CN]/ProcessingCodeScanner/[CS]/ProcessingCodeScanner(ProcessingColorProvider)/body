{
  IToken keyword1=new Token(new TextAttribute(provider.getColor(ProcessingColorProvider.KEYWORD1)));
  IToken keyword2=new Token(new TextAttribute(provider.getColor(ProcessingColorProvider.KEYWORD2)));
  IToken keyword3=new Token(new TextAttribute(provider.getColor(ProcessingColorProvider.KEYWORD3)));
  IToken literal1=new Token(new TextAttribute(provider.getColor(ProcessingColorProvider.LITERAL1)));
  IToken literal2=new Token(new TextAttribute(provider.getColor(ProcessingColorProvider.LITERAL2)));
  IToken label=new Token(new TextAttribute(provider.getColor(ProcessingColorProvider.LABEL)));
  IToken operator=new Token(new TextAttribute(provider.getColor(ProcessingColorProvider.OPERATOR)));
  IToken invalid=new Token(new TextAttribute(provider.getColor(ProcessingColorProvider.INVALID)));
  IToken string=new Token(new TextAttribute(provider.getColor(ProcessingColorProvider.STRING)));
  IToken comment=new Token(new TextAttribute(provider.getColor(ProcessingColorProvider.COMMENT2)));
  IToken other=new Token(new TextAttribute(provider.getColor(ProcessingColorProvider.DEFAULT)));
  List rules=new ArrayList();
  rules.add(new EndOfLineRule("//",comment));
  rules.add(new SingleLineRule("\"","\"",string,'\\'));
  rules.add(new SingleLineRule("'","'",string,'\\'));
  rules.add(new WhitespaceRule(new ProcessingWhitespaceDetector()));
  WordRule wordRule=new WordRule(new ProcessingWordDetector(),other);
  for (int i=0; i < fgKeywords1.length; i++)   wordRule.addWord(fgKeywords1[i],keyword1);
  for (int i=0; i < fgKeywords2.length; i++)   wordRule.addWord(fgKeywords2[i],keyword2);
  for (int i=0; i < fgKeywords3.length; i++)   wordRule.addWord(fgKeywords3[i],keyword3);
  for (int i=0; i < fgLiterals1.length; i++)   wordRule.addWord(fgLiterals1[i],literal1);
  for (int i=0; i < fgLiterals2.length; i++)   wordRule.addWord(fgLiterals2[i],literal2);
  for (int i=0; i < fgLabels.length; i++)   wordRule.addWord(fgLabels[i],label);
  for (int i=0; i < fgOperators.length; i++)   wordRule.addWord(fgOperators[i],operator);
  for (int i=0; i < fgInvalids.length; i++)   wordRule.addWord(fgInvalids[i],invalid);
  rules.add(wordRule);
  IRule[] result=new IRule[rules.size()];
  rules.toArray(result);
  setRules(result);
}
