{
  opacity=properties.getFloatAttribute("opacity",1);
  int opacityMask=((int)(opacity * 255)) << 24;
  String strokeText=properties.getStringAttribute("stroke","none");
  if (strokeText.equals("none")) {
  }
 else   if (strokeText.startsWith("#")) {
    stroke=true;
    strokeColor=opacityMask | (Integer.parseInt(strokeText.substring(1),16)) & 0xFFFFFF;
  }
 else   if (strokeText.startsWith("url(#")) {
    strokeName=strokeText.substring(5,strokeText.length() - 1);
    Object strokeObject=table.get(strokeName);
    if (strokeObject instanceof Gradient) {
      strokeGradient=(Gradient)strokeObject;
      strokeGradientPaint=calcGradientPaint(strokeGradient);
    }
 else {
      System.err.println("url " + strokeName + " refers to unexpected data");
    }
  }
  String fillText=properties.getStringAttribute("fill","#000000");
  if (fillText.equals("none")) {
  }
 else   if (fillText.startsWith("#")) {
    fill=true;
    fillColor=opacityMask | (Integer.parseInt(fillText.substring(1),16)) & 0xFFFFFF;
  }
 else   if (fillText.startsWith("url(#")) {
    fillName=fillText.substring(5,fillText.length() - 1);
    Object fillObject=table.get(fillName);
    if (fillObject instanceof Gradient) {
      fill=true;
      fillGradient=(Gradient)fillObject;
      fillGradientPaint=calcGradientPaint(fillGradient);
    }
 else {
      System.err.println("url " + fillName + " refers to unexpected data");
    }
  }
  strokeWeight=properties.getFloatAttribute("stroke-width",Float.NaN);
}
