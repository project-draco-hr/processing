{
  WritableRaster raster=getColorModel().createCompatibleWritableRaster(w,h);
  float nx=x2 - x1;
  float ny=y2 - y1;
  float len=(float)Math.sqrt(nx * nx + ny * ny);
  if (len != 0) {
    nx/=len;
    ny/=len;
  }
  int span=(int)PApplet.dist(x1,y1,x2,y2) * ACCURACY;
  System.out.println("span is " + span + " "+ x1+ " "+ y1+ " "+ x2+ " "+ y2);
  int[][] interp=new int[span][4];
  int prev=0;
  for (int i=1; i < count; i++) {
    int c0=color[i - 1];
    int c1=color[i];
    int last=(int)(offset[i] * (span - 1));
    for (int j=prev; j <= last; j++) {
      float btwn=PApplet.norm(j,prev,last);
      interp[j][0]=(int)PApplet.lerp((c0 >> 16) & 0xff,(c1 >> 16) & 0xff,btwn);
      interp[j][1]=(int)PApplet.lerp((c0 >> 8) & 0xff,(c1 >> 8) & 0xff,btwn);
      interp[j][2]=(int)PApplet.lerp(c0 & 0xff,c1 & 0xff,btwn);
      interp[j][3]=(int)(PApplet.lerp((c0 >> 24) & 0xff,(c1 >> 24) & 0xff,btwn) * opacity);
    }
    prev=last;
  }
  int[] data=new int[w * h * 4];
  int index=0;
  for (int j=0; j < h; j++) {
    for (int i=0; i < w; i++) {
      float px=(x + i) - x1;
      float py=(y + j) - y1;
      int which=(int)((px * nx + py * ny) * ACCURACY);
      if (which < 0)       which=0;
      if (which > interp.length - 1)       which=interp.length - 1;
      data[index++]=interp[which][0];
      data[index++]=interp[which][1];
      data[index++]=interp[which][2];
      data[index++]=interp[which][3];
    }
  }
  raster.setPixels(0,0,w,h,data);
  return raster;
}
