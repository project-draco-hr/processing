{
  if (!folder.isDirectory())   return false;
  String[] list=folder.list();
  if (list == null)   return false;
  Arrays.sort(list,String.CASE_INSENSITIVE_ORDER);
  ActionListener listener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String path=e.getActionCommand();
      if (new File(path).exists()) {
        boolean replace=replaceExisting;
        if ((e.getModifiers() & ActionEvent.SHIFT_MASK) != 0) {
          replace=!replace;
        }
        if (replace) {
          handleOpenReplace(path);
        }
 else {
          handleOpen(path);
        }
      }
 else {
        showWarning("Sketch Does Not Exist","The selected sketch no longer exists.\n" + "You may need to restart Processing to update\n" + "the sketchbook menu.",null);
      }
    }
  }
;
  boolean ifound=false;
  for (int i=0; i < list.length; i++) {
    if ((list[i].charAt(0) == '.') || list[i].equals("CVS"))     continue;
    File subfolder=new File(folder,list[i]);
    if (!subfolder.isDirectory())     continue;
    File entry=new File(subfolder,list[i] + ".pde");
    if (entry.exists()) {
      if (!Sketch.isSanitaryName(list[i])) {
        if (!builtOnce) {
          String complaining="The sketch \"" + list[i] + "\" cannot be used.\n"+ "Sketch names must contain only basic letters and numbers\n"+ "(ASCII-only with no spaces, "+ "and it cannot start with a number).\n"+ "To get rid of this message, remove the sketch from\n"+ entry.getAbsolutePath();
          Base.showMessage("Ignoring sketch with bad name",complaining);
        }
        continue;
      }
      JMenuItem item=new JMenuItem(list[i]);
      item.addActionListener(listener);
      item.setActionCommand(entry.getAbsolutePath());
      menu.add(item);
      ifound=true;
    }
 else {
      JMenu submenu=new JMenu(list[i]);
      boolean found=addSketches(submenu,subfolder,false);
      if (found) {
        menu.add(submenu);
        ifound=true;
      }
    }
  }
  return ifound;
}
