{
  try {
    File versionFile=Platform.getContentFile("lib/version.txt");
    if (versionFile.exists()) {
      String version=PApplet.loadStrings(versionFile)[0];
      if (!version.equals(VERSION_NAME)) {
        VERSION_NAME=version;
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  Platform.init();
  JPopupMenu.setDefaultLightWeightPopupEnabled(false);
  Language.init();
  Preferences.init();
  if (!SingleInstance.alreadyRunning(args)) {
    try {
      Platform.setLookAndFeel();
    }
 catch (    Exception e) {
      Messages.loge("Could not set the Look & Feel",e);
    }
    boolean sketchbookPrompt=false;
    if (Preferences.getBoolean("welcome.show")) {
      if (!Preferences.getBoolean("welcome.seen")) {
        String oldPath=Preferences.getOldSketchbookPath();
        if (oldPath != null) {
          String newPath=Preferences.getSketchbookPath();
          if (newPath == null) {
            sketchbookPrompt=true;
          }
 else           if (oldPath.equals(newPath)) {
            sketchbookPrompt=true;
          }
        }
      }
    }
    locateSketchbookFolder();
    try {
      untitledFolder=Util.createTempFolder("untitled","sketches",null);
      untitledFolder.deleteOnExit();
    }
 catch (    IOException e) {
      Messages.showError("Trouble without a name","Could not create a place to store untitled sketches.\n" + "That's gonna prevent us from continuing.",e);
    }
    Messages.log("about to create base...");
    try {
      final Base base=new Base(args);
      SingleInstance.startServer(base);
      if (Preferences.getBoolean("welcome.show")) {
        final boolean prompt=sketchbookPrompt;
        EventQueue.invokeLater(new Runnable(){
          public void run(){
            try {
              new Welcome(base,prompt);
            }
 catch (            IOException e) {
              Messages.showBadnessTrace("Unwelcoming","Please report this error to\n" + "https://github.com/processing/processing/issues",e,false);
            }
          }
        }
);
      }
    }
 catch (    Throwable t) {
      if (t.getCause() != null) {
        t=t.getCause();
      }
      Messages.showBadnessTrace("We're off on the wrong foot","An error occurred during startup.",t,true);
    }
    Messages.log("done creating base...");
  }
}
