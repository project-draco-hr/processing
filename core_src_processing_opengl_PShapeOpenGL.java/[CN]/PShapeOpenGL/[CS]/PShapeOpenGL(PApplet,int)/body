{
  pg=(PGraphicsOpenGL)parent.g;
  pgl=PGraphicsOpenGL.pgl;
  context=pgl.createEmptyContext();
  glPolyVertex=0;
  glPolyColor=0;
  glPolyNormal=0;
  glPolyTexcoord=0;
  glPolyAmbient=0;
  glPolySpecular=0;
  glPolyEmissive=0;
  glPolyShininess=0;
  glPolyIndex=0;
  glLineVertex=0;
  glLineColor=0;
  glLineAttrib=0;
  glLineIndex=0;
  glPointVertex=0;
  glPointColor=0;
  glPointAttrib=0;
  glPointIndex=0;
  this.tessellator=PGraphicsOpenGL.tessellator;
  this.family=family;
  this.root=this;
  this.parent=null;
  this.tessellated=false;
  if (family == GEOMETRY || family == PRIMITIVE || family == PATH) {
    inGeo=pg.newInGeometry(PGraphicsOpenGL.RETAINED);
  }
  textureMode=pg.textureMode;
  colorMode(pg.colorMode,pg.colorModeX,pg.colorModeY,pg.colorModeZ,pg.colorModeA);
  fill=pg.fill;
  fillColor=pg.fillColor;
  stroke=pg.stroke;
  strokeColor=pg.strokeColor;
  strokeWeight=pg.strokeWeight;
  strokeCap=pg.strokeCap;
  strokeJoin=pg.strokeJoin;
  tint=pg.tint;
  tintColor=pg.tintColor;
  setAmbient=pg.setAmbient;
  ambientColor=pg.ambientColor;
  specularColor=pg.specularColor;
  emissiveColor=pg.emissiveColor;
  shininess=pg.shininess;
  sphereDetailU=pg.sphereDetailU;
  sphereDetailV=pg.sphereDetailV;
  rectMode=pg.rectMode;
  ellipseMode=pg.ellipseMode;
  normalX=normalY=0;
  normalZ=1;
  normalMode=NORMAL_MODE_AUTO;
  breakShape=true;
  if (family == GROUP) {
    shapeCreated=true;
  }
}
