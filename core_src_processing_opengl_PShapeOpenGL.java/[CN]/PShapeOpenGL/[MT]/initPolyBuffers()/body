{
  int size=tessGeo.polyVertexCount;
  int sizef=size * PGL.SIZEOF_FLOAT;
  int sizei=size * PGL.SIZEOF_INT;
  glPolyVertex=pg.createVertexBufferObject(context.id());
  pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolyVertex);
  pgl.bufferData(PGL.ARRAY_BUFFER,4 * sizef,FloatBuffer.wrap(tessGeo.polyVertices,0,4 * size),PGL.STATIC_DRAW);
  glPolyColor=pg.createVertexBufferObject(context.id());
  pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolyColor);
  pgl.bufferData(PGL.ARRAY_BUFFER,sizei,IntBuffer.wrap(tessGeo.polyColors,0,size),PGL.STATIC_DRAW);
  glPolyNormal=pg.createVertexBufferObject(context.id());
  pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolyNormal);
  pgl.bufferData(PGL.ARRAY_BUFFER,3 * sizef,FloatBuffer.wrap(tessGeo.polyNormals,0,3 * size),PGL.STATIC_DRAW);
  glPolyTexcoord=pg.createVertexBufferObject(context.id());
  pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolyTexcoord);
  pgl.bufferData(PGL.ARRAY_BUFFER,2 * sizef,FloatBuffer.wrap(tessGeo.polyTexcoords,0,2 * size),PGL.STATIC_DRAW);
  glPolyAmbient=pg.createVertexBufferObject(context.id());
  pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolyAmbient);
  pgl.bufferData(PGL.ARRAY_BUFFER,sizei,IntBuffer.wrap(tessGeo.polyAmbient,0,size),PGL.STATIC_DRAW);
  glPolySpecular=pg.createVertexBufferObject(context.id());
  pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolySpecular);
  pgl.bufferData(PGL.ARRAY_BUFFER,sizei,IntBuffer.wrap(tessGeo.polySpecular,0,size),PGL.STATIC_DRAW);
  glPolyEmissive=pg.createVertexBufferObject(context.id());
  pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolyEmissive);
  pgl.bufferData(PGL.ARRAY_BUFFER,sizei,IntBuffer.wrap(tessGeo.polyEmissive,0,size),PGL.STATIC_DRAW);
  glPolyShininess=pg.createVertexBufferObject(context.id());
  pgl.bindBuffer(PGL.ARRAY_BUFFER,glPolyShininess);
  pgl.bufferData(PGL.ARRAY_BUFFER,sizef,FloatBuffer.wrap(tessGeo.polyShininess,0,size),PGL.STATIC_DRAW);
  pgl.bindBuffer(PGL.ARRAY_BUFFER,0);
  glPolyIndex=pg.createVertexBufferObject(context.id());
  pgl.bindBuffer(PGL.ELEMENT_ARRAY_BUFFER,glPolyIndex);
  pgl.bufferData(PGL.ELEMENT_ARRAY_BUFFER,tessGeo.polyIndexCount * PGL.SIZEOF_INDEX,ShortBuffer.wrap(tessGeo.polyIndices,0,tessGeo.polyIndexCount),PGL.STATIC_DRAW);
  pgl.bindBuffer(PGL.ELEMENT_ARRAY_BUFFER,0);
}
