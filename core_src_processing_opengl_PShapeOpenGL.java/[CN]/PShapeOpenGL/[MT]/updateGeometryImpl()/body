{
  if (modifiedPolyVertices) {
    int offset=firstModifiedPolyVertex;
    int size=lastModifiedPolyVertex - offset + 1;
    copyPolyVertices(offset,size);
    modifiedPolyVertices=false;
    firstModifiedPolyVertex=PConstants.MAX_INT;
    lastModifiedPolyVertex=PConstants.MIN_INT;
  }
  if (modifiedPolyColors) {
    int offset=firstModifiedPolyColor;
    int size=lastModifiedPolyColor - offset + 1;
    copyPolyColors(offset,size);
    modifiedPolyColors=false;
    firstModifiedPolyColor=PConstants.MAX_INT;
    lastModifiedPolyColor=PConstants.MIN_INT;
  }
  if (modifiedPolyNormals) {
    int offset=firstModifiedPolyNormal;
    int size=lastModifiedPolyNormal - offset + 1;
    copyPolyNormals(offset,size);
    modifiedPolyNormals=false;
    firstModifiedPolyNormal=PConstants.MAX_INT;
    lastModifiedPolyNormal=PConstants.MIN_INT;
  }
  if (modifiedPolyTexCoords) {
    int offset=firstModifiedPolyTexcoord;
    int size=lastModifiedPolyTexcoord - offset + 1;
    copyPolyTexCoords(offset,size);
    modifiedPolyTexCoords=false;
    firstModifiedPolyTexcoord=PConstants.MAX_INT;
    lastModifiedPolyTexcoord=PConstants.MIN_INT;
  }
  if (modifiedPolyAmbient) {
    int offset=firstModifiedPolyAmbient;
    int size=lastModifiedPolyAmbient - offset + 1;
    copyPolyAmbient(offset,size);
    modifiedPolyAmbient=false;
    firstModifiedPolyAmbient=PConstants.MAX_INT;
    lastModifiedPolyAmbient=PConstants.MIN_INT;
  }
  if (modifiedPolySpecular) {
    int offset=firstModifiedPolySpecular;
    int size=lastModifiedPolySpecular - offset + 1;
    copyPolySpecular(offset,size);
    modifiedPolySpecular=false;
    firstModifiedPolySpecular=PConstants.MAX_INT;
    lastModifiedPolySpecular=PConstants.MIN_INT;
  }
  if (modifiedPolyEmissive) {
    int offset=firstModifiedPolyEmissive;
    int size=lastModifiedPolyEmissive - offset + 1;
    copyPolyEmissive(offset,size);
    modifiedPolyEmissive=false;
    firstModifiedPolyEmissive=PConstants.MAX_INT;
    lastModifiedPolyEmissive=PConstants.MIN_INT;
  }
  if (modifiedPolyShininess) {
    int offset=firstModifiedPolyShininess;
    int size=lastModifiedPolyShininess - offset + 1;
    copyPolyShininess(offset,size);
    modifiedPolyShininess=false;
    firstModifiedPolyShininess=PConstants.MAX_INT;
    lastModifiedPolyShininess=PConstants.MIN_INT;
  }
  for (  String name : polyAttribs.keySet()) {
    VertexAttribute attrib=polyAttribs.get(name);
    if (attrib.modified) {
      int offset=firstModifiedPolyVertex;
      int size=lastModifiedPolyVertex - offset + 1;
      copyPolyAttrib(attrib,offset,size);
      attrib.modified=false;
      attrib.firstModified=PConstants.MAX_INT;
      attrib.lastModified=PConstants.MIN_INT;
    }
  }
  if (modifiedLineVertices) {
    int offset=firstModifiedLineVertex;
    int size=lastModifiedLineVertex - offset + 1;
    copyLineVertices(offset,size);
    modifiedLineVertices=false;
    firstModifiedLineVertex=PConstants.MAX_INT;
    lastModifiedLineVertex=PConstants.MIN_INT;
  }
  if (modifiedLineColors) {
    int offset=firstModifiedLineColor;
    int size=lastModifiedLineColor - offset + 1;
    copyLineColors(offset,size);
    modifiedLineColors=false;
    firstModifiedLineColor=PConstants.MAX_INT;
    lastModifiedLineColor=PConstants.MIN_INT;
  }
  if (modifiedLineAttributes) {
    int offset=firstModifiedLineAttribute;
    int size=lastModifiedLineAttribute - offset + 1;
    copyLineAttributes(offset,size);
    modifiedLineAttributes=false;
    firstModifiedLineAttribute=PConstants.MAX_INT;
    lastModifiedLineAttribute=PConstants.MIN_INT;
  }
  if (modifiedPointVertices) {
    int offset=firstModifiedPointVertex;
    int size=lastModifiedPointVertex - offset + 1;
    copyPointVertices(offset,size);
    modifiedPointVertices=false;
    firstModifiedPointVertex=PConstants.MAX_INT;
    lastModifiedPointVertex=PConstants.MIN_INT;
  }
  if (modifiedPointColors) {
    int offset=firstModifiedPointColor;
    int size=lastModifiedPointColor - offset + 1;
    copyPointColors(offset,size);
    modifiedPointColors=false;
    firstModifiedPointColor=PConstants.MAX_INT;
    lastModifiedPointColor=PConstants.MIN_INT;
  }
  if (modifiedPointAttributes) {
    int offset=firstModifiedPointAttribute;
    int size=lastModifiedPointAttribute - offset + 1;
    copyPointAttributes(offset,size);
    modifiedPointAttributes=false;
    firstModifiedPointAttribute=PConstants.MAX_INT;
    lastModifiedPointAttribute=PConstants.MIN_INT;
  }
  modified=false;
}
