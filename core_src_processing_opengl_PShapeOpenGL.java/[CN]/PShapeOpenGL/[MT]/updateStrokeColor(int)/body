{
  if (strokeColor == newStrokeColor)   return;
  strokeColor=newStrokeColor;
  Arrays.fill(inGeo.strokeColors,0,inGeo.vertexCount,PGL.javaToNativeARGB(strokeColor));
  if (shapeEnded && tessellated && (hasLines || hasPoints)) {
    if (hasLines) {
      if (is3D()) {
        PGL.fillBuffer(tessGeo.lineColors,firstLineVertex,lastLineVertex,PGL.javaToNativeARGB(strokeColor));
        root.setModifiedLineColors(firstLineVertex,lastLineVertex);
      }
 else       if (is2D()) {
        PGL.fillBuffer(tessGeo.polyColors,firstLineVertex,lastLineVertex,PGL.javaToNativeARGB(strokeColor));
        root.setModifiedPolyColors(firstLineVertex,lastLineVertex);
      }
    }
    if (hasPoints) {
      if (is3D()) {
        PGL.fillBuffer(tessGeo.pointColors,firstPointVertex,lastPointVertex,PGL.javaToNativeARGB(strokeColor));
        root.setModifiedPointColors(firstPointVertex,lastPointVertex);
      }
 else       if (is2D()) {
        PGL.fillBuffer(tessGeo.polyColors,firstPointVertex,lastPointVertex,PGL.javaToNativeARGB(strokeColor));
        root.setModifiedPolyColors(firstPointVertex,lastPointVertex);
      }
    }
  }
}
