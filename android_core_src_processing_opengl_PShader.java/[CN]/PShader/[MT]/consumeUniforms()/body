{
  if (uniformValues != null && 0 < uniformValues.size()) {
    for (    Integer loc : uniformValues.keySet()) {
      UniformValue val=uniformValues.get(loc);
      if (val.type == INT1) {
        int[] v=((int[])val.value);
        pgl.glUniform1i(loc,v[0]);
      }
 else       if (val.type == INT2) {
        int[] v=((int[])val.value);
        pgl.glUniform2i(loc,v[0],v[1]);
      }
 else       if (val.type == INT3) {
        int[] v=((int[])val.value);
        pgl.glUniform3i(loc,v[0],v[1],v[2]);
      }
 else       if (val.type == INT4) {
        int[] v=((int[])val.value);
        pgl.glUniform4i(loc,v[0],v[1],v[2],v[4]);
      }
 else       if (val.type == FLOAT1) {
        float[] v=((float[])val.value);
        pgl.glUniform1f(loc,v[0]);
      }
 else       if (val.type == FLOAT2) {
        float[] v=((float[])val.value);
        pgl.glUniform2f(loc,v[0],v[1]);
      }
 else       if (val.type == FLOAT3) {
        float[] v=((float[])val.value);
        pgl.glUniform3f(loc,v[0],v[1],v[2]);
      }
 else       if (val.type == FLOAT4) {
        float[] v=((float[])val.value);
        pgl.glUniform4f(loc,v[0],v[1],v[2],v[3]);
      }
 else       if (val.type == INT1VEC) {
        int[] v=((int[])val.value);
        pgl.glUniform1iv(loc,v.length,v,0);
      }
 else       if (val.type == FLOAT1VEC) {
        float[] v=((float[])val.value);
        pgl.glUniform1fv(loc,v.length,v,0);
      }
 else       if (val.type == FLOAT2VEC) {
        float[] v=((float[])val.value);
        pgl.glUniform2fv(loc,v.length / 2,v,0);
      }
 else       if (val.type == FLOAT3VEC) {
        float[] v=((float[])val.value);
        pgl.glUniform3fv(loc,v.length / 3,v,0);
      }
 else       if (val.type == FLOAT4VEC) {
        float[] v=((float[])val.value);
        pgl.glUniform4fv(loc,v.length / 4,v,0);
      }
 else       if (val.type == MAT2x2) {
        float[] v=((float[])val.value);
        pgl.glUniformMatrix2fv(loc,1,false,v,0);
      }
 else       if (val.type == MAT3x3) {
        float[] v=((float[])val.value);
        pgl.glUniformMatrix3fv(loc,1,false,v,0);
      }
 else       if (val.type == MAT4x4) {
        float[] v=((float[])val.value);
        pgl.glUniformMatrix4fv(loc,1,false,v,0);
      }
    }
    uniformValues.clear();
  }
}
