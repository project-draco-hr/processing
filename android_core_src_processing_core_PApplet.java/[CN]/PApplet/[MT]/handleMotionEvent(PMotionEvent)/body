{
  pmotionX=emotionX;
  pmotionY=emotionY;
  motionX=pme.motionX[0];
  motionY=pme.motionY[0];
  motionPressure=pme.motionPressure[0];
  pmouseX=emouseX;
  pmouseY=emouseY;
  mouseX=pme.mouseX[0];
  mouseY=pme.mouseY[0];
  if (firstMotion) {
    pmouseX=mouseX;
    pmouseY=mouseY;
    dmouseX=mouseX;
    dmouseY=mouseY;
    pmotionX=motionX;
    pmotionY=motionY;
    dmotionX=motionX;
    dmotionY=motionY;
    firstMotion=false;
  }
  if (ppointersX.length < numPointers) {
    ppointersX=new float[numPointers];
    ppointersY=new float[numPointers];
    ppointersPressure=new float[numPointers];
  }
  arrayCopy(pointersX,ppointersX);
  arrayCopy(pointersY,ppointersY);
  arrayCopy(pointersPressure,ppointersPressure);
  numPointers=pme.numPointers;
  if (pointersX.length < numPointers) {
    pointersX=new float[numPointers];
    pointersY=new float[numPointers];
    pointersPressure=new float[numPointers];
  }
  arrayCopy(pme.motionX,pointersX);
  arrayCopy(pme.motionY,pointersY);
  arrayCopy(pme.motionPressure,pointersPressure);
  if (pme.action == MotionEvent.ACTION_DOWN || (!mousePressed && numPointers == 1)) {
    mousePressed=true;
    onePointerGesture=true;
    twoPointerGesture=false;
    downMillis=millis();
    downX=pointersX[0];
    downY=pointersY[0];
    mousePressed();
    pressEvent();
  }
 else   if ((pme.action == MotionEvent.ACTION_POINTER_DOWN && numPointers == 2) || (pme.action == MotionEvent.ACTION_POINTER_2_DOWN) || (pnumPointers == 1 && numPointers == 2)) {
    onePointerGesture=false;
    twoPointerGesture=true;
  }
 else   if ((pme.action == MotionEvent.ACTION_POINTER_UP && numPointers == 2) || (pme.action == MotionEvent.ACTION_POINTER_2_UP) || (twoPointerGesture && numPointers < 2)) {
    twoPointerGesture=false;
  }
 else   if (pme.action == MotionEvent.ACTION_MOVE) {
    if (onePointerGesture) {
      if (mousePressed) {
        mouseDragged();
        dragEvent();
      }
 else {
        mouseMoved();
        moveEvent();
      }
    }
 else     if (twoPointerGesture) {
      float d0=PApplet.dist(ppointersX[0],ppointersY[0],ppointersX[1],ppointersY[1]);
      float d1=PApplet.dist(pointersX[0],pointersY[0],pointersX[1],pointersY[1]);
      if (0 < d0 && 0 < d1) {
        float centerX=0.5f * (pointersX[0] + pointersX[1]);
        float centerY=0.5f * (pointersY[0] + pointersY[1]);
        zoomEvent(centerX,centerY,d0,d1);
      }
    }
  }
 else   if (pme.action == MotionEvent.ACTION_UP) {
    mousePressed=false;
    float upX=pointersX[0];
    float upY=pointersY[0];
    float gestureLength=PApplet.dist(downX,downY,upX,upY);
    int upMillis=millis();
    int gestureTime=upMillis - downMillis;
    if (onePointerGesture) {
      boolean tap=gestureLength <= MAX_TAP_DISP && gestureTime <= MAX_TAP_DURATION;
      if (tap) {
        mouseClicked();
        tapEvent(downX,downY);
      }
 else       if (MIN_SWIPE_LENGTH <= gestureLength && gestureTime <= MAX_SWIPE_DURATION) {
        mouseReleased();
        swipeEvent(downX,downY,upX,upY);
      }
 else {
        mouseReleased();
        releaseEvent();
      }
    }
 else {
      mouseReleased();
      releaseEvent();
    }
    onePointerGesture=twoPointerGesture=false;
  }
 else   if (pme.action == MotionEvent.ACTION_CANCEL) {
    onePointerGesture=twoPointerGesture=false;
    mousePressed=false;
    mouseReleased();
    releaseEvent();
  }
 else {
  }
  pnumPointers=numPointers;
  if (pme.action == MotionEvent.ACTION_MOVE) {
    emotionX=motionX;
    emotionY=motionY;
    emouseX=mouseX;
    emouseY=mouseY;
  }
}
