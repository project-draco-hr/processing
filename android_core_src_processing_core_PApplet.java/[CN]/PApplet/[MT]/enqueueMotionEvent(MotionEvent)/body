{
synchronized (motionLock) {
    if (motionEventQueue == null) {
      motionEventQueue=new PMotionEvent[20];
      for (int i=0; i < motionEventQueue.length; i++) {
        motionEventQueue[i]=new PMotionEvent();
      }
    }
    int historyCount=event.getHistorySize();
    if (motionEventCount + historyCount >= motionEventQueue.length) {
      int atLeast=motionEventCount + historyCount + 1;
      PMotionEvent[] temp=new PMotionEvent[max(atLeast,motionEventCount << 1)];
      if (PApplet.DEBUG) {
        println("motion: " + motionEventCount + " "+ historyCount+ " "+ motionEventQueue.length);
        println("allocating " + temp.length + " entries for motion events");
      }
      System.arraycopy(motionEventQueue,0,temp,0,motionEventCount);
      motionEventQueue=temp;
      for (int i=motionEventCount; i < motionEventQueue.length; i++) {
        motionEventQueue[i]=new PMotionEvent();
      }
    }
    PMotionEvent pme=motionEventQueue[motionEventCount + historyCount];
    pme.setAction(event.getAction());
    pme.setNumPointers(event.getPointerCount());
    pme.setPointers(event);
    if (pme.action == MotionEvent.ACTION_MOVE && historyCount > 0) {
      for (int i=0; i < historyCount; i++) {
        PMotionEvent hist=motionEventQueue[motionEventCount++];
        hist.setAction(event.getAction());
        hist.setNumPointers(event.getPointerCount());
        pme.setPointers(event,i);
      }
    }
    motionEventCount++;
  }
}
