{
  super(context);
  final ActivityManager activityManager=(ActivityManager)getSystemService(Context.ACTIVITY_SERVICE);
  final ConfigurationInfo configurationInfo=activityManager.getDeviceConfigurationInfo();
  final boolean supportsGLES2=configurationInfo.reqGlEsVersion >= 0x20000;
  if (!supportsGLES2) {
    throw new RuntimeException("P3D: OpenGL ES 2.0 is not supported by this device.");
  }
  surfaceHolder=getHolder();
  surfaceHolder.addCallback(this);
  if (is3D) {
    g3=new PGraphics3D();
  }
 else {
    g3=new PGraphics2D();
  }
  g3.setParent(PApplet.this);
  g3.setPrimary(true);
  g3.setSize(wide,high);
  String depth=sketchColordepth();
  if (!depth.equals(DEFAULT_COLOR_DEPTH)) {
    if (sketchTranslucency()) {
      surfaceHolder.setFormat(PixelFormat.TRANSLUCENT);
    }
    String list[]=depth.split(":");
    int val[]={4,4,4,4,16,0};
    if (3 < list.length) {
      for (int i=0; i < 4; i++) {
        val[i]=parseInt(list[i]);
      }
    }
    if (4 < list.length) {
      val[4]=parseInt(list[4]);
    }
    if (5 < list.length) {
      val[5]=parseInt(list[5]);
    }
    setEGLContextFactory(g3.pgl.getContextFactory());
    setEGLConfigChooser(g3.pgl.getConfigChooser(val[0],val[1],val[2],val[3],val[4],val[5]));
  }
 else {
    setEGLContextClientVersion(2);
  }
  setRenderer(g3.pgl.getRenderer());
  setRenderMode(GLSurfaceView.RENDERMODE_WHEN_DIRTY);
  g=g3;
  setFocusable(true);
  setFocusableInTouchMode(true);
  requestFocus();
}
