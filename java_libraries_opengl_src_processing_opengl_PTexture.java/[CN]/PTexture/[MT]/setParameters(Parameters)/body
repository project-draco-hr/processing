{
  if (params.target == TEXTURE2D) {
    glTarget=PGLJava.TEXTURE_2D;
  }
 else {
    throw new RuntimeException("OPENGL2: Unknown texture target");
  }
  if (params.format == RGB) {
    glFormat=PGLJava.RGB;
  }
 else   if (params.format == ARGB) {
    glFormat=PGLJava.RGBA;
  }
 else   if (params.format == ALPHA) {
    glFormat=PGLJava.ALPHA;
  }
 else {
    throw new RuntimeException("OPENGL2: Unknown texture format");
  }
  if (params.sampling == POINT) {
    glMagFilter=PGLJava.NEAREST;
    glMinFilter=PGLJava.NEAREST;
  }
 else   if (params.sampling == BILINEAR) {
    glMagFilter=PGLJava.LINEAR;
    glMinFilter=PGLJava.LINEAR;
  }
 else   if (params.sampling == TRILINEAR) {
    glMagFilter=PGLJava.LINEAR;
    glMinFilter=PGLJava.LINEAR_MIPMAP_LINEAR;
  }
 else {
    throw new RuntimeException("OPENGL2: Unknown texture filtering mode");
  }
  if (params.wrapU == CLAMP) {
    glWrapS=PGLJava.CLAMP_TO_EDGE;
  }
 else   if (params.wrapU == REPEAT) {
    glWrapS=PGLJava.REPEAT;
  }
 else {
    throw new RuntimeException("OPENGL2: Unknown wrapping mode");
  }
  if (params.wrapV == CLAMP) {
    glWrapT=PGLJava.CLAMP_TO_EDGE;
  }
 else   if (params.wrapV == REPEAT) {
    glWrapT=PGLJava.REPEAT;
  }
 else {
    throw new RuntimeException("OPENGL2: Unknown wrapping mode");
  }
  usingMipmaps=glMinFilter == PGLJava.LINEAR_MIPMAP_LINEAR;
  flippedX=false;
  flippedY=false;
}
