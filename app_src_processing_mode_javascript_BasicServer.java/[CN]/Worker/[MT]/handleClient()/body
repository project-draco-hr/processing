{
  InputStream is=new BufferedInputStream(socket.getInputStream());
  PrintStream ps=new PrintStream(socket.getOutputStream());
  socket.setSoTimeout(getTimeout());
  socket.setTcpNoDelay(true);
  for (int i=0; i < BUF_SIZE; i++) {
    buf[i]=0;
  }
  try {
    int nread=0, r=0;
    outerloop:     while (nread < BUF_SIZE) {
      r=is.read(buf,nread,BUF_SIZE - nread);
      if (r == -1) {
        return;
      }
      int i=nread;
      nread+=r;
      for (; i < nread; i++) {
        if (buf[i] == (byte)'\n' || buf[i] == (byte)'\r') {
          break outerloop;
        }
      }
    }
    boolean doingGet;
    int index;
    if (buf[0] == (byte)'G' && buf[1] == (byte)'E' && buf[2] == (byte)'T' && buf[3] == (byte)' ') {
      doingGet=true;
      index=4;
    }
 else     if (buf[0] == (byte)'H' && buf[1] == (byte)'E' && buf[2] == (byte)'A' && buf[3] == (byte)'D' && buf[4] == (byte)' ') {
      doingGet=false;
      index=5;
    }
 else {
      ps.print("HTTP/1.0 " + HTTP_BAD_METHOD + " unsupported method type: ");
      ps.write(buf,0,5);
      ps.write(EOL);
      ps.flush();
      socket.close();
      return;
    }
    int i=0;
    for (i=index; i < nread; i++) {
      if (buf[i] == (byte)' ') {
        break;
      }
    }
    String fname=(new String(buf,index,i - index)).replace('/',File.separatorChar);
    if (fname.startsWith(File.separator)) {
      fname=fname.substring(1);
    }
    fname=java.net.URLDecoder.decode(fname,"UTF-8");
    if (fname.startsWith("logger?")) {
      System.out.println(fname.substring(7));
    }
 else {
      File targ=new File(getRoot(),fname);
      if (targ.isDirectory()) {
        File ind=new File(targ,"index.html");
        if (ind.exists()) {
          targ=ind;
        }
      }
      boolean OK=printHeaders(targ,ps);
      if (doingGet) {
        if (OK) {
          sendFile(targ,ps);
        }
 else {
          send404(targ,ps);
        }
      }
    }
  }
  finally {
    socket.close();
  }
}
