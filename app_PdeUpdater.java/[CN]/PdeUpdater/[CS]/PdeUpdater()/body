{
  Properties properties=new Properties();
  try {
    properties.load(new FileInputStream("lib/pde.properties"));
  }
 catch (  Exception e) {
    System.err.println("Error reading pde.properties");
    e.printStackTrace();
    System.exit(1);
  }
  boolean updateEnabled=true;
  if (updateEnabled) {
    long lastUpdate=0;
    try {
      DataInputStream dis=new DataInputStream(new FileInputStream("lib/version"));
      lastUpdate=dis.readLong();
    }
 catch (    IOException e) {
    }
    String baseUrl=properties.getProperty("update.url");
    try {
      URL url=new URL(baseUrl + "version");
      URLConnection conn=url.openConnection();
      long newDate=conn.getLastModified();
      if (newDate > lastUpdate) {
        System.out.println("new update available");
        DataOutputStream vos=new DataOutputStream(new FileOutputStream("lib/version"));
        vos.writeLong(newDate);
        vos.flush();
        vos.close();
        url=new URL(baseUrl + "pde.jar");
        conn=url.openConnection();
        FileOutputStream os=new FileOutputStream("lib/pde.jar");
        InputStream is=conn.getInputStream();
        copyStream(is,os);
        os.close();
      }
      System.exit(0);
    }
 catch (    IOException e1) {
      e1.printStackTrace();
    }
  }
}
