{
  final Project p=new Project();
  String path=buildFile.getAbsolutePath().replace('\\','/');
  p.setUserProperty("ant.file",path);
  p.setUserProperty("build.compiler","extJavac");
  final DefaultLogger consoleLogger=new DefaultLogger();
  consoleLogger.setErrorPrintStream(System.err);
  consoleLogger.setOutputPrintStream(System.out);
  consoleLogger.setMessageOutputLevel(Project.MSG_INFO);
  p.addBuildListener(consoleLogger);
  final DefaultLogger errorLogger=new DefaultLogger();
  final ByteArrayOutputStream errb=new ByteArrayOutputStream();
  final PrintStream errp=new PrintStream(errb);
  errorLogger.setErrorPrintStream(errp);
  final ByteArrayOutputStream outb=new ByteArrayOutputStream();
  final PrintStream outp=new PrintStream(outb);
  errorLogger.setOutputPrintStream(outp);
  errorLogger.setMessageOutputLevel(Project.MSG_INFO);
  p.addBuildListener(errorLogger);
  try {
    p.fireBuildStarted();
    p.init();
    final ProjectHelper helper=ProjectHelper.getProjectHelper();
    p.addReference("ant.projectHelper",helper);
    helper.parse(p,buildFile);
    p.executeTarget(target);
    return true;
  }
 catch (  final BuildException e) {
    p.fireBuildFinished(e);
    antBuildProblems(new String(outb.toByteArray()),new String(errb.toByteArray()));
  }
  return false;
}
