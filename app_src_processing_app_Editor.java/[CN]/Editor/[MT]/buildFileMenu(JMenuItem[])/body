{
  JMenuItem item;
  JMenu fileMenu=new JMenu("File");
  item=Toolkit.newJMenuItem("New",'N');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      base.handleNew();
    }
  }
);
  fileMenu.add(item);
  item=Toolkit.newJMenuItem("Open...",'O');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      base.handleOpenPrompt();
    }
  }
);
  fileMenu.add(item);
  fileMenu.add(base.getSketchbookMenu());
  JMenuItem sbMenu=new JMenuItem("Sketchbook Tree");
  sbMenu.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      mode.showSketchbookFrame();
    }
  }
);
  fileMenu.add(sbMenu);
  item=Toolkit.newJMenuItemShift("Examples...",'O');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      mode.showExamplesFrame();
    }
  }
);
  fileMenu.add(item);
  item=Toolkit.newJMenuItem("Close",'W');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      base.handleClose(Editor.this,false);
    }
  }
);
  fileMenu.add(item);
  item=Toolkit.newJMenuItem("Save",'S');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handleSave(false);
    }
  }
);
  fileMenu.add(item);
  item=Toolkit.newJMenuItemShift("Save As...",'S');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handleSaveAs();
    }
  }
);
  fileMenu.add(item);
  if (exportItems != null) {
    for (    JMenuItem ei : exportItems) {
      fileMenu.add(ei);
    }
  }
  fileMenu.addSeparator();
  item=Toolkit.newJMenuItemShift("Page Setup",'P');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handlePageSetup();
    }
  }
);
  fileMenu.add(item);
  item=Toolkit.newJMenuItem("Print",'P');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handlePrint();
    }
  }
);
  fileMenu.add(item);
  if (!Base.isMacOS()) {
    fileMenu.addSeparator();
    item=Toolkit.newJMenuItem("Preferences",',');
    item.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        base.handlePrefs();
      }
    }
);
    fileMenu.add(item);
    fileMenu.addSeparator();
    item=Toolkit.newJMenuItem("Quit",'Q');
    item.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        base.handleQuit();
      }
    }
);
    fileMenu.add(item);
  }
  return fileMenu;
}
