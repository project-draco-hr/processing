{
  JMenu menu=new JMenu("Edit");
  JMenuItem item;
  undoItem=Base.newJMenuItem("Undo",'Z');
  undoItem.addActionListener(undoAction=new UndoAction());
  menu.add(undoItem);
  if (Base.isWindows()) {
    redoItem=Base.newJMenuItem("Redo",'Y');
  }
 else {
    redoItem=Base.newJMenuItemShift("Redo",'Z');
  }
  redoItem.addActionListener(redoAction=new RedoAction());
  menu.add(redoItem);
  menu.addSeparator();
  item=Base.newJMenuItem("Cut",'X');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handleCut();
    }
  }
);
  menu.add(item);
  item=Base.newJMenuItem("Copy",'C');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      textarea.copy();
    }
  }
);
  menu.add(item);
  item=Base.newJMenuItemShift("Copy as HTML",'C');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handleCopyAsHTML();
    }
  }
);
  menu.add(item);
  item=Base.newJMenuItem("Paste",'V');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      textarea.paste();
      sketch.setModified(true);
    }
  }
);
  menu.add(item);
  item=Base.newJMenuItem("Select All",'A');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      textarea.selectAll();
    }
  }
);
  menu.add(item);
  menu.addSeparator();
  item=Base.newJMenuItem("Delete Selected Lines",'D');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handleDeleteLines();
    }
  }
);
  menu.add(item);
  item=new JMenuItem("Move Selected Lines Up");
  item.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_UP,Event.ALT_MASK));
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handleMoveLines(true);
    }
  }
);
  menu.add(item);
  item=new JMenuItem("Move Selected Lines Down");
  item.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_DOWN,Event.ALT_MASK));
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handleMoveLines(false);
    }
  }
);
  menu.add(item);
  menu.addSeparator();
  item=Base.newJMenuItem("Auto Format",'T');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handleAutoFormat();
    }
  }
);
  menu.add(item);
  item=Base.newJMenuItem("Comment/Uncomment",'/');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handleCommentUncomment();
    }
  }
);
  menu.add(item);
  item=Base.newJMenuItem("Increase Indent",']');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handleIndentOutdent(true);
    }
  }
);
  menu.add(item);
  item=Base.newJMenuItem("Decrease Indent",'[');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      handleIndentOutdent(false);
    }
  }
);
  menu.add(item);
  menu.addSeparator();
  item=Base.newJMenuItem("Find...",'F');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (find == null) {
        find=new FindReplace(Editor.this);
      }
      find.setVisible(true);
    }
  }
);
  menu.add(item);
  item=Base.newJMenuItem("Find Next",'G');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (find != null) {
        find.findNext();
      }
    }
  }
);
  menu.add(item);
  item=Base.newJMenuItemShift("Find Previous",'G');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (find != null) {
        find.findPrevious();
      }
    }
  }
);
  menu.add(item);
  item=Base.newJMenuItemAlt("Use Selection for Find",'F');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (find == null) {
        find=new FindReplace(Editor.this);
      }
      find.setFindText(getSelectedText());
    }
  }
);
  menu.add(item);
  return menu;
}
