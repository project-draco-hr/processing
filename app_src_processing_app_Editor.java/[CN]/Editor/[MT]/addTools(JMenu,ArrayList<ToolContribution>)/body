{
  HashMap<String,JMenuItem> toolItems=new HashMap<String,JMenuItem>();
  for (  final ToolContribution tool : tools) {
    String title=tool.getMenuTitle();
    final JMenuItem item=new JMenuItem(title);
    item.addActionListener(new ActionListener(){
      boolean inited;
      public void actionPerformed(      ActionEvent e){
        try {
          if (!inited) {
            tool.init(Editor.this);
            inited=true;
          }
          EventQueue.invokeLater(tool);
        }
 catch (        NoSuchMethodError nsme) {
          statusError("\"" + tool.getMenuTitle() + "\" "+ "is not compatible with this version of Processing");
          nsme.printStackTrace();
          item.setEnabled(false);
        }
catch (        Exception ex) {
          statusError("An error occurred inside \"" + tool.getMenuTitle() + "\"");
          ex.printStackTrace();
        }
      }
    }
);
    toolItems.put(title,item);
  }
  ArrayList<String> toolList=new ArrayList<String>(toolItems.keySet());
  if (toolList.size() > 0) {
    menu.addSeparator();
    Collections.sort(toolList);
    for (    String title : toolList) {
      menu.add(toolItems.get(title));
    }
  }
}
