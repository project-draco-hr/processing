{
  JMenuItem item;
  sketchMenu=new JMenu("Sketch");
  for (  JMenuItem mi : runItems) {
    sketchMenu.add(mi);
  }
  sketchMenu.addSeparator();
  sketchMenu.add(mode.getImportMenu());
  item=Toolkit.newJMenuItem("Show Sketch Folder",'K');
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      Base.openFolder(sketch.getFolder());
    }
  }
);
  sketchMenu.add(item);
  item.setEnabled(Base.openFolderAvailable());
  item=new JMenuItem("Add File...");
  item.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      sketch.handleAddFile();
    }
  }
);
  sketchMenu.add(item);
  sketchMenu.add(item);
  sketchMenu.addSeparator();
  sketchMenu.addMenuListener(new MenuListener(){
    java.util.List<JMenuItem> menuList=new java.util.ArrayList<JMenuItem>();
    @Override public void menuSelected(    MenuEvent arg0){
      java.util.List<Editor> ed=base.getEditors();
      JMenuItem item;
      for (      Editor editor2 : ed) {
        item=new JMenuItem(editor2.getSketch().getName());
        item.setText(editor2.getSketch().getName() + " (" + editor2.getMode().getTitle()+ ")");
        sketchMenu.add(item);
        menuList.add(item);
      }
    }
    @Override public void menuDeselected(    MenuEvent arg0){
      for (      JMenuItem it : menuList)       sketchMenu.remove(it);
      menuList.clear();
    }
    @Override public void menuCanceled(    MenuEvent arg0){
      menuDeselected(arg0);
    }
  }
);
  return sketchMenu;
}
