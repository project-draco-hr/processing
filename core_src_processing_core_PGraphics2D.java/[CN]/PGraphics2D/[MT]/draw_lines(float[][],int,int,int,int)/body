{
  if (strokeWeight < 2) {
    for (int i=0; i < max; i+=increment) {
      if ((skip != 0) && (((i + offset) % skip) == 0))       continue;
      float a[]=vertices[i];
      float b[]=vertices[i + offset];
      if (line == null)       line=new PLine(this);
      line.reset();
      line.setIntensities(a[SR],a[SG],a[SB],a[SA],b[SR],b[SG],b[SB],b[SA]);
      line.setVertices(a[TX],a[TY],a[TZ],b[TX],b[TY],b[TZ]);
      line.draw();
    }
  }
 else {
    if ((strokeWeight < 2) && !strokeChanged) {
      for (int i=0; i < max; i+=increment) {
        if ((skip != 0) && (((i + offset) % skip) == 0))         continue;
        thin_flat_line((int)vertices[i][TX],(int)vertices[i][TY],(int)vertices[i + offset][TX],(int)vertices[i + offset][TY]);
      }
    }
 else {
      for (int i=0; i < max; i+=increment) {
        if ((skip != 0) && (((i + offset) % skip) == 0))         continue;
        float v1[]=vertices[i];
        float v2[]=vertices[i + offset];
        thick_flat_line(v1[TX],v1[TY],v1[SR],v1[SG],v1[SB],v1[SA],v2[TX],v2[TY],v2[SR],v2[SG],v2[SB],v2[SA]);
      }
    }
  }
}
