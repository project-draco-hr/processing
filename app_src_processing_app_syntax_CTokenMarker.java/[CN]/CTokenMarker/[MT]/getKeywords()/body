{
  if (cKeywords == null) {
    cKeywords=new KeywordMap(false);
    cKeywords.add("char",Token.KEYWORD3);
    cKeywords.add("double",Token.KEYWORD3);
    cKeywords.add("enum",Token.KEYWORD3);
    cKeywords.add("float",Token.KEYWORD3);
    cKeywords.add("int",Token.KEYWORD3);
    cKeywords.add("long",Token.KEYWORD3);
    cKeywords.add("short",Token.KEYWORD3);
    cKeywords.add("signed",Token.KEYWORD3);
    cKeywords.add("struct",Token.KEYWORD3);
    cKeywords.add("typedef",Token.KEYWORD3);
    cKeywords.add("union",Token.KEYWORD3);
    cKeywords.add("unsigned",Token.KEYWORD3);
    cKeywords.add("void",Token.KEYWORD3);
    cKeywords.add("auto",Token.KEYWORD1);
    cKeywords.add("const",Token.KEYWORD1);
    cKeywords.add("extern",Token.KEYWORD1);
    cKeywords.add("register",Token.KEYWORD1);
    cKeywords.add("static",Token.KEYWORD1);
    cKeywords.add("volatile",Token.KEYWORD1);
    cKeywords.add("break",Token.KEYWORD1);
    cKeywords.add("case",Token.KEYWORD1);
    cKeywords.add("continue",Token.KEYWORD1);
    cKeywords.add("default",Token.KEYWORD1);
    cKeywords.add("do",Token.KEYWORD1);
    cKeywords.add("else",Token.KEYWORD1);
    cKeywords.add("for",Token.KEYWORD1);
    cKeywords.add("goto",Token.KEYWORD1);
    cKeywords.add("if",Token.KEYWORD1);
    cKeywords.add("return",Token.KEYWORD1);
    cKeywords.add("sizeof",Token.KEYWORD1);
    cKeywords.add("switch",Token.KEYWORD1);
    cKeywords.add("while",Token.KEYWORD1);
    cKeywords.add("asm",Token.KEYWORD2);
    cKeywords.add("asmlinkage",Token.KEYWORD2);
    cKeywords.add("far",Token.KEYWORD2);
    cKeywords.add("huge",Token.KEYWORD2);
    cKeywords.add("inline",Token.KEYWORD2);
    cKeywords.add("near",Token.KEYWORD2);
    cKeywords.add("pascal",Token.KEYWORD2);
    cKeywords.add("true",Token.LITERAL2);
    cKeywords.add("false",Token.LITERAL2);
    cKeywords.add("NULL",Token.LITERAL2);
  }
  return cKeywords;
}
