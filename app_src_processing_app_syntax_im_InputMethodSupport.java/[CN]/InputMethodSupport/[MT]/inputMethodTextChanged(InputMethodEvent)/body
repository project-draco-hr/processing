{
  if (Base.DEBUG) {
    StringBuilder sb=new StringBuilder();
    sb.append("#Called inputMethodTextChanged");
    sb.append("\t ID: " + event.getID());
    sb.append("\t timestamp: " + new java.util.Date(event.getWhen()));
    sb.append("\t parmString: " + event.paramString());
    Messages.log(sb.toString());
  }
  AttributedCharacterIterator text=event.getText();
  committedCount=event.getCommittedCharacterCount();
  textArea.setCaretVisible(false);
  if (text != null && text.getEndIndex() - (text.getBeginIndex() + committedCount) <= 0) {
    textArea.setCaretVisible(true);
  }
  if (text == null) {
    textArea.setCaretVisible(true);
  }
  if (text != null) {
    int remaining=committedCount;
    char c=text.first();
    while (remaining-- > 0) {
      insertCharacter(c);
      if (callback != null)       callback.onCommitted(c);
      c=text.next();
    }
    CompositionTextPainter compositionPainter=textArea.getPainter().getCompositionTextpainter();
    if (Base.DEBUG) {
      Messages.log(" textArea.getCaretPosition() + committed_count: " + (textArea.getCaretPosition() + committedCount));
    }
    compositionPainter.setComposedTextLayout(getTextLayout(text,committedCount),textArea.getCaretPosition() + committedCount);
    compositionPainter.setCaret(event.getCaret());
  }
 else {
    CompositionTextPainter compositionPainter=textArea.getPainter().getCompositionTextpainter();
    compositionPainter.setComposedTextLayout(null,0);
    compositionPainter.setCaret(null);
  }
  event.consume();
  textArea.repaint();
}
