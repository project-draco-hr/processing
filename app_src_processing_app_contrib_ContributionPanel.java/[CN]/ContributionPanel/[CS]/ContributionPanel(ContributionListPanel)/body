{
  if (foundationIcon == null) {
    foundationIcon=Toolkit.getLibIconX("icons/foundation",32);
  }
  listPanel=contributionListPanel;
  barButtonCardPane=new JPanel();
  enableHyperlinks=false;
  alreadySelected=false;
  conditionalHyperlinkOpener=new HyperlinkListener(){
    public void hyperlinkUpdate(    HyperlinkEvent e){
      if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
        if (enableHyperlinks) {
          if (e.getURL() != null) {
            Platform.openURL(e.getURL().toString());
          }
        }
      }
    }
  }
;
  installActionListener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      install();
    }
  }
;
  undoActionListener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      listPanel.contributionTab.statusPanel.clear();
      if (contrib instanceof LocalContribution) {
        LocalContribution installed=(LocalContribution)contrib;
        installed.setDeletionFlag(false);
        contribListing.replaceContribution(contrib,contrib);
        Iterator<Contribution> contribsListIter=contribListing.allContributions.iterator();
        boolean toBeRestarted=false;
        while (contribsListIter.hasNext()) {
          Contribution contribElement=contribsListIter.next();
          if (contrib.getType().equals(contribElement.getType())) {
            if (contribElement.isDeletionFlagged() || contribElement.isUpdateFlagged()) {
              toBeRestarted=!toBeRestarted;
              break;
            }
          }
        }
        listPanel.contributionTab.restartButton.setVisible(toBeRestarted);
      }
    }
  }
;
  removeActionListener=new ActionListener(){
    public void actionPerformed(    ActionEvent arg){
      remove();
    }
  }
;
  contextMenu=new JPopupMenu();
  openFolder=new JMenuItem("Open Folder");
  openFolder.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (contrib instanceof LocalContribution) {
        File folder=((LocalContribution)contrib).getFolder();
        Platform.openFolder(folder);
      }
    }
  }
);
  setLayout(new BoxLayout(this,BoxLayout.Y_AXIS));
  addPaneComponents();
  setBackground(listPanel.getBackground());
  setOpaque(true);
  setSelected(false);
  setExpandListener(this,new MouseAdapter(){
    public void mousePressed(    MouseEvent e){
      if (contrib.isCompatible(Base.getRevision())) {
        listPanel.setSelectedPanel(ContributionPanel.this);
      }
 else {
        final String msg=contrib.getName() + " is not compatible with this version of Processing";
        listPanel.contributionTab.statusPanel.setErrorMessage(msg);
      }
    }
  }
);
}
