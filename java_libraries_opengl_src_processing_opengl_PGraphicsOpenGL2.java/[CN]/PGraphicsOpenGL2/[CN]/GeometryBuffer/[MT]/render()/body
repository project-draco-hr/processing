{
  if (GEO_BUFFER_ACCUM_ALL && UPDATE_GEO_BUFFER_MATRIX_STACK && UPDATE_GL_MATRIX_STACK) {
    pushMatrix();
    gltemp[0]=camera.m00;
    gltemp[1]=camera.m10;
    gltemp[2]=camera.m20;
    gltemp[3]=camera.m30;
    gltemp[4]=camera.m01;
    gltemp[5]=camera.m11;
    gltemp[6]=camera.m21;
    gltemp[7]=camera.m31;
    gltemp[8]=camera.m02;
    gltemp[9]=camera.m12;
    gltemp[10]=camera.m22;
    gltemp[11]=camera.m32;
    gltemp[12]=camera.m03;
    gltemp[13]=camera.m13;
    gltemp[14]=camera.m23;
    gltemp[15]=camera.m33;
    gl2f.glLoadMatrixf(gltemp,0);
  }
  indicesBuffer.position(0);
  verticesBuffer.position(0);
  colorsBuffer.position(0);
  normalsBuffer.position(0);
  for (int t=0; t < texCount; t++) {
    texcoordsBuffer[t].position(0);
  }
  gl2f.glVertexPointer(3,GL.GL_FLOAT,0,verticesBuffer);
  gl2f.glColorPointer(4,GL.GL_FLOAT,0,colorsBuffer);
  gl2f.glNormalPointer(GL.GL_FLOAT,0,normalsBuffer);
  for (int t=0; t < texCount; t++) {
    gl2f.glClientActiveTexture(GL.GL_TEXTURE0 + t);
    gl2f.glTexCoordPointer(2,GL.GL_FLOAT,0,texcoordsBuffer[t]);
  }
  gl2f.glDrawElements(GL.GL_TRIANGLES,idxCount,GL2.GL_UNSIGNED_INT,indicesBuffer);
  if (GEO_BUFFER_ACCUM_ALL && UPDATE_GEO_BUFFER_MATRIX_STACK && UPDATE_GL_MATRIX_STACK) {
    popMatrix();
  }
}
