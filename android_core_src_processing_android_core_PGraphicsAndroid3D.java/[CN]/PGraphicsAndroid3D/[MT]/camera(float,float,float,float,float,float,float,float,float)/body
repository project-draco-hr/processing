{
  float z0=eyeX - centerX;
  float z1=eyeY - centerY;
  float z2=eyeZ - centerZ;
  float mag=sqrt(z0 * z0 + z1 * z1 + z2 * z2);
  if (mag != 0) {
    z0/=mag;
    z1/=mag;
    z2/=mag;
  }
  float y0=upX;
  float y1=upY;
  float y2=upZ;
  float x0=y1 * z2 - y2 * z1;
  float x1=-y0 * z2 + y2 * z0;
  float x2=y0 * z1 - y1 * z0;
  y0=z1 * x2 - z2 * x1;
  y1=-z0 * x2 + z2 * x0;
  y2=z0 * x1 - z1 * x0;
  mag=sqrt(x0 * x0 + x1 * x1 + x2 * x2);
  if (mag != 0) {
    x0/=mag;
    x1/=mag;
    x2/=mag;
  }
  mag=sqrt(y0 * y0 + y1 * y1 + y2 * y2);
  if (mag != 0) {
    y0/=mag;
    y1/=mag;
    y2/=mag;
  }
  modelviewGL[0]=x0;
  modelviewGL[1]=y0;
  modelviewGL[2]=z0;
  modelviewGL[3]=0.0f;
  modelviewGL[4]=x1;
  modelviewGL[5]=y1;
  modelviewGL[6]=z1;
  modelviewGL[7]=0.0f;
  modelviewGL[8]=x2;
  modelviewGL[9]=y2;
  modelviewGL[10]=z2;
  modelviewGL[11]=0;
  modelviewGL[12]=-cameraX;
  modelviewGL[13]=cameraY;
  modelviewGL[14]=-cameraZ;
  modelviewGL[15]=1.0f;
  gl.glMultMatrixf(modelviewGL,0);
  modelviewUpdated=true;
  calculateModelviewInvNoScaling();
  PApplet.arrayCopy(modelviewGL,cameramat);
  PApplet.arrayCopy(modelviewInvGL,cameramatInv);
}
