{
  this.editor=editor;
  if (dialog == null) {
    dialog=new JFrame(title);
    Base.setIcon(dialog);
    createComponents();
    registerDisposeListeners();
    dialog.pack();
    Dimension screen=Toolkit.getDefaultToolkit().getScreenSize();
    dialog.setLocation((screen.width - dialog.getWidth()) / 2,(screen.height - dialog.getHeight()) / 2);
    contributionListPanel.grabFocus();
  }
  dialog.setVisible(true);
  if (!contribListing.hasDownloadedLatestList()) {
    contribListing.getAdvertisedContributions(new AbstractProgressMonitor(){
      public void startTask(      String name,      int maxValue){
      }
      public void finished(){
        super.finished();
        updateContributionListing();
        updateCategoryChooser();
        if (isError()) {
          statusBar.setErrorMessage("An error occured when downloading " + "the list of available contributions.");
        }
      }
    }
);
  }
  updateContributionListing();
  if (contributionIcons == null) {
    try {
      Image allButtons=ImageIO.read(Base.getLibStream("contributions.gif"));
      int count=allButtons.getHeight(dialog) / ContributionManagerDialog.ICON_HEIGHT;
      contributionIcons=new Image[count];
      contributionIcons[0]=allButtons;
      contributionIcons[1]=allButtons;
      contributionIcons[2]=allButtons;
      contributionIcons[3]=allButtons;
      for (int i=0; i < count; i++) {
        Image image=dialog.createImage(new FilteredImageSource(allButtons.getSource(),new CropImageFilter(0,i * ContributionManagerDialog.ICON_HEIGHT,ContributionManagerDialog.ICON_WIDTH,ContributionManagerDialog.ICON_HEIGHT)));
        contributionIcons[i]=image;
      }
      contributionListPanel.updateColors();
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
  }
}
