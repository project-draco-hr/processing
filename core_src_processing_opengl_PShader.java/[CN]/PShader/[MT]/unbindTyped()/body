{
  if (-1 < offsetLoc)   pgl.disableVertexAttribArray(offsetLoc);
  if (-1 < directionLoc)   pgl.disableVertexAttribArray(directionLoc);
  if (-1 < textureLoc && texture != null) {
    pgl.activeTexture(PGL.TEXTURE0 + texUnit);
    texture.unbind();
    pgl.activeTexture(PGL.TEXTURE0);
    texture=null;
  }
  if (-1 < ambientLoc)   pgl.disableVertexAttribArray(ambientLoc);
  if (-1 < specularLoc)   pgl.disableVertexAttribArray(specularLoc);
  if (-1 < emissiveLoc)   pgl.disableVertexAttribArray(emissiveLoc);
  if (-1 < shininessLoc)   pgl.disableVertexAttribArray(shininessLoc);
  if (-1 < vertexLoc)   pgl.disableVertexAttribArray(vertexLoc);
  if (-1 < colorLoc)   pgl.disableVertexAttribArray(colorLoc);
  if (-1 < texCoordLoc)   pgl.disableVertexAttribArray(texCoordLoc);
  if (-1 < normalLoc)   pgl.disableVertexAttribArray(normalLoc);
  if (-1 < ppixelsLoc) {
    pgl.enableFBOLayer();
    pgl.activeTexture(PGL.TEXTURE0 + ppixelsUnit);
    currentPG.unbindFrontTexture();
    pgl.activeTexture(PGL.TEXTURE0);
  }
  pgl.bindBuffer(PGL.ARRAY_BUFFER,0);
}
