{
  PGraphicsOpenGL g=currentPG.get();
  if (g == null)   return;
  if (-1 < transformMatLoc) {
    g.updateGLProjmodelview();
    setUniformMatrix(transformMatLoc,g.glProjmodelview);
  }
  if (-1 < modelviewMatLoc) {
    g.updateGLModelview();
    setUniformMatrix(modelviewMatLoc,g.glModelview);
  }
  if (-1 < projectionMatLoc) {
    g.updateGLProjection();
    setUniformMatrix(projectionMatLoc,g.glProjection);
  }
  if (-1 < viewportLoc) {
    float x=g.viewport.get(0);
    float y=g.viewport.get(1);
    float w=g.viewport.get(2);
    float h=g.viewport.get(3);
    setUniformValue(viewportLoc,x,y,w,h);
  }
  if (-1 < ppixelsLoc) {
    ppixelsUnit=getLastTexUnit() + 1;
    setUniformValue(ppixelsLoc,ppixelsUnit);
    pgl.activeTexture(PGL.TEXTURE0 + ppixelsUnit);
    g.bindFrontTexture();
  }
 else {
    ppixelsUnit=-1;
  }
}
