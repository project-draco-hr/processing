{
  final JavaEditor editor=(JavaEditor)listener;
  if (isSketchModified(sketch)) {
    editor.deactivateRun();
    Messages.showMessage(Language.text("menu.file.save"),Language.text("tweak_mode.save_before_tweak"));
    return null;
  }
  JavaBuild build=new JavaBuild(sketch);
  String appletClassName=build.build(true);
  if (appletClassName == null) {
    return null;
  }
  editor.initBaseCode();
  boolean requiresTweak=SketchParser.containsTweakComment(editor.baseCode);
  final SketchParser parser=new SketchParser(editor.baseCode,requiresTweak);
  final boolean launchInteractive=editor.automateSketch(sketch,parser);
  build=new JavaBuild(sketch);
  appletClassName=build.build(false);
  if (appletClassName != null) {
    final Runner runtime=new Runner(build,listener);
    new Thread(new Runnable(){
      public void run(){
        runtime.launch(null);
        if (launchInteractive) {
          editor.initEditorCode(parser.allHandles,false);
          editor.stopTweakMode(parser.allHandles);
        }
      }
    }
).start();
    if (launchInteractive) {
      editor.initEditorCode(parser.allHandles,false);
      editor.updateInterface(parser.allHandles,parser.colorBoxes);
      editor.startTweakMode();
    }
    return runtime;
  }
  return null;
}
