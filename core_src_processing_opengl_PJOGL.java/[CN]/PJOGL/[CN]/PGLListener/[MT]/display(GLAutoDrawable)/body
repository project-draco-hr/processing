{
  getGL(glDrawable);
  if (USE_JOGL_FBOLAYER && capabilities.isFBO()) {
    GLFBODrawable fboDrawable=null;
    if (WINDOW_TOOLKIT == AWT) {
      GLCanvas glCanvas=(GLCanvas)glDrawable;
      fboDrawable=(GLFBODrawable)glCanvas.getDelegatedDrawable();
    }
 else {
      GLWindow glWindow=(GLWindow)glDrawable;
      fboDrawable=(GLFBODrawable)glWindow.getDelegatedDrawable();
    }
    if (fboDrawable != null) {
      backFBO=fboDrawable.getFBObject(GL.GL_BACK);
      if (1 < numSamples) {
        if (needSepFrontTex) {
          if (frontFBO == null) {
            frontFBO=new FBObject();
            frontFBO.reset(gl,pg.width,pg.height);
            frontFBO.attachTexture2D(gl,0,true);
            sinkFBO=backFBO.getSamplingSinkFBO();
            changedFrontTex=changedBackTex=true;
          }
 else {
            FBObject temp=sinkFBO;
            sinkFBO=frontFBO;
            frontFBO=temp;
            backFBO.setSamplingSink(sinkFBO);
            changedFrontTex=changedBackTex=false;
          }
          backTexAttach=(FBObject.TextureAttachment)sinkFBO.getColorbuffer(0);
          frontTexAttach=(FBObject.TextureAttachment)frontFBO.getColorbuffer(0);
        }
 else {
          sinkFBO=backFBO.getSamplingSinkFBO();
          backTexAttach=(FBObject.TextureAttachment)sinkFBO.getColorbuffer(0);
          frontTexAttach=backTexAttach;
        }
      }
 else {
        frontFBO=fboDrawable.getFBObject(GL.GL_FRONT);
        backTexAttach=fboDrawable.getTextureBuffer(GL.GL_BACK);
        frontTexAttach=fboDrawable.getTextureBuffer(GL.GL_FRONT);
      }
    }
  }
  pg.parent.handleDraw();
  drawLatch.countDown();
}
