{
  String[] contents=PApplet.match(scrubComments(code),SIZE_CONTENTS_REGEX);
  if (contents != null) {
    StringList args=breakCommas(contents[1]);
    String width=args.get(0);
    String height=args.get(1);
    String renderer=(args.size() >= 3) ? args.get(2) : null;
    String path=(args.size() >= 4) ? args.get(3) : null;
    boolean badSize=false;
    if (width.equals("screenWidth") || width.equals("screenHeight") || height.equals("screenHeight")|| height.equals("screenWidth")) {
      final String message="The screenWidth and screenHeight variables\n" + "are named displayWidth and displayHeight\n" + "in this release of Processing.";
      Base.showWarning("Time for a quick update",message,null);
      return null;
    }
    if (!width.equals("displayWidth") && !width.equals("displayHeight") && PApplet.parseInt(width,-1) == -1) {
      badSize=true;
    }
    if (!height.equals("displayWidth") && !height.equals("displayHeight") && PApplet.parseInt(height,-1) == -1) {
      badSize=true;
    }
    if (badSize && fussy) {
      final String message="The size of this applet could not automatically\n" + "be determined from your code. Use only numeric\n" + "values (not variables) for the size() command.\n"+ "See the size() reference for an explanation.";
      Base.showWarning("Could not find sketch size",message,null);
      return null;
    }
    if (renderer != null) {
      renderer=renderer.trim();
      if (renderer.length() == 0) {
        renderer=null;
      }
    }
    if (path != null) {
      path=path.trim();
      if (path.length() == 0) {
        path=null;
      }
    }
    return new String[]{contents[0],width,height,renderer,path};
  }
  return new String[]{null,null,null,null,null};
}
