{
  String searchArea=scrubComments(code);
  String[] setupMatch=PApplet.match(searchArea,VOID_SETUP_REGEX);
  if (setupMatch != null) {
    String found=setupMatch[0];
    int start=searchArea.indexOf(found) + found.length();
    int openBrace=searchArea.indexOf("{",start);
    char[] c=searchArea.toCharArray();
    int depth=0;
    int closeBrace=-1;
    StringBuilder sb=new StringBuilder();
    for (int i=openBrace; i < c.length; i++) {
      if (c[i] == '{') {
        depth++;
      }
 else       if (c[i] == '}') {
        depth--;
        if (depth == 0) {
          closeBrace=++i;
          break;
        }
      }
 else {
        sb.append(c[i]);
      }
    }
    if (closeBrace == -1) {
      throw new SketchException("Found a { that's missing a matching }",false);
    }
    searchArea=sb.toString();
  }
  String[] contents=PApplet.match(searchArea,SIZE_CONTENTS_REGEX);
  if (contents != null) {
    StringList args=breakCommas(contents[1]);
    SurfaceInfo info=new SurfaceInfo();
    info.statement=contents[0];
    info.width=args.get(0).trim();
    info.height=args.get(1).trim();
    info.renderer=(args.size() >= 3) ? args.get(2).trim() : null;
    info.path=(args.size() >= 4) ? args.get(3).trim() : null;
    if (info.hasOldSyntax()) {
      throw new SketchException("Please update your code to continue.",false);
    }
    if (info.hasBadSize() && fussy) {
      final String message="The size of this sketch could not be determined from your code.\n" + "Use only numbers (not variables) for the size() command.\n" + "Read the size() reference for more details.";
      Base.showWarning("Could not find sketch size",message,null);
      throw new SketchException("Please fix the size() line to continue.",false);
    }
    info.checkEmpty();
    return info;
  }
  contents=PApplet.match(searchArea,FULL_SCREEN_CONTENTS_REGEX);
  if (contents != null) {
    SurfaceInfo info=new SurfaceInfo();
    info.statement=contents[0];
    StringList args=breakCommas(contents[1]);
    info.renderer=args.get(0).trim();
    info.display=args.size() > 1 ? args.get(1).trim() : null;
    info.width="displayWidth";
    info.height="displayHeight";
    info.checkEmpty();
    return info;
  }
  return new SurfaceInfo();
}
