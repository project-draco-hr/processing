{
  String[] matches=PApplet.match(scrubComments(code),SIZE_REGEX);
  if (matches != null) {
    boolean badSize=false;
    if (matches[1].equals("screenWidth") || matches[1].equals("screenHeight") || matches[2].equals("screenWidth")|| matches[2].equals("screenHeight")) {
      final String message="The screenWidth and screenHeight variables\n" + "are named displayWidth and displayHeight\n" + "in this release of Processing.";
      Base.showWarning("Time for a quick update",message,null);
      return null;
    }
    if (!matches[1].equals("displayWidth") && !matches[1].equals("displayHeight") && PApplet.parseInt(matches[1],-1) == -1) {
      badSize=true;
    }
    if (!matches[2].equals("displayWidth") && !matches[2].equals("displayHeight") && PApplet.parseInt(matches[2],-1) == -1) {
      badSize=true;
    }
    if (badSize && fussy) {
      final String message="The size of this applet could not automatically\n" + "be determined from your code. Use only numeric\n" + "values (not variables) for the size() command.\n"+ "See the size() reference for an explanation.";
      Base.showWarning("Could not find sketch size",message,null);
      return null;
    }
    matches[3]=matches[3].trim();
    if (matches[3].length() == 0) {
      matches[3]=null;
    }
    return matches;
  }
  return new String[]{null,null,null,null};
}
