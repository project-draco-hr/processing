{
  Vector params=new Vector();
  params.add("java");
  String options=Preferences.get("run.options");
  if (options.length() > 0) {
    String pieces[]=PApplet.split(options,' ');
    for (int i=0; i < pieces.length; i++) {
      String p=pieces[i].trim();
      if (p.length() > 0) {
        params.add(p);
      }
    }
  }
  if (Preferences.getBoolean("run.options.memory")) {
    params.add("-Xms" + Preferences.get("run.options.memory.initial") + "m");
    params.add("-Xmx" + Preferences.get("run.options.memory.maximum") + "m");
  }
  params.add("-Djava.library.path=" + sketch.libraryPath + File.pathSeparator+ System.getProperty("java.library.path"));
  params.add("-cp");
  params.add(sketch.classPath + File.pathSeparator + Base.librariesClassPath);
  params.add("processing.core.PApplet");
  params.add(PApplet.ARGS_EXTERNAL);
  params.add(PApplet.ARGS_PRESENT);
  params.add(PApplet.ARGS_STOP_COLOR + "=" + Preferences.get("run.present.stop.color"));
  params.add(PApplet.ARGS_BGCOLOR + "=" + Preferences.get("run.present.bgcolor"));
  params.add(PApplet.ARGS_DISPLAY + "=" + Preferences.get("run.display"));
  params.add(PApplet.ARGS_SKETCH_FOLDER + "=" + sketch.folder.getAbsolutePath());
  params.add(sketch.mainClassName);
  String command[]=new String[params.size()];
  params.copyInto(command);
  process=Runtime.getRuntime().exec(command);
  processInput=new SystemOutSiphon(process.getInputStream());
  processError=new MessageSiphon(process.getErrorStream(),this);
  processOutput=process.getOutputStream();
}
