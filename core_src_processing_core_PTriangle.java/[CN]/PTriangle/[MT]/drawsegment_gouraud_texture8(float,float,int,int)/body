{
  ytop*=SCREEN_WIDTH;
  ybottom*=SCREEN_WIDTH;
  int p=m_index;
  float iuf=iuadd;
  float ivf=ivadd;
  float irf=iradd;
  float igf=igadd;
  float ibf=ibadd;
  while (ytop < ybottom) {
    int xstart=(int)(xleft + PIXEL_CENTER);
    if (xstart < 0)     xstart=0;
    int xend=(int)(xrght + PIXEL_CENTER);
    if (xend > SCREEN_WIDTH)     xend=SCREEN_WIDTH;
    float xdiff=(xstart + PIXEL_CENTER) - xleft;
    int iu=(int)(iuf * xdiff + uleft);
    int iv=(int)(ivf * xdiff + vleft);
    int ir=(int)(irf * xdiff + rleft);
    int ig=(int)(igf * xdiff + gleft);
    int ib=(int)(ibf * xdiff + bleft);
    float iz=izadd * xdiff + zleft;
    xstart+=ytop;
    xend+=ytop;
    for (; xstart < xend; xstart++) {
      try {
        if (noDepthTest || (iz <= m_zbuffer[xstart])) {
          int al0;
          if (m_bilinear) {
            int ofs=(iv >> 16) * TEX_WIDTH + (iu >> 16);
            int iui=iu & 0xFFFF;
            al0=m_texture[ofs] & 0xFF;
            int al1=m_texture[ofs + 1] & 0xFF;
            ofs+=TEX_WIDTH;
            int al2=m_texture[ofs] & 0xFF;
            int al3=m_texture[ofs + 1] & 0xFF;
            al0=al0 + (((al1 - al0) * iui) >> 16);
            al2=al2 + (((al3 - al2) * iui) >> 16);
            al0=al0 + (((al2 - al0) * (iv & 0xFFFF)) >> 16);
          }
 else {
            al0=m_texture[(iv >> 16) * TEX_WIDTH + (iu >> 16)] & 0xFF;
          }
          int red=ir & 0xFF0000;
          int grn=(ig >> 8) & 0xFF00;
          int blu=(ib >> 16);
          int bb=m_pixels[xstart];
          int br=(bb & 0xFF0000);
          int bg=(bb & 0xFF00);
          bb=(bb & 0xFF);
          m_pixels[xstart]=((br + (((red - br) * al0) >> 8)) & 0xFF0000) | ((bg + (((grn - bg) * al0) >> 8)) & 0xFF00) | ((bb + (((blu - bb) * al0) >> 8)) & 0xFF);
          m_stencil[xstart]=p;
        }
      }
 catch (      Exception e) {
      }
      iu+=iuadd;
      iv+=ivadd;
      ir+=iradd;
      ig+=igadd;
      ib+=ibadd;
      iz+=izadd;
    }
    ytop+=SCREEN_WIDTH;
    xleft+=leftadd;
    xrght+=rghtadd;
    uleft+=uleftadd;
    vleft+=vleftadd;
    rleft+=rleftadd;
    gleft+=gleftadd;
    bleft+=bleftadd;
    zleft+=zleftadd;
  }
}
