{
  vm.setDebugTraceMode(debugTraceMode);
  final EventThread eventThread=new EventThread(this,vm,excludes,writer);
  eventThread.setEventRequests(watchFields);
  eventThread.start();
  vm.resume();
  System.err.println("done with resume");
  final Thread logcatter=new Thread(new Runnable(){
    public void run(){
      try {
        new SketchLogCatter().start();
        System.err.println("logcatter exited normally");
      }
 catch (      final InterruptedException e) {
        System.err.println("logcat interrupted");
      }
catch (      final Exception e) {
        throw new RuntimeException(e);
      }
    }
  }
,"logcatter");
  logcatter.start();
  try {
    if (eventThread != null) {
      eventThread.join();
    }
    System.err.println("interrupting logcatter");
    logcatter.interrupt();
    if (editor != null) {
      editor.internalRunnerClosed();
    }
  }
 catch (  final InterruptedException exc) {
  }
  if (writer != null) {
    writer.close();
  }
}
