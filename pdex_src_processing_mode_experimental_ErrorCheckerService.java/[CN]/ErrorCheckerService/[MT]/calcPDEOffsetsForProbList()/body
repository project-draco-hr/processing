{
  PlainDocument javaSource=new PlainDocument();
  PlainDocument pdeTabs[]=new PlainDocument[editor.getSketch().getCodeCount()];
  try {
    javaSource.insertString(0,sourceCode,null);
    for (int i=0; i < pdeTabs.length; i++) {
      SketchCode sc=editor.getSketch().getCode(i);
      pdeTabs[i]=new PlainDocument();
      if (editor.getSketch().getCurrentCode().equals(sc)) {
        pdeTabs[i].insertString(0,sc.getDocument().getText(0,sc.getDocument().getLength()),null);
      }
 else {
        pdeTabs[i].insertString(0,sc.getProgram(),null);
      }
    }
    int pkgNameOffset=("package " + className + ";\n").length();
    for (    Problem p : problemsList) {
      int javaLineNumber=p.getIProblem().getSourceLineNumber();
      Element lineElement=javaSource.getDefaultRootElement().getElement(javaLineNumber - 2);
      if (lineElement == null) {
        log("calcPDEOffsetsForProbList(): Couldn't fetch javalinenum " + javaLineNumber);
        continue;
      }
      String javaLine=javaSource.getText(lineElement.getStartOffset(),lineElement.getEndOffset() - lineElement.getStartOffset());
      int prbStart=p.getIProblem().getSourceStart() - pkgNameOffset, prbEnd=p.getIProblem().getSourceEnd() - pkgNameOffset;
      Element pdeLineElement=pdeTabs[p.getTabIndex()].getDefaultRootElement().getElement(p.getLineNumber() - 1);
      if (pdeLineElement == null) {
        log("calcPDEOffsetsForProbList(): Couldn't fetch pdelinenum " + javaLineNumber);
        continue;
      }
      String pdeLine=pdeTabs[p.getTabIndex()].getText(pdeLineElement.getStartOffset(),pdeLineElement.getEndOffset() - pdeLineElement.getStartOffset());
      log("calcPDEOffsetsForProbList(): P " + pdeLine);
      log("calcPDEOffsetsForProbList(): J " + javaLine);
      OffsetMatcher ofm=new OffsetMatcher(pdeLine,javaLine);
      int pdeOffset=ofm.getPdeOffForJavaOff(prbStart - lineElement.getStartOffset(),(prbEnd - p.getIProblem().getSourceStart()));
      p.setPDEOffsets(pdeOffset,prbEnd - prbStart);
    }
  }
 catch (  BadLocationException e) {
    e.printStackTrace();
  }
}
