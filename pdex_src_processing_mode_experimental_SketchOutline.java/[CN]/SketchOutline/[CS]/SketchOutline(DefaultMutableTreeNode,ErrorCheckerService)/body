{
  errorCheckerService=ecs;
  editor=ecs.getEditor();
  frmOutlineView=new JFrame();
  frmOutlineView.setAlwaysOnTop(true);
  frmOutlineView.setUndecorated(true);
  Point tp=errorCheckerService.getEditor().ta.getLocationOnScreen();
  int minWidth=200;
  frmOutlineView.setLayout(new BoxLayout(frmOutlineView.getContentPane(),BoxLayout.Y_AXIS));
  JPanel panelTop=new JPanel(), panelBottom=new JPanel();
  panelTop.setLayout(new BoxLayout(panelTop,BoxLayout.Y_AXIS));
  panelBottom.setLayout(new BoxLayout(panelBottom,BoxLayout.Y_AXIS));
  searchField=new JTextField();
  searchField.setMinimumSize(new Dimension(minWidth,25));
  panelTop.add(searchField);
  jsp=new JScrollPane();
  soNode=new DefaultMutableTreeNode();
  generateSketchOutlineTree(soNode,codeTree);
  soNode=(DefaultMutableTreeNode)soNode.getChildAt(0);
  soTree=new JTree(soNode);
  soTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
  soTree.setRootVisible(false);
  for (int i=0; i < soTree.getRowCount(); i++) {
    soTree.expandRow(i);
  }
  soTree.setSelectionRow(0);
  jsp.setViewportView(soTree);
  jsp.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
  jsp.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
  jsp.setMinimumSize(new Dimension(minWidth,100));
  panelBottom.add(jsp);
  frmOutlineView.add(panelTop);
  frmOutlineView.add(panelBottom);
  frmOutlineView.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
  frmOutlineView.setBounds(tp.x + errorCheckerService.getEditor().ta.getWidth() - minWidth,tp.y,minWidth,Math.min(editor.ta.getHeight(),150));
  frmOutlineView.setMinimumSize(new Dimension(minWidth,Math.min(errorCheckerService.getEditor().ta.getHeight(),150)));
  frmOutlineView.pack();
  frmOutlineView.setLocation(tp.x + errorCheckerService.getEditor().ta.getWidth() - frmOutlineView.getWidth(),frmOutlineView.getY() + (editor.ta.getHeight() - frmOutlineView.getHeight()) / 2);
  addListeners();
}
