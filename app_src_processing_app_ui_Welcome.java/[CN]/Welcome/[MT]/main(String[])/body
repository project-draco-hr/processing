{
  Base.initPlatform();
  final File indexFile=new File("../build/shared/lib/welcome/index.html");
  EventQueue.invokeLater(new Runnable(){
    public void run(){
      JFrame frame=new JFrame();
      frame.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
      String[] lines=PApplet.loadStrings(indexFile);
      String content=PApplet.join(lines,"\n");
      int high=getContentHeight(400,content);
      JEditorPane textPane=new JEditorPane("text/html",content);
      textPane.setEditable(false);
      textPane.setPreferredSize(new Dimension(400,high));
      frame.getContentPane().add(textPane);
      Toolkit.registerWindowCloseKeys(frame.getRootPane(),new ActionListener(){
        @Override public void actionPerformed(        ActionEvent e){
          System.exit(0);
        }
      }
);
      frame.pack();
      frame.setLocationRelativeTo(null);
      frame.setVisible(true);
      HTMLEditorKit kit=(HTMLEditorKit)textPane.getEditorKit();
      kit.setAutoFormSubmission(false);
      Object title=textPane.getDocument().getProperty("title");
      if (title instanceof String) {
        frame.setTitle((String)title);
      }
      textPane.addHyperlinkListener(new HyperlinkListener(){
        @Override public void hyperlinkUpdate(        HyperlinkEvent e){
          if (e instanceof FormSubmitEvent) {
            String result=((FormSubmitEvent)e).getData();
            StringDict dict=new StringDict();
            String[] pairs=result.split("&");
            for (            String pair : pairs) {
              String[] pieces=pair.split("=");
              String attr=PApplet.urlDecode(pieces[0]);
              String valu=PApplet.urlDecode(pieces[1]);
              dict.set(attr,valu);
            }
            dict.print();
          }
 else           if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
            Base.openURL(e.getURL().toExternalForm());
          }
        }
      }
);
    }
  }
);
}
