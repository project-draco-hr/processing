{
  Contribution contribution=(Contribution)value;
  JLabel label=new JLabel();
  if (column == 0) {
    Icon icon=null;
    label.setBorder(BorderFactory.createEmptyBorder(2,17,0,0));
    if (contribution.isInstalled()) {
      icon=Toolkit.getLibIcon("manager/up-to-date.png");
      if (contribListing.hasUpdates(contribution)) {
        icon=Toolkit.getLibIcon("manager/update-available.png");
      }
      if (!contribution.isCompatible(Base.getRevision())) {
        icon=Toolkit.getLibIcon("manager/incompatible.png");
      }
    }
    label.setIcon(icon);
    if (isSelected) {
      label.setBackground(Color.BLUE);
    }
    label.setOpaque(true);
  }
 else   if (column == 1) {
    JTextPane name=new JTextPane();
    name.setContentType("text/html");
    name.setEditable(false);
    if (!contribution.isCompatible(Base.getRevision())) {
      name.setForeground(Color.LIGHT_GRAY);
    }
    name.setText("<html><body><b>" + contribution.getName() + "</b> - "+ contribution.getSentence()+ "</body></html>");
    int textHeight=table.getFontMetrics(table.getFont().deriveFont(Font.BOLD)).getHeight() + 4;
    GroupLayout layout=new GroupLayout(label);
    layout.setAutoCreateGaps(true);
    layout.setHorizontalGroup(layout.createSequentialGroup().addComponent(name));
    layout.setVerticalGroup(layout.createSequentialGroup().addPreferredGap(LayoutStyle.ComponentPlacement.RELATED,GroupLayout.PREFERRED_SIZE,Short.MAX_VALUE).addComponent(name,0,textHeight,textHeight).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED,GroupLayout.PREFERRED_SIZE,Short.MAX_VALUE));
    if (table.isRowSelected(row)) {
      label.setBackground(Color.BLUE);
      name.setOpaque(false);
    }
    label.setOpaque(true);
    label.setLayout(layout);
  }
 else {
    label=new JLabel(contribution.isSpecial() ? Toolkit.getLibIcon("icons/pde-16.png") : null);
    StringBuilder name=new StringBuilder("");
    String authorList=contribution.getAuthorList();
    if (authorList != null) {
      for (int i=0; i < authorList.length(); i++) {
        if (authorList.charAt(i) == '[' || authorList.charAt(i) == ']') {
          continue;
        }
        if (authorList.charAt(i) == '(') {
          i++;
          while (authorList.charAt(i) != ')') {
            i++;
          }
        }
 else {
          name.append(authorList.charAt(i));
        }
      }
    }
    label.setText(name.toString());
    label.setHorizontalAlignment(SwingConstants.LEFT);
    if (!contribution.isCompatible(Base.getRevision())) {
      label.setForeground(Color.LIGHT_GRAY);
    }
    if (table.isRowSelected(row)) {
      label.setBackground(Color.BLUE);
    }
    label.setOpaque(true);
  }
  return label;
}
