{
  Contribution contribution=(Contribution)value;
  JLabel label=new JLabel();
  if (column == 0) {
    Icon icon=null;
    label.setBorder(BorderFactory.createEmptyBorder(2,17,0,0));
    label.setFont(Toolkit.getSansFont(14,Font.PLAIN));
    if (contribution.isInstalled()) {
      icon=Toolkit.getLibIcon("manager/up-to-date.png");
      if (contribListing.hasUpdates(contribution)) {
        icon=Toolkit.getLibIcon("manager/update-available.png");
      }
      if (!contribution.isCompatible(Base.getRevision())) {
        icon=Toolkit.getLibIcon("manager/incompatible.png");
      }
    }
    label.setIcon(icon);
    if (isSelected) {
      label.setBackground(new Color(0xe0fffd));
    }
    label.setOpaque(true);
  }
 else   if (column == 1) {
    FontMetrics fontMetrics=table.getFontMetrics(table.getFont());
    int colSize=table.getColumnModel().getColumn(1).getWidth();
    String sentence=contribution.getSentence();
    int currentWidth=table.getFontMetrics(table.getFont().deriveFont(Font.BOLD)).stringWidth(contribution.getName() + " | ");
    int ellipsesWidth=fontMetrics.stringWidth("...");
    String name="<html><body><b>" + contribution.getName();
    if (sentence == null) {
      label.setText(name + "</b></body></html>");
    }
 else {
      sentence=" | </b>" + sentence;
      currentWidth+=ellipsesWidth;
      int i=0;
      for (i=0; i < sentence.length(); i++) {
        currentWidth+=fontMetrics.charWidth(sentence.charAt(i));
        if (currentWidth >= colSize) {
          break;
        }
      }
      if (i != sentence.length()) {
        label.setText(name + sentence.substring(0,i) + "...</body></html>");
      }
 else {
        label.setText(name + sentence + "</body></html>");
      }
    }
    if (!contribution.isCompatible(Base.getRevision())) {
      label.setForeground(Color.LIGHT_GRAY);
    }
    if (table.isRowSelected(row)) {
      label.setBackground(new Color(0xe0fffd));
    }
    label.setFont(ContributionManagerDialog.myFont);
    label.setOpaque(true);
  }
 else {
    if (contribution.isSpecial()) {
      label=new JLabel(Toolkit.getLibIcon("icons/foundation-16.png"));
    }
 else {
      label=new JLabel();
    }
    String authorList=contribution.getAuthorList();
    String name=getAuthorNameWithoutMarkup(authorList);
    label.setText(name.toString());
    label.setHorizontalAlignment(SwingConstants.LEFT);
    if (!contribution.isCompatible(Base.getRevision())) {
      label.setForeground(Color.LIGHT_GRAY);
    }
 else {
      label.setForeground(Color.BLACK);
    }
    if (table.isRowSelected(row)) {
      label.setBackground(new Color(0xe0fffd));
    }
    label.setFont(Toolkit.getSansFont(14,Font.BOLD));
    label.setOpaque(true);
  }
  return label;
}
