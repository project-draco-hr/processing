{
  inputHandler=new DefaultInputHandler();
  String mod=Base.isMacOS() ? "A" : "C";
  inputHandler.addKeyBinding("BACK_SPACE",InputHandler.BACKSPACE);
  if (Preferences.getBoolean("editor.keys.shift_backspace_is_delete")) {
    inputHandler.addKeyBinding("S+BACK_SPACE",InputHandler.DELETE);
  }
 else {
    inputHandler.addKeyBinding("S+BACK_SPACE",InputHandler.BACKSPACE);
  }
  inputHandler.addKeyBinding("DELETE",InputHandler.DELETE);
  inputHandler.addKeyBinding("S+DELETE",InputHandler.DELETE);
  inputHandler.addKeyBinding(mod + "+BACK_SPACE",InputHandler.BACKSPACE_WORD);
  inputHandler.addKeyBinding(mod + "S+BACK_SPACE",InputHandler.BACKSPACE_WORD);
  inputHandler.addKeyBinding(mod + "+DELETE",InputHandler.DELETE_WORD);
  inputHandler.addKeyBinding(mod + "S+DELETE",InputHandler.DELETE_WORD);
  inputHandler.addKeyBinding("INSERT",InputHandler.OVERWRITE);
  if (Preferences.getBoolean("editor.keys.alternative_cut_copy_paste")) {
    inputHandler.addKeyBinding("C+INSERT",InputHandler.CLIPBOARD_COPY);
    inputHandler.addKeyBinding("S+INSERT",InputHandler.CLIPBOARD_PASTE);
    inputHandler.addKeyBinding("S+DELETE",InputHandler.CLIPBOARD_CUT);
  }
  if (Preferences.getBoolean("editor.keys.home_and_end_travel_far")) {
    inputHandler.addKeyBinding("HOME",InputHandler.DOCUMENT_HOME);
    inputHandler.addKeyBinding("END",InputHandler.DOCUMENT_END);
    inputHandler.addKeyBinding("S+HOME",InputHandler.SELECT_DOC_HOME);
    inputHandler.addKeyBinding("S+END",InputHandler.SELECT_DOC_END);
  }
 else {
    inputHandler.addKeyBinding("HOME",InputHandler.HOME);
    inputHandler.addKeyBinding("END",InputHandler.END);
    inputHandler.addKeyBinding("S+HOME",InputHandler.SELECT_HOME);
    inputHandler.addKeyBinding("S+END",InputHandler.SELECT_END);
    inputHandler.addKeyBinding("C+HOME",InputHandler.DOCUMENT_HOME);
    inputHandler.addKeyBinding("C+END",InputHandler.DOCUMENT_END);
    inputHandler.addKeyBinding("CS+HOME",InputHandler.SELECT_DOC_HOME);
    inputHandler.addKeyBinding("CS+END",InputHandler.SELECT_DOC_END);
  }
  if (Base.isMacOS()) {
    inputHandler.addKeyBinding("C+A",InputHandler.HOME);
    inputHandler.addKeyBinding("CS+A",InputHandler.SELECT_HOME);
    inputHandler.addKeyBinding("C+E",InputHandler.END);
    inputHandler.addKeyBinding("CS+E",InputHandler.SELECT_END);
    inputHandler.addKeyBinding("C+D",InputHandler.DELETE);
    inputHandler.addKeyBinding("C+B",InputHandler.PREV_CHAR);
    inputHandler.addKeyBinding("CS+B",InputHandler.SELECT_PREV_CHAR);
    inputHandler.addKeyBinding("C+F",InputHandler.NEXT_CHAR);
    inputHandler.addKeyBinding("CS+F",InputHandler.SELECT_NEXT_CHAR);
    inputHandler.addKeyBinding("C+H",InputHandler.BACKSPACE);
    inputHandler.addKeyBinding("C+N",InputHandler.NEXT_LINE);
    inputHandler.addKeyBinding("CS+N",InputHandler.SELECT_NEXT_LINE);
    inputHandler.addKeyBinding("C+P",InputHandler.PREV_LINE);
    inputHandler.addKeyBinding("CS+P",InputHandler.SELECT_PREV_LINE);
  }
  if (Base.isMacOS()) {
    inputHandler.addKeyBinding("M+LEFT",InputHandler.HOME);
    inputHandler.addKeyBinding("M+RIGHT",InputHandler.END);
    inputHandler.addKeyBinding("MS+LEFT",InputHandler.SELECT_HOME);
    inputHandler.addKeyBinding("MS+RIGHT",InputHandler.SELECT_END);
  }
 else {
    inputHandler.addKeyBinding("C+LEFT",InputHandler.HOME);
    inputHandler.addKeyBinding("C+RIGHT",InputHandler.END);
    inputHandler.addKeyBinding("CS+HOME",InputHandler.SELECT_HOME);
    inputHandler.addKeyBinding("CS+END",InputHandler.SELECT_END);
  }
  inputHandler.addKeyBinding("PAGE_UP",InputHandler.PREV_PAGE);
  inputHandler.addKeyBinding("PAGE_DOWN",InputHandler.NEXT_PAGE);
  inputHandler.addKeyBinding("S+PAGE_UP",InputHandler.SELECT_PREV_PAGE);
  inputHandler.addKeyBinding("S+PAGE_DOWN",InputHandler.SELECT_NEXT_PAGE);
  inputHandler.addKeyBinding("LEFT",InputHandler.PREV_CHAR);
  inputHandler.addKeyBinding("S+LEFT",InputHandler.SELECT_PREV_CHAR);
  inputHandler.addKeyBinding(mod + "+LEFT",InputHandler.PREV_WORD);
  inputHandler.addKeyBinding(mod + "S+LEFT",InputHandler.SELECT_PREV_WORD);
  inputHandler.addKeyBinding("RIGHT",InputHandler.NEXT_CHAR);
  inputHandler.addKeyBinding("S+RIGHT",InputHandler.SELECT_NEXT_CHAR);
  inputHandler.addKeyBinding(mod + "+RIGHT",InputHandler.NEXT_WORD);
  inputHandler.addKeyBinding(mod + "S+RIGHT",InputHandler.SELECT_NEXT_WORD);
  inputHandler.addKeyBinding("UP",InputHandler.PREV_LINE);
  inputHandler.addKeyBinding(mod + "+UP",InputHandler.PREV_LINE);
  inputHandler.addKeyBinding("S+UP",InputHandler.SELECT_PREV_LINE);
  inputHandler.addKeyBinding("DOWN",InputHandler.NEXT_LINE);
  inputHandler.addKeyBinding(mod + "+DOWN",InputHandler.NEXT_LINE);
  inputHandler.addKeyBinding("S+DOWN",InputHandler.SELECT_NEXT_LINE);
  inputHandler.addKeyBinding("MS+UP",InputHandler.SELECT_DOC_HOME);
  inputHandler.addKeyBinding("CS+UP",InputHandler.SELECT_DOC_HOME);
  inputHandler.addKeyBinding("MS+DOWN",InputHandler.SELECT_DOC_END);
  inputHandler.addKeyBinding("CS+DOWN",InputHandler.SELECT_DOC_END);
  inputHandler.addKeyBinding(mod + "+ENTER",InputHandler.REPEAT);
  document=new SyntaxDocument();
  electricScroll=0;
  caretVisible=true;
  caretBlinks=Preferences.getBoolean("editor.caret.blink");
  blockCaret=Preferences.getBoolean("editor.caret.block");
  cols=80;
  rows=5;
  fgcolor=mode.getColor("editor.fgcolor");
  bgcolor=mode.getColor("editor.bgcolor");
  styles=new SyntaxStyle[Token.ID_COUNT];
  styles[Token.COMMENT1]=mode.getStyle("comment1");
  styles[Token.COMMENT2]=mode.getStyle("comment2");
  styles[Token.KEYWORD1]=mode.getStyle("keyword1");
  styles[Token.KEYWORD2]=mode.getStyle("keyword2");
  styles[Token.KEYWORD3]=mode.getStyle("keyword3");
  styles[Token.KEYWORD4]=mode.getStyle("keyword4");
  styles[Token.KEYWORD5]=mode.getStyle("keyword5");
  styles[Token.KEYWORD6]=mode.getStyle("keyword6");
  styles[Token.FUNCTION1]=mode.getStyle("function1");
  styles[Token.FUNCTION2]=mode.getStyle("function2");
  styles[Token.FUNCTION3]=mode.getStyle("function3");
  styles[Token.FUNCTION4]=mode.getStyle("function4");
  styles[Token.LITERAL1]=mode.getStyle("literal1");
  styles[Token.LITERAL2]=mode.getStyle("literal2");
  styles[Token.LABEL]=mode.getStyle("label");
  styles[Token.OPERATOR]=mode.getStyle("operator");
  styles[Token.INVALID]=mode.getStyle("invalid");
  caretColor=mode.getColor("editor.caret.color");
  selectionColor=mode.getColor("editor.selection.color");
  lineHighlight=mode.getBoolean("editor.linehighlight");
  lineHighlightColor=mode.getColor("editor.linehighlight.color");
  bracketHighlight=mode.getBoolean("editor.brackethighlight");
  bracketHighlightColor=mode.getColor("editor.brackethighlight.color");
  eolMarkers=mode.getBoolean("editor.eolmarkers");
  eolMarkerColor=mode.getColor("editor.eolmarkers.color");
}
