{
  if (!folder.isDirectory())   return false;
  String list[]=folder.list();
  if (list == null)   return false;
  Arrays.sort(list,String.CASE_INSENSITIVE_ORDER);
  ActionListener listener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      editor.handleOpen(e.getActionCommand());
    }
  }
;
  boolean ifound=false;
  for (int i=0; i < list.length; i++) {
    if ((list[i].charAt(0) == '.') || list[i].equals("CVS"))     continue;
    File subfolder=new File(folder,list[i]);
    if (!subfolder.isDirectory())     continue;
    File entry=new File(subfolder,list[i] + ".pde");
    if (entry.exists()) {
      String sanityCheck=sanitizedName(list[i]);
      if (!sanityCheck.equals(list[i])) {
        if (!builtOnce) {
          String mess="The sketch \"" + list[i] + "\" cannot be used.\n"+ "Sketch names must contain only basic letters and numbers.\n"+ "(ascii only and no spaces, and it cannot start with a number)";
          Base.showMessage("Ignoring bad sketch name",mess);
        }
        continue;
      }
      JMenuItem item=new JMenuItem(list[i]);
      item.addActionListener(listener);
      item.setActionCommand(entry.getAbsolutePath());
      menu.add(item);
      ifound=true;
    }
 else {
      JMenu submenu=new JMenu(list[i]);
      boolean found=addSketches(submenu,subfolder);
      if (found) {
        menu.add(submenu);
        ifound=true;
      }
    }
  }
  return ifound;
}
