{
  if (problem == null)   return null;
  IProblem iprob=problem.getIProblem();
  String args[]=iprob.getArguments();
  String result=null;
switch (iprob.getID()) {
case IProblem.ParsingError:
    if (args.length > 0) {
      result="Error on \"" + args[0] + "\"";
    }
  break;
case IProblem.ParsingErrorDeleteToken:
if (args.length > 0) {
  result="Error on \"" + args[0] + "\"";
}
break;
case IProblem.ParsingErrorInsertToComplete:
if (args.length > 0) {
if (args[0].length() == 1) {
result=getErrorMessageForBracket(args[0].charAt(0));
}
 else {
if (args[0].equals("AssignmentOperator Expression")) {
  result="Consider adding a \"=\"";
}
 else {
  result="Error on \"" + args[0] + "\"";
}
}
}
break;
case IProblem.ParsingErrorInvalidToken:
if (args.length > 0) {
if (args[1].equals("VariableDeclaratorId")) {
if (args[0].equals("int")) {
result="\"color\" and \"int\" are reserved words & can't be used as variable names";
}
 else {
result="Error on \"" + args[0] + "\"";
}
}
 else {
result="Error on \"" + args[0] + "\"";
}
}
break;
case IProblem.ParsingErrorInsertTokenAfter:
if (args.length > 0) {
if (args[1].length() == 1) {
result=getErrorMessageForBracket(args[1].charAt(0));
}
 else {
result="Error on \"" + args[0] + "\"Consider adding a \""+ args[1]+ "\"";
}
}
break;
case IProblem.UndefinedMethod:
if (args.length > 2) {
result="The method \"" + args[args.length - 2] + "("+ getSimpleName(args[args.length - 1])+ ")\" doesn't exist";
}
break;
case IProblem.ParameterMismatch:
if (args.length > 3) {
if (args[2].trim().length() == 0) {
result="The method \"" + args[1] + "\" doesn't expect any parameters";
}
 else {
result="The method \"" + args[1] + "\" expects parameters like this: "+ args[1]+ "("+ getSimpleName(args[2])+ ")";
}
}
break;
case IProblem.UndefinedField:
if (args.length > 0) {
result="The global variable \"" + args[0] + "\" doesn't exist";
}
break;
case IProblem.UndefinedType:
if (args.length > 0) {
result="The class \"" + args[0] + "\" doesn't exist";
}
break;
case IProblem.UnresolvedVariable:
if (args.length > 0) {
result="The variable \"" + args[0] + "\" doesn't exist";
}
break;
case IProblem.UndefinedName:
if (args.length > 0) {
result="The name \"" + args[0] + "\" can't be recognized";
}
break;
case IProblem.TypeMismatch:
if (args.length > 1) {
result="Type mismatch, \"" + getSimpleName(args[0]) + "\" doesn't match with \""+ getSimpleName(args[1])+ "\"";
}
break;
}
if (result == null) result=problem.getMessage();
return result;
}
