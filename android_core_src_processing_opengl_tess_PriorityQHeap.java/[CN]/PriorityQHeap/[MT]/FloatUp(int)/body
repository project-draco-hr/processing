{
  PriorityQ.PQnode[] n=nodes;
  PriorityQ.PQhandleElem[] h=handles;
  int hCurr, hParent;
  int parent;
  hCurr=n[curr].handle;
  for (; ; ) {
    parent=curr >> 1;
    hParent=n[parent].handle;
    if (parent == 0 || LEQ(leq,h[hParent].key,h[hCurr].key)) {
      n[curr].handle=hCurr;
      h[hCurr].node=curr;
      break;
    }
    n[curr].handle=hParent;
    h[hParent].node=curr;
    curr=parent;
  }
}
