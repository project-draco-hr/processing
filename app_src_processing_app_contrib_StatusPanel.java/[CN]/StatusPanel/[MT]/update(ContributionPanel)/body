{
  progressBarPanel.removeAll();
  if (panel.getContrib().isSpecial()) {
    Icon contribIcon=new ImageIcon(Toolkit.getLibImage("/icons/pde-48.png"));
    iconLabel.setIcon(contribIcon);
  }
 else {
    iconLabel.setIcon(null);
  }
  label.setText(panel.description.toString());
  updateButton.setEnabled(contributionListing.hasDownloadedLatestList() && (contributionListing.hasUpdates(panel.getContrib()) && !panel.getContrib().isUpdateFlagged()));
  String latestVersion=contributionListing.getLatestVersion(panel.getContrib());
  String currentVersion=panel.getContrib().getPrettyVersionShort();
  if (latestVersion != null) {
    latestVersion="Update to " + latestVersion;
  }
 else {
    latestVersion="Update";
  }
  if (currentVersion != null) {
    currentVersion="v" + currentVersion;
  }
 else {
    currentVersion="";
  }
  if (updateButton.isEnabled()) {
    updateButton.setText(latestVersion);
  }
 else {
    updateButton.setText("Update");
  }
  installButton.setEnabled(!panel.getContrib().isInstalled() && contributionListing.hasDownloadedLatestList() && panel.getContrib().isCompatible(Base.getRevision()));
  if (installButton.isEnabled()) {
    updateLabel.setText(currentVersion + " available");
  }
 else {
    updateLabel.setText(currentVersion + " installed");
  }
  removeButton.setEnabled(panel.getContrib().isInstalled());
  progressBarPanel.add(panel.installProgressBar);
  updateLabel.setVisible(true);
  progressBarPanel.setVisible(false);
  if (panel.isUpdateInProgress || panel.isInstallInProgress || panel.isRemoveInProgress) {
    System.out.println("wrong");
    progressBarPanel.setVisible(true);
    updateLabel.setVisible(false);
    progressBarPanel.repaint();
  }
}
