{
  if (foundationIcon == null) {
    foundationIcon=Toolkit.getLibIconX("icons/foundation",32);
    installIcon=Toolkit.getLibIconX("manager/install");
    updateIcon=Toolkit.getLibIconX("manager/update");
    removeIcon=Toolkit.getLibIconX("manager/remove");
    buttonFont=Toolkit.getSansFont(14,Font.PLAIN);
  }
  setBackground(new Color(0xebebeb));
  this.contributionTab=contributionTab;
  iconLabel=new JLabel();
  iconLabel.setHorizontalAlignment(SwingConstants.CENTER);
  label=new JTextPane();
  label.setEditable(false);
  label.setOpaque(false);
  label.setContentType("text/html");
  bodyRule="a, body { font-family: " + ContributionManagerDialog.font.getFamily() + "; "+ "font-size: "+ ContributionManagerDialog.font.getSize()+ "pt; color: black; text-decoration: none;}";
  label.addHyperlinkListener(new HyperlinkListener(){
    @Override public void hyperlinkUpdate(    HyperlinkEvent e){
      if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
        if (e.getURL() != null) {
          Platform.openURL(e.getURL().toString());
        }
      }
    }
  }
);
  installButton=new JButton("Install",installIcon);
  installButton.setDisabledIcon(installIcon);
  installButton.setFont(buttonFont);
  installButton.setHorizontalAlignment(SwingConstants.LEFT);
  installButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      installButton.setEnabled(false);
      ContributionPanel currentPanel=contributionTab.contributionListPanel.getSelectedPanel();
      currentPanel.install();
      StatusPanel.this.update(currentPanel);
    }
  }
);
  progressBarPanel=new JPanel();
  progressBarPanel.setLayout(new BorderLayout());
  progressBarPanel.setOpaque(false);
  updateLabel=new JLabel(" ");
  updateLabel.setFont(buttonFont);
  updateLabel.setHorizontalAlignment(SwingConstants.CENTER);
  updateButton=new JButton("Update",updateIcon);
  updateButton.setDisabledIcon(updateIcon);
  updateButton.setFont(buttonFont);
  updateButton.setHorizontalAlignment(SwingConstants.LEFT);
  updateButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      updateButton.setEnabled(false);
      ContributionPanel currentPanel=contributionTab.contributionListPanel.getSelectedPanel();
      currentPanel.update();
      StatusPanel.this.update(currentPanel);
    }
  }
);
  removeButton=new JButton("Remove",removeIcon);
  removeButton.setDisabledIcon(removeIcon);
  removeButton.setFont(buttonFont);
  removeButton.setHorizontalAlignment(SwingConstants.LEFT);
  removeButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      removeButton.setEnabled(false);
      ContributionPanel currentPanel=contributionTab.contributionListPanel.getSelectedPanel();
      currentPanel.remove();
      StatusPanel.this.update(currentPanel);
    }
  }
);
  int labelWidth=(width != 0) ? (3 * width / 4) : GroupLayout.PREFERRED_SIZE;
  layout=new GroupLayout(this);
  this.setLayout(layout);
  layout.setAutoCreateContainerGaps(true);
  layout.setAutoCreateGaps(true);
  layout.setHorizontalGroup(layout.createSequentialGroup().addGap(0).addComponent(iconLabel,ContributionManagerDialog.STATUS_WIDTH,ContributionManagerDialog.STATUS_WIDTH,ContributionManagerDialog.STATUS_WIDTH).addGap(0).addComponent(label,labelWidth,labelWidth,labelWidth).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED,GroupLayout.PREFERRED_SIZE,Short.MAX_VALUE).addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER).addComponent(installButton,BUTTON_WIDTH,BUTTON_WIDTH,BUTTON_WIDTH).addComponent(progressBarPanel).addComponent(updateLabel,BUTTON_WIDTH,BUTTON_WIDTH,BUTTON_WIDTH).addComponent(updateButton).addComponent(removeButton)));
  layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(iconLabel).addComponent(label).addGroup(layout.createSequentialGroup().addComponent(installButton).addGroup(layout.createParallelGroup().addComponent(progressBarPanel).addComponent(updateLabel)).addComponent(updateButton).addComponent(removeButton)));
  layout.linkSize(SwingConstants.HORIZONTAL,installButton,progressBarPanel,updateButton,removeButton);
  progressBarPanel.setVisible(false);
  updateLabel.setVisible(false);
  installButton.setEnabled(false);
  updateButton.setEnabled(false);
  removeButton.setEnabled(false);
  updateLabel.setVisible(true);
  layout.setHonorsVisibility(updateLabel,false);
  validate();
}
