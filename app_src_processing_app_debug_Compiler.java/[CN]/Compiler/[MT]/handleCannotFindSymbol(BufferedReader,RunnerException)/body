{
  String symbolLine=reader.readLine();
  reader.readLine();
  reader.readLine();
  String caretLine=reader.readLine();
  rex.setColumn(caretColumn(caretLine));
  String[] pieces=PApplet.match(symbolLine,"symbol\\s*:\\s*(\\w+)\\s+(.*)");
  if (pieces != null) {
    if (pieces[0].equals("class") || pieces[0].equals("variable")) {
      rex.setMessage("Cannot find a " + pieces[0] + " "+ "named \u201C"+ pieces[1]+ "\u201D");
      if (crusties.get(pieces[1]) != null) {
        handleCrustyCode(rex);
      }
    }
 else     if (pieces[0].equals("method")) {
      int leftParen=pieces[1].indexOf("(");
      int rightParen=pieces[1].indexOf(")");
      String methodName=pieces[1].substring(0,leftParen);
      String methodParams=pieces[1].substring(leftParen + 1,rightParen);
      String message="Cannot find a function named \u201C" + methodName + "\u201D";
      if (methodParams.length() > 0) {
        message+="with parameters " + methodParams + ".";
      }
      rex.setMessage(message);
      if (crusties.get(methodName) != null) {
        handleCrustyCode(rex);
      }
    }
 else {
      System.out.println(symbolLine);
    }
  }
}
