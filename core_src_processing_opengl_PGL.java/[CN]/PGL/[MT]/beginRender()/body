{
  PGraphicsOpenGL g=graphics.get();
  if (g == null)   return;
  if (sketch == null) {
    sketch=g.parent;
  }
  pgeomCount=geomCount;
  geomCount=0;
  pclearColor=clearColor;
  clearColor=false;
  if (fboLayerEnabledReq) {
    fboLayerEnabled=true;
    fboLayerEnabledReq=false;
  }
  if (fboLayerEnabled) {
    if (fbolayerResetReq) {
      destroyFBOLayer();
      fbolayerResetReq=false;
    }
    if (!fboLayerCreated && DOUBLE_BUFFERED) {
      createFBOLayer();
    }
    bindFramebufferImpl(FRAMEBUFFER,glColorFbo.get(0));
    framebufferTexture2D(FRAMEBUFFER,COLOR_ATTACHMENT0,TEXTURE_2D,glColorTex.get(backTex),0);
    if (1 < numSamples) {
      bindFramebufferImpl(FRAMEBUFFER,glMultiFbo.get(0));
    }
    if (sketch.frameCount == 0) {
      float ba=((g.backgroundColor >> 24) & 0xff) / 255.0f;
      float br=((g.backgroundColor >> 16) & 0xff) / 255.0f;
      float bg=((g.backgroundColor >> 8) & 0xff) / 255.0f;
      float bb=((g.backgroundColor) & 0xff) / 255.0f;
      clearColor(br,bg,bb,ba);
      clear(COLOR_BUFFER_BIT);
    }
 else     if (!pclearColor || !sketch.isLooping()) {
      int x=0;
      int y=0;
      if (presentMode) {
        x=(int)presentX;
        y=(int)presentY;
      }
      float scale=getPixelScale();
      drawTexture(TEXTURE_2D,glColorTex.get(frontTex),fboWidth,fboHeight,x,y,g.width,g.height,0,0,(int)(scale * g.width),(int)(scale * g.height),0,0,g.width,g.height);
    }
  }
}
