{
  initTexRectShader();
  if (texData == null) {
    texData=allocateDirectFloatBuffer(texCoords.length);
  }
  if (0 < texRectShaderProgram) {
    boolean depthTest=getDepthTest();
    disable(DEPTH_TEST);
    boolean depthMask=getDepthWriteMask();
    depthMask(false);
    viewBuffer.rewind();
    getIntegerv(VIEWPORT,viewBuffer);
    viewport(0,0,scrW,scrH);
    useProgram(texRectShaderProgram);
    enableVertexAttribArray(texRectVertLoc);
    enableVertexAttribArray(texRectTCoordLoc);
    texCoords[0]=2 * (float)scrX0 / scrW - 1;
    texCoords[1]=2 * (float)scrY0 / scrH - 1;
    texCoords[2]=texX0;
    texCoords[3]=texY0;
    texCoords[4]=2 * (float)scrX1 / scrW - 1;
    texCoords[5]=2 * (float)scrY0 / scrH - 1;
    texCoords[6]=texX1;
    texCoords[7]=texY0;
    texCoords[8]=2 * (float)scrX0 / scrW - 1;
    texCoords[9]=2 * (float)scrY1 / scrH - 1;
    texCoords[10]=texX0;
    texCoords[11]=texY1;
    texCoords[12]=2 * (float)scrX1 / scrW - 1;
    texCoords[13]=2 * (float)scrY1 / scrH - 1;
    texCoords[14]=texX1;
    texCoords[15]=texY1;
    texData.rewind();
    texData.put(texCoords);
    activeTexture(TEXTURE0);
    boolean enabledTex=false;
    if (!texturingIsEnabled(TEXTURE_RECTANGLE)) {
      enableTexturing(TEXTURE_RECTANGLE);
      enabledTex=true;
    }
    bindTexture(TEXTURE_RECTANGLE,id);
    uniform1i(texRectSamplerLoc,0);
    texData.position(0);
    bindBuffer(PGL.ARRAY_BUFFER,texGeoVBO);
    bufferData(PGL.ARRAY_BUFFER,16 * SIZEOF_FLOAT,texData,PGL.STATIC_DRAW);
    vertexAttribPointer(texRectVertLoc,2,FLOAT,false,4 * SIZEOF_FLOAT,0);
    vertexAttribPointer(texRectTCoordLoc,2,FLOAT,false,4 * SIZEOF_FLOAT,2 * SIZEOF_FLOAT);
    drawArrays(TRIANGLE_STRIP,0,4);
    bindBuffer(ARRAY_BUFFER,0);
    bindTexture(TEXTURE_RECTANGLE,0);
    if (enabledTex) {
      disableTexturing(TEXTURE_RECTANGLE);
    }
    disableVertexAttribArray(texRectVertLoc);
    disableVertexAttribArray(texRectTCoordLoc);
    useProgram(0);
    if (depthTest) {
      enable(DEPTH_TEST);
    }
 else {
      disable(DEPTH_TEST);
    }
    depthMask(depthMask);
    viewport(viewBuffer.get(0),viewBuffer.get(1),viewBuffer.get(2),viewBuffer.get(3));
  }
}
