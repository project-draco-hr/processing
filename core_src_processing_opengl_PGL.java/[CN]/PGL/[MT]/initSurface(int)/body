{
  if (profile == null) {
    profile=GLProfile.getDefault();
  }
 else {
    if (canvasAWT != null) {
      canvasAWT.removeGLEventListener(listener);
      pg.parent.removeListeners(canvasAWT);
      pg.parent.remove(canvasAWT);
    }
 else     if (canvasNEWT != null) {
      animator.stop();
      animator.remove(window);
      window.removeGLEventListener(listener);
      pg.parent.remove(canvasNEWT);
    }
    setFramerate=false;
  }
  GLCapabilities caps=new GLCapabilities(profile);
  if (1 < antialias) {
    caps.setSampleBuffers(true);
    caps.setNumSamples(antialias);
  }
 else {
    caps.setSampleBuffers(false);
  }
  if (PApplet.platform == PConstants.MACOSX) {
    caps.setFBO(enable_screen_FBO_macosx);
  }
 else   if (PApplet.platform == PConstants.WINDOWS) {
    caps.setFBO(enable_screen_FBO_windows);
  }
 else   if (PApplet.platform == PConstants.LINUX) {
    caps.setFBO(enable_screen_FBO_linux);
  }
 else {
    caps.setFBO(enable_screen_FBO_other);
  }
  caps.setDepthBits(request_depth_bits);
  caps.setStencilBits(request_stencil_bits);
  caps.setAlphaBits(request_alpha_bits);
  caps.setBackgroundOpaque(true);
  caps.setOnscreen(true);
  if (toolkit == AWT) {
    canvasAWT=new GLCanvas(caps);
    canvasAWT.setBounds(0,0,pg.width,pg.height);
    pg.parent.setLayout(new BorderLayout());
    pg.parent.add(canvasAWT,BorderLayout.CENTER);
    pg.parent.removeListeners(pg.parent);
    pg.parent.addListeners(canvasAWT);
    capabilities=canvasAWT.getChosenGLCapabilities();
    canvas=canvasAWT;
    canvasNEWT=null;
    listener=new PGLListener();
    canvasAWT.addGLEventListener(listener);
  }
 else   if (toolkit == NEWT) {
    window=GLWindow.create(caps);
    canvasNEWT=new NewtCanvasAWT(window);
    canvasNEWT.setBounds(0,0,pg.width,pg.height);
    canvasNEWT.setBackground(Color.GRAY);
    pg.parent.setLayout(new BorderLayout());
    pg.parent.add(canvasNEWT,BorderLayout.CENTER);
    com.jogamp.newt.event.MouseListener mouseListener=new NEWTMouseAdapter();
    window.addMouseListener(mouseListener);
    com.jogamp.newt.event.KeyListener keyListener=new NEWTKeyAdapter();
    window.addKeyListener(keyListener);
    capabilities=window.getChosenGLCapabilities();
    canvas=canvasNEWT;
    canvasAWT=null;
    listener=new PGLListener();
    window.addGLEventListener(listener);
    animator=new NEWTAnimator(window);
    animator.start();
  }
  initialized=true;
}
