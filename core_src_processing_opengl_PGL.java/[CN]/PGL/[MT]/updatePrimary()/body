{
  if (!setFramerate) {
    setFrameRate(targetFramerate);
  }
  if (needScreenFBO && glColorFbo[0] == 0) {
    numSamples=qualityToSamples(pg.quality);
    String ext=gl.glGetString(GL.GL_EXTENSIONS);
    if (-1 < ext.indexOf("texture_non_power_of_two")) {
      fboWidth=pg.width;
      fboHeight=pg.height;
    }
 else {
      fboWidth=PGL.nextPowerOfTwo(pg.width);
      fboHeight=PGL.nextPowerOfTwo(pg.height);
    }
    multisample=1 < numSamples;
    if (multisample && gl2x == null) {
      throw new RuntimeException("Doesn't have the OpenGL extensions " + "necessary for multisampling.");
    }
    packedDepthStencil=ext.indexOf("packed_depth_stencil") != -1;
    contextHashCode=context.hashCode();
    gl.glGenTextures(2,glColorTex,0);
    for (int i=0; i < 1; i++) {
      gl.glBindTexture(GL.GL_TEXTURE_2D,glColorTex[i]);
      gl.glTexParameteri(GL.GL_TEXTURE_2D,GL.GL_TEXTURE_MIN_FILTER,GL.GL_NEAREST);
      gl.glTexParameteri(GL.GL_TEXTURE_2D,GL.GL_TEXTURE_MAG_FILTER,GL.GL_NEAREST);
      gl.glTexParameteri(GL.GL_TEXTURE_2D,GL.GL_TEXTURE_WRAP_S,GL.GL_CLAMP_TO_EDGE);
      gl.glTexParameteri(GL.GL_TEXTURE_2D,GL.GL_TEXTURE_WRAP_T,GL.GL_CLAMP_TO_EDGE);
      gl.glTexImage2D(GL.GL_TEXTURE_2D,0,GL.GL_RGBA,fboWidth,fboHeight,0,GL.GL_RGBA,GL.GL_UNSIGNED_BYTE,null);
      initTexture(GL.GL_TEXTURE_2D,PGL.RGBA,fboWidth,fboHeight);
    }
    gl.glBindTexture(GL.GL_TEXTURE_2D,0);
    gl.glGenFramebuffers(1,glColorFbo,0);
    gl.glBindFramebuffer(GL.GL_FRAMEBUFFER,glColorFbo[0]);
    gl.glFramebufferTexture2D(GL.GL_FRAMEBUFFER,GL.GL_COLOR_ATTACHMENT0,GL.GL_TEXTURE_2D,glColorTex[0],0);
    if (multisample) {
      gl.glGenFramebuffers(1,glMultiFbo,0);
      gl.glBindFramebuffer(GL.GL_FRAMEBUFFER,glMultiFbo[0]);
      gl.glGenRenderbuffers(1,glColorRenderBuffer,0);
      gl.glBindRenderbuffer(GL.GL_RENDERBUFFER,glColorRenderBuffer[0]);
      gl2x.glRenderbufferStorageMultisample(GL.GL_RENDERBUFFER,numSamples,GL.GL_RGBA8,fboWidth,fboHeight);
      gl.glFramebufferRenderbuffer(GL.GL_FRAMEBUFFER,GL.GL_COLOR_ATTACHMENT0,GL.GL_RENDERBUFFER,glColorRenderBuffer[0]);
      if (packedDepthStencil) {
        gl.glGenRenderbuffers(1,glPackedDepthStencil,0);
        gl.glBindRenderbuffer(GL.GL_RENDERBUFFER,glPackedDepthStencil[0]);
        gl2x.glRenderbufferStorageMultisample(GL.GL_RENDERBUFFER,numSamples,GL.GL_DEPTH24_STENCIL8,fboWidth,fboHeight);
        gl.glFramebufferRenderbuffer(GL.GL_FRAMEBUFFER,GL.GL_DEPTH_ATTACHMENT,GL.GL_RENDERBUFFER,glPackedDepthStencil[0]);
        gl.glFramebufferRenderbuffer(GL.GL_FRAMEBUFFER,GL.GL_STENCIL_ATTACHMENT,GL.GL_RENDERBUFFER,glPackedDepthStencil[0]);
      }
 else {
        gl.glGenRenderbuffers(1,glDepthBuffer,0);
        gl.glBindRenderbuffer(GL.GL_RENDERBUFFER,glDepthBuffer[0]);
        gl2x.glRenderbufferStorageMultisample(GL.GL_RENDERBUFFER,numSamples,GL.GL_DEPTH_COMPONENT24,fboWidth,fboHeight);
        gl.glFramebufferRenderbuffer(GL.GL_FRAMEBUFFER,GL.GL_DEPTH_ATTACHMENT,GL.GL_RENDERBUFFER,glDepthBuffer[0]);
        gl.glGenRenderbuffers(1,glStencilBuffer,0);
        gl.glBindRenderbuffer(GL.GL_RENDERBUFFER,glStencilBuffer[0]);
        gl2x.glRenderbufferStorageMultisample(GL.GL_RENDERBUFFER,numSamples,GL.GL_STENCIL_INDEX8,fboWidth,fboHeight);
        gl.glFramebufferRenderbuffer(GL.GL_FRAMEBUFFER,GL.GL_STENCIL_ATTACHMENT,GL.GL_RENDERBUFFER,glStencilBuffer[0]);
      }
      validateFramebuffer();
      gl.glClearDepth(1);
      gl.glClearStencil(0);
      gl.glClearColor(0,0,0,0);
      gl.glClear(GL.GL_DEPTH_BUFFER_BIT | GL.GL_STENCIL_BUFFER_BIT | GL.GL_COLOR_BUFFER_BIT);
      gl.glBindFramebuffer(GL.GL_FRAMEBUFFER,glColorFbo[0]);
    }
 else {
      if (packedDepthStencil) {
        gl.glGenRenderbuffers(1,glPackedDepthStencil,0);
        gl.glBindRenderbuffer(GL.GL_RENDERBUFFER,glPackedDepthStencil[0]);
        gl.glRenderbufferStorage(GL.GL_RENDERBUFFER,GL.GL_DEPTH24_STENCIL8,fboWidth,fboHeight);
        gl.glFramebufferRenderbuffer(GL.GL_FRAMEBUFFER,GL.GL_DEPTH_ATTACHMENT,GL.GL_RENDERBUFFER,glPackedDepthStencil[0]);
        gl.glFramebufferRenderbuffer(GL.GL_FRAMEBUFFER,GL.GL_STENCIL_ATTACHMENT,GL.GL_RENDERBUFFER,glPackedDepthStencil[0]);
      }
 else {
        gl.glGenRenderbuffers(1,glDepthBuffer,0);
        gl.glBindRenderbuffer(GL.GL_RENDERBUFFER,glDepthBuffer[0]);
        gl.glRenderbufferStorage(GL.GL_RENDERBUFFER,GL.GL_DEPTH_COMPONENT24,fboWidth,fboHeight);
        gl.glFramebufferRenderbuffer(GL.GL_FRAMEBUFFER,GL.GL_DEPTH_ATTACHMENT,GL.GL_RENDERBUFFER,glDepthBuffer[0]);
        gl.glGenRenderbuffers(1,glStencilBuffer,0);
        gl.glBindRenderbuffer(GL.GL_RENDERBUFFER,glStencilBuffer[0]);
        gl.glRenderbufferStorage(GL.GL_RENDERBUFFER,GL.GL_STENCIL_INDEX8,fboWidth,fboHeight);
        gl.glFramebufferRenderbuffer(GL.GL_FRAMEBUFFER,GL.GL_STENCIL_ATTACHMENT,GL.GL_RENDERBUFFER,glStencilBuffer[0]);
      }
      validateFramebuffer();
      gl.glClearDepth(1);
      gl.glClearStencil(0);
      gl.glClear(GL.GL_DEPTH_BUFFER_BIT | GL.GL_STENCIL_BUFFER_BIT);
    }
    PGraphicsOpenGL.screenFramebuffer.glFbo=glColorFbo[0];
    backTex=1;
    frontTex=0;
  }
 else {
    PGraphicsOpenGL.screenFramebuffer.glFbo=0;
  }
}
