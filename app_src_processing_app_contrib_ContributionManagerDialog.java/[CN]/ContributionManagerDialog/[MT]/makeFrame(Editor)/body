{
  dialog=new JFrame(title);
  dialog.setMinimumSize(new Dimension(750,500));
  tabbedPane=new JTabbedPane();
  makeAndShowTab(false,true);
  tabbedPane.addTab("Tools",null,toolsContributionTab.panel,"Tools");
  tabbedPane.setMnemonicAt(0,KeyEvent.VK_1);
  tabbedPane.addTab("Libraries",null,librariesContributionTab.panel,"Libraries");
  tabbedPane.setMnemonicAt(1,KeyEvent.VK_2);
  tabbedPane.addTab("Modes",null,modesContributionTab.panel,"Modes");
  tabbedPane.setMnemonicAt(2,KeyEvent.VK_3);
  tabbedPane.addTab("Examples",null,examplesContributionTab.panel,"Examples");
  tabbedPane.setMnemonicAt(3,KeyEvent.VK_4);
  tabbedPane.addTab("Updates",null,updatesContributionTab.panel,"Updates");
  tabbedPane.setMnemonicAt(3,KeyEvent.VK_5);
  tabbedPane.setUI(new SpacedTabbedPaneUI());
  tabbedPane.setBackground(new Color(0x132638));
  tabbedPane.setOpaque(true);
  makeAndSetTabComponents();
  tabbedPane.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      for (int i=0; i < 4; i++) {
        tabLabels[i].setBackground(new Color(0x2d4251));
        tabLabels[i].setForeground(Color.WHITE);
      }
      updateTabPanel.setBackground(new Color(0x2d4251));
      updateTabLabel.setForeground(Color.WHITE);
      int currentIndex=tabbedPane.getSelectedIndex();
      if (currentIndex != 4) {
        tabbedPane.getTabComponentAt(tabbedPane.getSelectedIndex()).setBackground(new Color(0xe0fffd));
        tabbedPane.getTabComponentAt(tabbedPane.getSelectedIndex()).setForeground(Color.BLACK);
      }
 else {
        updateTabPanel.setBackground(new Color(0xe0fffd));
        updateTabLabel.setForeground(Color.BLACK);
      }
      getActiveTab().contributionListPanel.scrollPane.requestFocusInWindow();
    }
  }
);
  setLayout();
  restartButton=new JButton(Language.text("contrib.restart"));
  restartButton.setVisible(false);
  restartButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent arg0){
      Iterator<Editor> iter=editor.getBase().getEditors().iterator();
      while (iter.hasNext()) {
        Editor ed=iter.next();
        if (ed.getSketch().isModified()) {
          int option=Messages.showYesNoQuestion(editor,title,Language.text("contrib.unsaved_changes"),Language.text("contrib.unsaved_changes.prompt"));
          if (option == JOptionPane.NO_OPTION)           return;
 else           break;
        }
      }
      StringBuilder cmd=new StringBuilder();
      cmd.append(System.getProperty("java.home") + File.separator + "bin"+ File.separator+ "java ");
      for (      String jvmArg : ManagementFactory.getRuntimeMXBean().getInputArguments()) {
        cmd.append(jvmArg + " ");
      }
      cmd.append("-cp ").append(ManagementFactory.getRuntimeMXBean().getClassPath()).append(" ");
      cmd.append(Base.class.getName());
      try {
        Runtime.getRuntime().exec(cmd.toString());
        System.exit(0);
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
  }
);
  Toolkit.setIcon(dialog);
  registerDisposeListeners();
  dialog.pack();
  dialog.setLocationRelativeTo(null);
}
