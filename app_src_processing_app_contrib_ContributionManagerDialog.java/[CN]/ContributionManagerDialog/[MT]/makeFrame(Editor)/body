{
  dialog=new JFrame(title);
  String[] tabTitles={"Tools","Libraries","Modes","Examples","Updates"};
  tabbedPane=new JTabbedPane();
  makeAndShowTab(false,true);
  tabbedPane.addTab("Tools",null,toolsContributionTab.panel,"Tools");
  tabbedPane.setMnemonicAt(0,KeyEvent.VK_1);
  tabbedPane.addTab("Libraries",null,librariesContributionTab.panel,"Libraries");
  tabbedPane.setMnemonicAt(1,KeyEvent.VK_2);
  tabbedPane.addTab("Modes",null,modesContributionTab.panel,"Modes");
  tabbedPane.setMnemonicAt(2,KeyEvent.VK_3);
  tabbedPane.addTab("Examples",null,examplesContributionTab.panel,"Examples");
  tabbedPane.setMnemonicAt(3,KeyEvent.VK_4);
  tabbedPane.addTab("Updates",null,updatesContributionTab.panel,"Updates");
  tabbedPane.setMnemonicAt(3,KeyEvent.VK_5);
  tabbedPane.setUI(new SpacedTabbedPaneUI());
  tabbedPane.setBackground(Color.WHITE);
  tabbedPane.setOpaque(true);
  tabbedPane.setBorder(BorderFactory.createLineBorder(Color.BLACK,2));
  JPanel updateTabPanel=new JPanel(true);
  JLabel updateTabLabel=new JLabel("Update");
  numberLabel.setVerticalTextPosition(SwingConstants.CENTER);
  numberLabel.setHorizontalTextPosition(SwingConstants.CENTER);
  updateTabPanel.setOpaque(false);
  updateTabPanel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(0,2,0,0,Color.BLACK),BorderFactory.createEmptyBorder(4,4,4,4)));
  tabbedPane.setTabComponentAt(4,updateTabPanel);
  JLabel tabLabels[]=new JLabel[4];
  for (int i=0; i < tabLabels.length; i++) {
    tabLabels[i]=new JLabel(tabTitles[i]);
    tabLabels[i].setBorder(BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(0,(i == 0 ? 0 : 2),0,(i == 3 ? 2 : 0),Color.BLACK),BorderFactory.createEmptyBorder(4,4,4,4)));
    tabbedPane.setTabComponentAt(i,tabLabels[i]);
  }
  GroupLayout tabLayout=new GroupLayout(updateTabPanel);
  tabLayout.setAutoCreateGaps(true);
  updateTabPanel.setLayout(tabLayout);
  tabLayout.setHorizontalGroup(tabLayout.createSequentialGroup().addComponent(numberLabel).addComponent(updateTabLabel));
  tabLayout.setVerticalGroup(tabLayout.createParallelGroup(GroupLayout.Alignment.CENTER).addComponent(numberLabel).addComponent(updateTabLabel));
  tabbedPane.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
    }
  }
);
  setLayout();
  restartButton=new JButton(Language.text("contrib.restart"));
  restartButton.setVisible(false);
  restartButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent arg0){
      Iterator<Editor> iter=editor.getBase().getEditors().iterator();
      while (iter.hasNext()) {
        Editor ed=iter.next();
        if (ed.getSketch().isModified()) {
          int option=Base.showYesNoQuestion(editor,title,Language.text("contrib.unsaved_changes"),Language.text("contrib.unsaved_changes.prompt"));
          if (option == JOptionPane.NO_OPTION)           return;
 else           break;
        }
      }
      StringBuilder cmd=new StringBuilder();
      cmd.append(System.getProperty("java.home") + File.separator + "bin"+ File.separator+ "java ");
      for (      String jvmArg : ManagementFactory.getRuntimeMXBean().getInputArguments()) {
        cmd.append(jvmArg + " ");
      }
      cmd.append("-cp ").append(ManagementFactory.getRuntimeMXBean().getClassPath()).append(" ");
      cmd.append(Base.class.getName());
      try {
        Runtime.getRuntime().exec(cmd.toString());
        System.exit(0);
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
  }
);
  Toolkit.setIcon(dialog);
  registerDisposeListeners();
  dialog.pack();
  dialog.setLocationRelativeTo(null);
}
