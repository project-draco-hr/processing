{
  if (editor.hasJavaTabs())   return;
  log("Last clicked word:" + lastClickedWord);
  if (lastClickedWord == null && getSelectedText() == null) {
    editor.statusMessage("Highlight the class/function/variable name first",EditorStatus.NOTICE);
    return;
  }
  if (errorCheckerService.hasSyntaxErrors()) {
    editor.statusMessage("Can't perform action until syntax errors are fixed :(",EditorStatus.WARNING);
    return;
  }
  DefaultMutableTreeNode defCU=findAllOccurrences();
  String selText=lastClickedWord == null ? getSelectedText() : lastClickedWord;
  if (defCU == null) {
    editor.statusMessage(selText + " isn't defined in this sketch, " + "so it cannot be renamed",EditorStatus.ERROR);
    return;
  }
  if (!frmRename.isVisible()) {
    frmRename.setLocation(editor.getX() + (editor.getWidth() - frmRename.getWidth()) / 2,editor.getY() + (editor.getHeight() - frmRename.getHeight()) / 2);
    frmRename.setVisible(true);
    EventQueue.invokeLater(new Runnable(){
      @Override public void run(){
        String selText=lastClickedWord == null ? getSelectedText() : lastClickedWord;
        frmOccurenceList.setTitle("All occurrences of " + selText);
        lblRefactorOldName.setText("Current name: " + selText);
        txtRenameField.setText("");
        txtRenameField.requestFocus();
      }
    }
);
  }
  frmRename.toFront();
}
