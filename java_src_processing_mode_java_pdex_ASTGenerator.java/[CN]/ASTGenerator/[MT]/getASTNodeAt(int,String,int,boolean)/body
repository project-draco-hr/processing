{
  int pdeLineNumber=lineNumber + errorCheckerService.mainClassOffset;
  int codeIndex=editor.getSketch().getCodeIndex(editor.getCurrentTab());
  if (codeIndex > 0) {
    for (int i=0; i < codeIndex; i++) {
      SketchCode sc=editor.getSketch().getCode(i);
      int len=Util.countLines(sc.getProgram()) + 1;
      pdeLineNumber+=len;
    }
  }
  ASTNode lineNode=findLineOfNode(compilationUnit,pdeLineNumber,offset,name);
  ASTNode decl=null;
  String nodeLabel=null;
  String nameOfNode=null;
  if (lineNode != null) {
    String pdeCodeLine="";
    String javaCodeLine=getJavaSourceCodeLine(pdeLineNumber);
    OffsetMatcher ofm=new OffsetMatcher(pdeCodeLine,javaCodeLine);
    int javaOffset=ofm.getJavaOffForPdeOff(offset,name.length()) + lineNode.getStartPosition();
    ASTNode simpName=dfsLookForASTNode(errorCheckerService.getLatestCU(),name,javaOffset,javaOffset + name.length());
    if (simpName == null && lineNode instanceof SimpleName) {
switch (lineNode.getParent().getNodeType()) {
case ASTNode.TYPE_DECLARATION:
case ASTNode.METHOD_DECLARATION:
case ASTNode.FIELD_DECLARATION:
case ASTNode.VARIABLE_DECLARATION_FRAGMENT:
        return lineNode.getParent();
default :
      break;
  }
}
if (simpName instanceof SimpleName) {
  nameOfNode=simpName.toString();
  decl=findDeclaration((SimpleName)simpName);
  if (decl != null) {
    nodeLabel=getLabelIfType(decl);
  }
 else {
    if (scrollOnly) {
      editor.statusMessage(simpName + " is not defined in this sketch",EditorStatus.ERROR);
    }
  }
}
}
if (decl != null && scrollOnly) {
ASTNode simpName2=getNodeName(decl,nameOfNode);
}
return decl;
}
