{
  ASTNode current=node.getParent();
  String type="";
  StringBuilder fullName=new StringBuilder();
  Stack<String> parents=new Stack<>();
  String simpleName=node.toString();
switch (node.getNodeType()) {
case ASTNode.TYPE_DECLARATION:
case ASTNode.METHOD_DECLARATION:
case ASTNode.FIELD_DECLARATION:
    while (current != null) {
      if (current instanceof TypeDeclaration) {
        parents.push(((TypeDeclaration)current).getName().toString());
      }
      current=current.getParent();
    }
  while (parents.size() > 0) {
    fullName.append(parents.pop()).append(".");
  }
fullName.append(simpleName);
if (node instanceof MethodDeclaration) {
MethodDeclaration md=(MethodDeclaration)node;
if (!md.isConstructor()) type=md.getReturnType2().toString();
fullName.append('(');
if (!md.parameters().isEmpty()) {
  List<ASTNode> params=md.parameters();
  for (  ASTNode par : params) {
    if (par instanceof SingleVariableDeclaration) {
      SingleVariableDeclaration svd=(SingleVariableDeclaration)par;
      fullName.append(svd.getType()).append(" ").append(svd.getName()).append(",");
    }
  }
}
if (fullName.charAt(fullName.length() - 1) == ',') fullName.deleteCharAt(fullName.length() - 1);
fullName.append(')');
}
 else if (node instanceof FieldDeclaration) {
type=((FieldDeclaration)node).getType().toString();
}
int x=fullName.indexOf(".");
fullName.delete(0,x + 1);
return type + " " + fullName;
case ASTNode.SINGLE_VARIABLE_DECLARATION:
SingleVariableDeclaration svd=(SingleVariableDeclaration)node;
return svd.getType() + " " + svd.getName();
case ASTNode.VARIABLE_DECLARATION_STATEMENT:
return ((VariableDeclarationStatement)node).getType() + " " + simpleName;
case ASTNode.VARIABLE_DECLARATION_EXPRESSION:
return ((VariableDeclarationExpression)node).getType() + " " + simpleName;
default :
break;
}
return "";
}
