{
  if (cu == null) {
    ASTParser parser=ASTParser.newParser(AST.JLS4);
    parser.setSource(source.toCharArray());
    parser.setKind(ASTParser.K_COMPILATION_UNIT);
    Map<String,String> options=JavaCore.getOptions();
    JavaCore.setComplianceOptions(JavaCore.VERSION_1_8,options);
    options.put(JavaCore.COMPILER_SOURCE,JavaCore.VERSION_1_8);
    parser.setCompilerOptions(options);
    compilationUnit=(CompilationUnit)parser.createAST(null);
  }
 else {
    compilationUnit=cu;
  }
  getCodeComments();
  codeTree=new DefaultMutableTreeNode(new ASTNodeWrapper((ASTNode)compilationUnit.types().get(0)));
  if (compilationUnit.types() == null || compilationUnit.types().isEmpty()) {
    Messages.loge("No CU found!");
  }
  visitRecur((ASTNode)compilationUnit.types().get(0),codeTree);
  SwingWorker<Object,Object> worker=new SwingWorker<Object,Object>(){
    @Override protected Object doInBackground() throws Exception {
      return null;
    }
    protected void done(){
      if (codeTree != null) {
        if (SHOW_AST) {
          if (jtree.hasFocus() || frmASTView.hasFocus())           return;
          jtree.setModel(new DefaultTreeModel(codeTree));
          ((DefaultTreeModel)jtree.getModel()).reload();
          jtree.validate();
          if (!frmASTView.isVisible()) {
            frmASTView.setVisible(true);
          }
        }
      }
    }
  }
;
  worker.execute();
  return codeTree;
}
