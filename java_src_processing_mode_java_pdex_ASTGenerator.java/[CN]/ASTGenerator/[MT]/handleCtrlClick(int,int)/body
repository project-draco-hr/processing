{
  Messages.log("* scrollToDeclaration");
  PreprocessedSketch ps=errorCheckerService.latestResult;
  int javaOffset=ps.tabOffsetToJavaOffset(tabIndex,offset);
  SimpleName simpleName=getSimpleNameAt(javaOffset);
  if (simpleName == null) {
    Messages.log("nothing found");
    return;
  }
  IBinding binding=resolveBinding(simpleName);
  if (binding == null) {
    Messages.log("binding not resolved");
    return;
  }
  String key=binding.getKey();
  ASTNode decl=ps.compilationUnit.findDeclaringNode(key);
  if (decl == null) {
    Messages.log("decl not found, showing usage instead");
    handleShowUsage(binding);
    return;
  }
  SimpleName declName=null;
switch (binding.getKind()) {
case IBinding.TYPE:
    declName=((TypeDeclaration)decl).getName();
  break;
case IBinding.METHOD:
declName=((MethodDeclaration)decl).getName();
break;
case IBinding.VARIABLE:
declName=((VariableDeclaration)decl).getName();
break;
}
if (declName == null) {
Messages.log("decl name not found " + decl);
return;
}
if (declName.equals(simpleName)) {
handleShowUsage(binding);
}
 else {
Messages.log("found declaration, offset " + decl.getStartPosition() + ", name: "+ declName);
errorCheckerService.highlightJavaRange(declName.getStartPosition(),declName.getLength());
}
}
