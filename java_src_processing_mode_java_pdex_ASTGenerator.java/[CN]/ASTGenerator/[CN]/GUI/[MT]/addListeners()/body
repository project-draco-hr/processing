{
  if (SHOW_DEBUG_TREE)   addDebugTreeListener();
  renameButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (renameTextField.getText().length() == 0) {
        return;
      }
      String newName=renameTextField.getText().trim();
      astGen.handleRename(renameBinding,newName);
      renameWindow.setVisible(false);
    }
  }
);
  showUsageButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      astGen.handleShowUsage(renameBinding);
      renameWindow.setVisible(false);
    }
  }
);
  showUsageTree.addTreeSelectionListener(new TreeSelectionListener(){
    @Override public void valueChanged(    TreeSelectionEvent e){
      if (showUsageTree.getLastSelectedPathComponent() == null) {
        return;
      }
      DefaultMutableTreeNode tnode=(DefaultMutableTreeNode)showUsageTree.getLastSelectedPathComponent();
      if (tnode.getUserObject() instanceof ShowUsageTreeNode) {
        ShowUsageTreeNode node=(ShowUsageTreeNode)tnode.getUserObject();
        astGen.errorCheckerService.highlightTabRange(node.tabIndex,node.startTabOffset,node.stopTabOffset);
      }
    }
  }
);
}
