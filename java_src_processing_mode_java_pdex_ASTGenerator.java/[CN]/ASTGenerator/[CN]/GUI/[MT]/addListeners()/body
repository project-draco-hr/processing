{
  if (SHOW_DEBUG_TREE)   addDebugTreeListener();
  renameButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (renameTextField.getText().length() == 0) {
        return;
      }
      String newName=renameTextField.getText().trim();
      astGen.refactorIt(newName);
      renameWindow.setVisible(false);
    }
  }
);
  showUsageButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      astGen.handleShowUsage();
    }
  }
);
  showUsageTree.addTreeSelectionListener(new TreeSelectionListener(){
    @Override public void valueChanged(    TreeSelectionEvent e){
      log(e);
      if (showUsageTree.getLastSelectedPathComponent() == null) {
        return;
      }
      DefaultMutableTreeNode tnode=(DefaultMutableTreeNode)showUsageTree.getLastSelectedPathComponent();
      if (tnode.getUserObject() instanceof ASTNode) {
        ASTNode node=(ASTNode)tnode.getUserObject();
        int startOffset=node.getStartPosition();
        int length=node.getLength();
        astGen.errorCheckerService.highlightJavaRange(startOffset,length);
      }
    }
  }
);
}
