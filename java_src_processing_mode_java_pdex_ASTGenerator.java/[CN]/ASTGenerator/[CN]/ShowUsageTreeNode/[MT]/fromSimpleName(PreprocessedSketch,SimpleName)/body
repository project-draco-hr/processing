{
  int startJavaOffset=name.getStartPosition();
  int stopJavaOffset=startJavaOffset + name.getLength();
  int startPdeOffset=ps.javaOffsetToPdeOffset(startJavaOffset);
  int stopPdeOffset=ps.javaOffsetToPdeOffset(stopJavaOffset);
  int tabIndex=ps.pdeOffsetToTabIndex(startPdeOffset);
  int startTabOffset=ps.pdeOffsetToTabOffset(tabIndex,startPdeOffset);
  int stopTabOffset=ps.pdeOffsetToTabOffset(tabIndex,stopPdeOffset);
  int tabLine=ps.tabOffsetToTabLine(tabIndex,startTabOffset);
  int lineStartPdeOffset=ps.pdeCode.lastIndexOf('\n',startPdeOffset) + 1;
  int lineStopPdeOffset=ps.pdeCode.indexOf('\n',stopPdeOffset);
  int highlightStartOffset=startPdeOffset - lineStartPdeOffset;
  int highlightStopOffset=stopPdeOffset - lineStartPdeOffset;
  String line=ps.pdeCode.substring(lineStartPdeOffset,lineStopPdeOffset);
  String pre=line.substring(0,highlightStartOffset).replace("&","&amp;").replace(">","&gt;").replace("<","&lt;");
  String highlight=line.substring(highlightStartOffset,highlightStopOffset).replace("&","&amp;").replace(">","&gt;").replace("<","&lt;");
  String post=line.substring(highlightStopOffset).replace("&","&amp;").replace(">","&gt;").replace("<","&lt;");
  line=pre + "<font color=#222222><b>" + highlight+ "</b></font>"+ post;
  line=line.trim();
  ShowUsageTreeNode node=new ShowUsageTreeNode();
  node.tabIndex=tabIndex;
  node.tabLine=tabLine;
  node.startTabOffset=startTabOffset;
  node.stopTabOffset=stopTabOffset;
  node.text="<html><font color=#bbbbbb>" + (tabLine + 1) + "</font> <font color=#777777>"+ line+ "</font></html>";
  return node;
}
