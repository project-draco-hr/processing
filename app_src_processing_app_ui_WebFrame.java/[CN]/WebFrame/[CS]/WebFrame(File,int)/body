{
  URL fileUrl=file.toURI().toURL();
  requestContentHeight(width,fileUrl);
  editorPane=new JEditorPane();
  editorPane.setPage(fileUrl);
  editorPane.setEditable(false);
  editorPane.setPreferredSize(new Dimension(width,width));
  getContentPane().add(editorPane);
  Toolkit.registerWindowCloseKeys(getRootPane(),new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      handleClose();
    }
  }
);
  editorKit=(HTMLEditorKit)editorPane.getEditorKit();
  editorKit.setAutoFormSubmission(false);
  Object title=editorPane.getDocument().getProperty("title");
  if (title instanceof String) {
    setTitle((String)title);
  }
  editorPane.addHyperlinkListener(new HyperlinkListener(){
    @Override public void hyperlinkUpdate(    HyperlinkEvent e){
      if (e instanceof FormSubmitEvent) {
        String result=((FormSubmitEvent)e).getData();
        StringDict dict=new StringDict();
        if (result.trim().length() != 0) {
          String[] pairs=result.split("&");
          for (          String pair : pairs) {
            System.out.println("pair is " + pair);
            String[] pieces=pair.split("=");
            String attr=PApplet.urlDecode(pieces[0]);
            String valu=PApplet.urlDecode(pieces[1]);
            dict.set(attr,valu);
          }
        }
        handleSubmit(dict);
      }
 else       if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
        handleLink(e.getURL().toExternalForm());
      }
    }
  }
);
}
