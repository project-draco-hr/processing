{
  Sketch sketch=editor.getSketch();
  boolean success=false;
  try {
    success=sketch.save();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  if (!success) {
    Base.showWarning("Couldn't archive sketch","Archiving the sketch has been canceled because\n" + "the sketch couldn't save properly.",null);
    return;
  }
  File location=sketch.getFolder();
  String name=location.getName();
  File parent=new File(location.getParent());
  File newbie=null;
  String namely=null;
  int index=0;
  do {
    useDate=!name.startsWith("sketch_");
    if (useDate) {
      String purty=dateFormat.format(new Date());
      String stamp=purty + ((char)('a' + index));
      namely=name + "-" + stamp;
      newbie=new File(parent,namely + ".zip");
    }
 else {
      String diggie=numberFormat.format(index + 1);
      namely=name + "-" + diggie;
      newbie=new File(parent,namely + ".zip");
    }
    index++;
  }
 while (newbie.exists());
  FileDialog fd=new FileDialog(editor,"Archive sketch as:",FileDialog.SAVE);
  fd.setDirectory(parent.getAbsolutePath());
  fd.setFile(newbie.getName());
  fd.setVisible(true);
  String directory=fd.getDirectory();
  String filename=fd.getFile();
  if (filename != null) {
    newbie=new File(directory,filename);
    try {
      FileOutputStream zipOutputFile=new FileOutputStream(newbie);
      ZipOutputStream zos=new ZipOutputStream(zipOutputFile);
      buildZip(location,name,zos);
      zos.flush();
      zos.close();
      editor.statusNotice("Created archive " + newbie.getName() + ".");
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
  }
 else {
    editor.statusNotice("Archive sketch canceled.");
  }
}
