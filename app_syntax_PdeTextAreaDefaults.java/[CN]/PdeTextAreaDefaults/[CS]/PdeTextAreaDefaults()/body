{
  inputHandler=new DefaultInputHandler();
  String mod=Base.isMacOS() ? "A" : "C";
  inputHandler.addKeyBinding("BACK_SPACE",InputHandler.BACKSPACE);
  inputHandler.addKeyBinding("DELETE",InputHandler.DELETE);
  inputHandler.addKeyBinding("S+BACK_SPACE",InputHandler.DELETE);
  inputHandler.addKeyBinding("S+DELETE",InputHandler.DELETE);
  inputHandler.addKeyBinding(mod + "+BACK_SPACE",InputHandler.BACKSPACE_WORD);
  inputHandler.addKeyBinding(mod + "+DELETE",InputHandler.DELETE_WORD);
  inputHandler.addKeyBinding("INSERT",InputHandler.OVERWRITE);
  inputHandler.addKeyBinding("HOME",InputHandler.DOCUMENT_HOME);
  inputHandler.addKeyBinding("END",InputHandler.DOCUMENT_END);
  inputHandler.addKeyBinding("S+HOME",InputHandler.SELECT_DOC_HOME);
  inputHandler.addKeyBinding("S+END",InputHandler.SELECT_DOC_END);
  if (Base.isMacOS()) {
    inputHandler.addKeyBinding("M+LEFT",InputHandler.HOME);
    inputHandler.addKeyBinding("M+RIGHT",InputHandler.END);
    inputHandler.addKeyBinding("MS+LEFT",InputHandler.SELECT_HOME);
    inputHandler.addKeyBinding("MS+RIGHT",InputHandler.SELECT_END);
  }
 else {
    inputHandler.addKeyBinding("C+LEFT",InputHandler.HOME);
    inputHandler.addKeyBinding("C+RIGHT",InputHandler.END);
    inputHandler.addKeyBinding("CS+HOME",InputHandler.SELECT_HOME);
    inputHandler.addKeyBinding("CS+END",InputHandler.SELECT_END);
  }
  inputHandler.addKeyBinding("PAGE_UP",InputHandler.PREV_PAGE);
  inputHandler.addKeyBinding("PAGE_DOWN",InputHandler.NEXT_PAGE);
  inputHandler.addKeyBinding("S+PAGE_UP",InputHandler.SELECT_PREV_PAGE);
  inputHandler.addKeyBinding("S+PAGE_DOWN",InputHandler.SELECT_NEXT_PAGE);
  inputHandler.addKeyBinding("LEFT",InputHandler.PREV_CHAR);
  inputHandler.addKeyBinding("S+LEFT",InputHandler.SELECT_PREV_CHAR);
  inputHandler.addKeyBinding(mod + "+LEFT",InputHandler.PREV_WORD);
  inputHandler.addKeyBinding(mod + "S+LEFT",InputHandler.SELECT_PREV_WORD);
  inputHandler.addKeyBinding("RIGHT",InputHandler.NEXT_CHAR);
  inputHandler.addKeyBinding("S+RIGHT",InputHandler.SELECT_NEXT_CHAR);
  inputHandler.addKeyBinding(mod + "+RIGHT",InputHandler.NEXT_WORD);
  inputHandler.addKeyBinding(mod + "S+RIGHT",InputHandler.SELECT_NEXT_WORD);
  inputHandler.addKeyBinding("UP",InputHandler.PREV_LINE);
  inputHandler.addKeyBinding(mod + "+UP",InputHandler.PREV_LINE);
  inputHandler.addKeyBinding("S+UP",InputHandler.SELECT_PREV_LINE);
  inputHandler.addKeyBinding("DOWN",InputHandler.NEXT_LINE);
  inputHandler.addKeyBinding(mod + "+DOWN",InputHandler.NEXT_LINE);
  inputHandler.addKeyBinding("S+DOWN",InputHandler.SELECT_NEXT_LINE);
  inputHandler.addKeyBinding("MS+UP",InputHandler.SELECT_DOC_HOME);
  inputHandler.addKeyBinding("CS+UP",InputHandler.SELECT_DOC_HOME);
  inputHandler.addKeyBinding("MS+DOWN",InputHandler.SELECT_DOC_END);
  inputHandler.addKeyBinding("CS+DOWN",InputHandler.SELECT_DOC_END);
  inputHandler.addKeyBinding(mod + "+ENTER",InputHandler.REPEAT);
  document=new SyntaxDocument();
  editable=true;
  electricScroll=3;
  cols=80;
  rows=15;
  styles=new SyntaxStyle[Token.ID_COUNT];
  styles[Token.COMMENT1]=Preferences.getStyle("comment1");
  styles[Token.COMMENT2]=Preferences.getStyle("comment2");
  styles[Token.KEYWORD1]=Preferences.getStyle("keyword1");
  styles[Token.KEYWORD2]=Preferences.getStyle("keyword2");
  styles[Token.KEYWORD3]=Preferences.getStyle("keyword3");
  styles[Token.LITERAL1]=Preferences.getStyle("literal1");
  styles[Token.LITERAL2]=Preferences.getStyle("literal2");
  styles[Token.LABEL]=Preferences.getStyle("label");
  styles[Token.OPERATOR]=Preferences.getStyle("operator");
  styles[Token.INVALID]=Preferences.getStyle("invalid");
  font=Preferences.getFont("editor.font");
  fgcolor=Preferences.getColor("editor.fgcolor");
  bgcolor=Preferences.getColor("editor.bgcolor");
  caretVisible=true;
  caretBlinks=Preferences.getBoolean("editor.caret.blink");
  caretColor=Preferences.getColor("editor.caret.color");
  selectionColor=Preferences.getColor("editor.selection.color");
  lineHighlight=Preferences.getBoolean("editor.linehighlight");
  lineHighlightColor=Preferences.getColor("editor.linehighlight.color");
  bracketHighlight=Preferences.getBoolean("editor.brackethighlight");
  bracketHighlightColor=Preferences.getColor("editor.brackethighlight.color");
  eolMarkers=Preferences.getBoolean("editor.eolmarkers");
  eolMarkerColor=Preferences.getColor("editor.eolmarkers.color");
  paintInvalid=Preferences.getBoolean("editor.invalid");
}
