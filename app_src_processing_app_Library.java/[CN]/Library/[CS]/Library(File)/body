{
  this.folder=folder;
  libraryFolder=new File(folder,"library");
  examplesFolder=new File(folder,"examples");
  referenceFile=new File(folder,"reference/index.html");
  File exportSettings=new File(libraryFolder,"export.txt");
  HashMap<String,String> exportTable=Base.readSettings(exportSettings);
  name=exportTable.get("name");
  if (name == null) {
    name=folder.getName();
  }
  exportList=new HashMap<String,String[]>();
  String[] baseList=libraryFolder.list(standardFilter);
  System.out.println("Loading " + name + "...");
  String appletExportStr=exportTable.get("applet");
  if (appletExportStr != null) {
    appletExportList=PApplet.splitTokens(appletExportStr,", ");
  }
 else {
    appletExportList=baseList;
  }
  File nativeLibraryFolder=libraryFolder;
  String hostPlatform=Base.getPlatformName();
  File hostLibrary=new File(libraryFolder,hostPlatform);
  if (hostLibrary.exists()) {
    nativeLibraryFolder=hostLibrary;
  }
  hostLibrary=new File(libraryFolder,hostPlatform + nativeBits);
  if (hostLibrary.exists()) {
    nativeLibraryFolder=hostLibrary;
  }
  nativeLibraryPath=nativeLibraryFolder.getAbsolutePath();
  for (int i=1; i < platformNames.length; i++) {
    String platformName=platformNames[i];
    String platformName32=platformName + "32";
    String platformName64=platformName + "64";
    String platformAll=exportTable.get("application." + platformName);
    String[] platformList=platformAll == null ? null : PApplet.splitTokens(platformAll,", ");
    String platform32=exportTable.get("application." + platformName + "32");
    String[] platformList32=platform32 == null ? null : PApplet.splitTokens(platform32,", ");
    String platform64=exportTable.get("application." + platformName + "64");
    String[] platformList64=platform64 == null ? null : PApplet.splitTokens(platform64,", ");
    if (platformAll == null) {
      File folderAll=new File(libraryFolder,platformName);
      if (folderAll.exists()) {
        platformList=PApplet.concat(baseList,folderAll.list(standardFilter));
      }
    }
    if (platform32 == null) {
      File folder32=new File(libraryFolder,platformName32);
      if (folder32.exists()) {
        platformList32=PApplet.concat(baseList,folder32.list(standardFilter));
      }
    }
    if (platform64 == null) {
      File folder64=new File(libraryFolder,platformName64);
      if (folder64.exists()) {
        platformList64=PApplet.concat(baseList,folder64.list(standardFilter));
      }
    }
    if (platformList32 != null || platformList64 != null) {
      multipleArch[i]=true;
    }
    if (platformList == null && platformList32 == null && platformList64 == null) {
      exportList.put(platformName,baseList);
    }
 else {
      if (platformList != null) {
        exportList.put(platformName,platformList);
      }
      if (platformList32 != null) {
        exportList.put(platformName32,platformList32);
      }
      if (platformList64 != null) {
        exportList.put(platformName64,platformList64);
      }
    }
  }
  packageList=Base.packageListFromClassPath(getClassPath());
}
