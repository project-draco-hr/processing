{
  this.folder=folder;
  this.group=subfolder;
  libraryFolder=new File(folder,"library");
  examplesFolder=new File(folder,"examples");
  referenceFile=new File(folder,"reference/index.html");
  File exportSettings=new File(libraryFolder,"export.txt");
  HashMap<String,String> exportTable=Base.readSettings(exportSettings);
  info=new LibraryInfo();
  info.category="Unknown";
  info.installed=true;
  info.name=exportTable.get("name");
  if (info.name == null) {
    info.name=folder.getName();
  }
  String authors=exportTable.get("authorList");
  info.authorList=new ArrayList<Author>();
  if (authors != null) {
    String[] authorNames=authors.split(";");
    for (    String authorName : authorNames) {
      Author author=new Author();
      author.name=authorName.trim();
      info.authorList.add(author);
    }
  }
  info.url=exportTable.get("url");
  info.sentence=exportTable.get("sentence");
  info.paragraph=exportTable.get("paragraph");
  try {
    info.version=Integer.parseInt(exportTable.get("version"));
  }
 catch (  NumberFormatException e) {
  }
  info.prettyVersion=exportTable.get("prettyVersion");
  exportList=new HashMap<String,String[]>();
  String[] baseList=libraryFolder.list(standardFilter);
  String appletExportStr=exportTable.get("applet");
  if (appletExportStr != null) {
    appletExportList=PApplet.splitTokens(appletExportStr,", ");
  }
 else {
    appletExportList=baseList;
  }
  File nativeLibraryFolder=libraryFolder;
  String hostPlatform=Base.getPlatformName();
  File hostLibrary=new File(libraryFolder,hostPlatform);
  if (hostLibrary.exists()) {
    nativeLibraryFolder=hostLibrary;
  }
  hostLibrary=new File(libraryFolder,hostPlatform + nativeBits);
  if (hostLibrary.exists()) {
    nativeLibraryFolder=hostLibrary;
  }
  nativeLibraryPath=nativeLibraryFolder.getAbsolutePath();
  for (int i=1; i < platformNames.length; i++) {
    String platformName=platformNames[i];
    String platformName32=platformName + "32";
    String platformName64=platformName + "64";
    String platformAll=exportTable.get("application." + platformName);
    String[] platformList=platformAll == null ? null : PApplet.splitTokens(platformAll,", ");
    String platform32=exportTable.get("application." + platformName + "32");
    String[] platformList32=platform32 == null ? null : PApplet.splitTokens(platform32,", ");
    String platform64=exportTable.get("application." + platformName + "64");
    String[] platformList64=platform64 == null ? null : PApplet.splitTokens(platform64,", ");
    if (platformAll == null) {
      platformList=listPlatformEntries(libraryFolder,platformName,baseList);
    }
    if (platform32 == null) {
      platformList32=listPlatformEntries(libraryFolder,platformName32,baseList);
    }
    if (platform64 == null) {
      platformList64=listPlatformEntries(libraryFolder,platformName64,baseList);
    }
    if (platformList32 != null || platformList64 != null) {
      multipleArch[i]=true;
    }
    if (platformList == null && platformList32 == null && platformList64 == null) {
      exportList.put(platformName,baseList);
    }
 else {
      if (platformList != null) {
        exportList.put(platformName,platformList);
      }
      if (platformList32 != null) {
        exportList.put(platformName32,platformList32);
      }
      if (platformList64 != null) {
        exportList.put(platformName64,platformList64);
      }
    }
  }
  packageList=Base.packageListFromClassPath(getClassPath());
  System.gc();
}
