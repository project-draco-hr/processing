{
  for (int i=0; i < topPent.length; i++) {
    beginShape();
    if (i < topPent.length - 1) {
      vertex(x + topPent[i].x,y + topPent[i].y,z + topPent[i].z);
      vertex(x + topPoint.x,y + topPoint.y,z + topPoint.z);
      vertex(x + topPent[i + 1].x,y + topPent[i + 1].y,z + topPent[i + 1].z);
    }
 else {
      vertex(x + topPent[i].x,y + topPent[i].y,z + topPent[i].z);
      vertex(x + topPoint.x,y + topPoint.y,z + topPoint.z);
      vertex(x + topPent[0].x,y + topPent[0].y,z + topPent[0].z);
    }
    endShape(CLOSE);
    beginShape();
    if (i < bottomPent.length - 1) {
      vertex(x + bottomPent[i].x,y + bottomPent[i].y,z + bottomPent[i].z);
      vertex(x + bottomPoint.x,y + bottomPoint.y,z + bottomPoint.z);
      vertex(x + bottomPent[i + 1].x,y + bottomPent[i + 1].y,z + bottomPent[i + 1].z);
    }
 else {
      vertex(x + bottomPent[i].x,y + bottomPent[i].y,z + bottomPent[i].z);
      vertex(x + bottomPoint.x,y + bottomPoint.y,z + bottomPoint.z);
      vertex(x + bottomPent[0].x,y + bottomPent[0].y,z + bottomPent[0].z);
    }
    endShape(CLOSE);
  }
  for (int i=0; i < topPent.length; i++) {
    if (i < topPent.length - 2) {
      beginShape();
      vertex(x + topPent[i].x,y + topPent[i].y,z + topPent[i].z);
      vertex(x + bottomPent[i + 1].x,y + bottomPent[i + 1].y,z + bottomPent[i + 1].z);
      vertex(x + bottomPent[i + 2].x,y + bottomPent[i + 2].y,z + bottomPent[i + 2].z);
      endShape(CLOSE);
      beginShape();
      vertex(x + bottomPent[i + 2].x,y + bottomPent[i + 2].y,z + bottomPent[i + 2].z);
      vertex(x + topPent[i].x,y + topPent[i].y,z + topPent[i].z);
      vertex(x + topPent[i + 1].x,y + topPent[i + 1].y,z + topPent[i + 1].z);
      endShape(CLOSE);
    }
 else     if (i == topPent.length - 2) {
      beginShape();
      vertex(x + topPent[i].x,y + topPent[i].y,z + topPent[i].z);
      vertex(x + bottomPent[i + 1].x,y + bottomPent[i + 1].y,z + bottomPent[i + 1].z);
      vertex(x + bottomPent[0].x,y + bottomPent[0].y,z + bottomPent[0].z);
      endShape(CLOSE);
      beginShape();
      vertex(x + bottomPent[0].x,y + bottomPent[0].y,z + bottomPent[0].z);
      vertex(x + topPent[i].x,y + topPent[i].y,z + topPent[i].z);
      vertex(x + topPent[i + 1].x,y + topPent[i + 1].y,z + topPent[i + 1].z);
      endShape(CLOSE);
    }
 else     if (i == topPent.length - 1) {
      beginShape();
      vertex(x + topPent[i].x,y + topPent[i].y,z + topPent[i].z);
      vertex(x + bottomPent[0].x,y + bottomPent[0].y,z + bottomPent[0].z);
      vertex(x + bottomPent[1].x,y + bottomPent[1].y,z + bottomPent[1].z);
      endShape(CLOSE);
      beginShape();
      vertex(x + bottomPent[1].x,y + bottomPent[1].y,z + bottomPent[1].z);
      vertex(x + topPent[i].x,y + topPent[i].y,z + topPent[i].z);
      vertex(x + topPent[0].x,y + topPent[0].y,z + topPent[0].z);
      endShape(CLOSE);
    }
  }
}
