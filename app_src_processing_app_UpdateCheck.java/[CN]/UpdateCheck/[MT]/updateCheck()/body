{
  Random r=new Random();
  long id=r.nextLong();
  String idString=Preferences.get("update.id");
  if (idString != null) {
    id=Long.parseLong(idString);
  }
 else {
    Preferences.set("update.id",String.valueOf(id));
  }
  String info=PApplet.urlEncode(id + "\t" + PApplet.nf(Base.getRevision(),4)+ "\t"+ System.getProperty("java.version")+ "\t"+ System.getProperty("java.vendor")+ "\t"+ System.getProperty("os.name")+ "\t"+ System.getProperty("os.version")+ "\t"+ System.getProperty("os.arch"));
  int latest=readInt(downloadURL + "?" + info);
  String lastString=Preferences.get("update.last");
  long now=System.currentTimeMillis();
  if (lastString != null) {
    long when=Long.parseLong(lastString);
    if (now - when < ONE_DAY) {
      return;
    }
  }
  Preferences.set("update.last",String.valueOf(now));
  if (base.activeEditor != null) {
    boolean offerToUpdateContributions=true;
    if (latest > Base.getRevision()) {
      System.out.println("You are running Processing revision 0" + Base.getRevision() + ", the latest build is 0"+ latest+ ".");
      offerToUpdateContributions=!promptToVisitDownloadPage();
    }
    if (offerToUpdateContributions) {
      Thread.sleep(5 * 1000);
      if ((!base.libraryManagerFrame.hasAlreadyBeenOpened() && base.libraryManagerFrame.hasUpdates()) || (!base.toolManagerFrame.hasAlreadyBeenOpened() && base.toolManagerFrame.hasUpdates()) || (!base.modeManagerFrame.hasAlreadyBeenOpened() && base.modeManagerFrame.hasUpdates())) {
        promptToOpenContributionManager();
      }
    }
  }
}
