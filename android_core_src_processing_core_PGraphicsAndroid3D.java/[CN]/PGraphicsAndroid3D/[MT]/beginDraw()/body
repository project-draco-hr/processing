{
  if (!settingsInited)   defaultSettings();
  resetMatrix();
  report("top beginDraw()");
  vertexBuffer.rewind();
  colorBuffer.rewind();
  textureBuffer.rewind();
  normalBuffer.rewind();
  textureImage=null;
  textureImagePrev=null;
  gl.glEnable(GL10.GL_BLEND);
  gl.glBlendFunc(GL10.GL_SRC_ALPHA,GL10.GL_ONE_MINUS_SRC_ALPHA);
  if (hints[DISABLE_DEPTH_TEST]) {
    gl.glDisable(GL10.GL_DEPTH_TEST);
  }
 else {
    gl.glEnable(GL10.GL_DEPTH_TEST);
  }
  gl.glDepthFunc(GL10.GL_LEQUAL);
  gl.glFrontFace(GL10.GL_CW);
  gl.glViewport(0,0,width,height);
  camera();
  perspective();
  lightCount=0;
  lightFalloff(1,0,0);
  lightSpecular(0,0,0);
  gl.glEnable(GL10.GL_COLOR_MATERIAL);
  gl.glEnable(GL10.GL_NORMALIZE);
  gl.glEnable(GL10.GL_RESCALE_NORMAL);
  shapeFirst=0;
  boolean fill0=fill;
  float fillR0=fillR;
  float fillG0=fillG;
  float fillB0=fillB;
  float fillA0=fillA;
  int fillRi0=fillRi;
  int fillGi0=fillGi;
  int fillBi0=fillBi;
  int fillAi0=fillAi;
  int fillColor0=fillColor;
  boolean fillAlpha0=fillAlpha;
  fill(0,0);
  rect(0,0,width,height);
  fill=fill0;
  fillR=fillR0;
  fillG=fillG0;
  fillB=fillB0;
  fillA=fillA0;
  fillRi=fillRi0;
  fillGi=fillGi0;
  fillBi=fillBi0;
  fillAi=fillAi0;
  fillColor=fillColor0;
  fillAlpha=fillAlpha0;
  gl.glClearColor(0,0,0,0);
  gl.glClear(GL10.GL_DEPTH_BUFFER_BIT);
  report("bot beginDraw()");
}
