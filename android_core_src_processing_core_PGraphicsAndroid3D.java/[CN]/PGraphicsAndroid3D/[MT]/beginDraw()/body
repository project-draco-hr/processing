{
  if (!primarySurface) {
    a3d.saveGLState();
    gl=a3d.gl;
    gl11=a3d.gl11;
    gl11x=a3d.gl11x;
    gl11xp=a3d.gl11xp;
    a3d.disableLights();
  }
  if (!settingsInited) {
    defaultSettings();
  }
  report("top beginDraw()");
  vertexBuffer.rewind();
  colorBuffer.rewind();
  normalBuffer.rewind();
  for (int t=0; t < numTexBuffers; t++) {
    texCoordBuffer[t].rewind();
  }
  if (USE_GEO_BUFFER) {
    if (geoBuffer == null)     geoBuffer=new GeometryBuffer();
    if (GEO_BUFFER_ACCUM_ALL) {
      geoBuffer.init(TRIANGLES);
    }
    GEO_BUFFER_COUNT=0;
    GEO_BUFFER_SIZE=0;
  }
  noTexture();
  screenBlend(BLEND);
  textureBlend(BLEND);
  if (hints[DISABLE_DEPTH_TEST]) {
    gl.glDisable(GL10.GL_DEPTH_TEST);
  }
 else {
    gl.glEnable(GL10.GL_DEPTH_TEST);
  }
  gl.glDepthFunc(GL10.GL_LEQUAL);
  if (hints[DISABLE_DEPTH_MASK]) {
    gl.glDepthMask(false);
  }
 else {
    gl.glDepthMask(true);
  }
  gl.glGetIntegerv(GL11.GL_VIEWPORT,viewport,0);
  gl.glViewport(0,0,width,height);
  camera();
  perspective();
  noLights();
  lightFalloff(1,0,0);
  lightSpecular(0,0,0);
  gl.glFrontFace(GL10.GL_CW);
  setSurfaceParams();
  shapeFirst=0;
  normalX=normalY=normalZ=0;
  if (primarySurface) {
    initPrimary();
  }
 else {
    initOffscreen();
  }
  clearColorBuffer0=clearColorBuffer;
  report("bot beginDraw()");
}
