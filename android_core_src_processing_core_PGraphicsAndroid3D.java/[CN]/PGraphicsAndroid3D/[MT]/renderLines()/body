{
  if (!lineVBOsCreated) {
    createLineBuffers();
    lineVBOsCreated=true;
  }
  int size, sizef, sizex;
  startLineShader();
  enableLineVertex();
  enableLineColor();
  enableLineNormal();
  enableLineDirWidth();
  size=tessGeo.lineVertexCount;
  sizef=size * PGL.SIZEOF_FLOAT;
  pgl.glBindBuffer(PGL.GL_ARRAY_BUFFER,glLineVertexBufferID);
  pgl.glBufferData(PGL.GL_ARRAY_BUFFER,3 * sizef,FloatBuffer.wrap(tessGeo.lineVertices,0,3 * size),vboMode);
  setLineVertexFormat(3,0);
  pgl.glBindBuffer(PGL.GL_ARRAY_BUFFER,glLineColorBufferID);
  pgl.glBufferData(PGL.GL_ARRAY_BUFFER,4 * sizef,FloatBuffer.wrap(tessGeo.lineColors,0,4 * size),vboMode);
  setLineColorFormat(4,0);
  pgl.glBindBuffer(PGL.GL_ARRAY_BUFFER,glLineNormalBufferID);
  pgl.glBufferData(PGL.GL_ARRAY_BUFFER,3 * sizef,FloatBuffer.wrap(tessGeo.lineNormals,0,3 * size),vboMode);
  setLineNormalFormat(3,0);
  pgl.glBindBuffer(PGL.GL_ARRAY_BUFFER,glLineAttribBufferID);
  pgl.glBufferData(PGL.GL_ARRAY_BUFFER,4 * sizef,FloatBuffer.wrap(tessGeo.lineAttributes,0,4 * size),vboMode);
  setLineDirWidthFormat(4,0);
  size=tessGeo.lineIndexCount;
  sizex=size * PGL.SIZEOF_INDEX;
  pgl.glBindBuffer(PGL.GL_ELEMENT_ARRAY_BUFFER,glLineIndexBufferID);
  pgl.glBufferData(PGL.GL_ARRAY_BUFFER,sizex,ShortBuffer.wrap(tessGeo.lineIndices,0,size),vboMode);
  pgl.glDrawElements(PGL.GL_TRIANGLES,size,PGL.GL_UNSIGNED_SHORT,0);
  pgl.glBindBuffer(PGL.GL_ELEMENT_ARRAY_BUFFER,0);
  pgl.glBindBuffer(PGL.GL_ARRAY_BUFFER,0);
  disableLineVertex();
  disableLineColor();
  disableLineNormal();
  disableLineDirWidth();
  stopLineShader();
}
