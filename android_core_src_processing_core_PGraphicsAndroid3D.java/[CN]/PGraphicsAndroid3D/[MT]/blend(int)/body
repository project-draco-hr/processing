{
  blend=true;
  blendMode=mode;
  gl.glEnable(GL10.GL_BLEND);
  if (mode == REPLACE) {
    if (gl11xp != null)     gl11xp.glBlendEquation(GL11ExtensionPack.GL_FUNC_ADD);
    gl.glBlendFunc(GL10.GL_ONE,GL10.GL_ZERO);
  }
 else   if (mode == BLEND) {
    if (gl11xp != null)     gl11xp.glBlendEquation(GL11ExtensionPack.GL_FUNC_ADD);
    gl.glBlendFunc(GL10.GL_SRC_ALPHA,GL10.GL_ONE_MINUS_SRC_ALPHA);
  }
 else   if (mode == ADD) {
    if (gl11xp != null)     gl11xp.glBlendEquation(GL11ExtensionPack.GL_FUNC_ADD);
    gl.glBlendFunc(GL10.GL_SRC_ALPHA,GL10.GL_ONE);
  }
 else   if (mode == MULTIPLY) {
    if (gl11xp != null)     gl11xp.glBlendEquation(GL11ExtensionPack.GL_FUNC_ADD);
    gl.glBlendFunc(GL10.GL_DST_COLOR,GL10.GL_SRC_COLOR);
  }
 else   if (mode == SUBTRACT) {
    if (gl11xp != null)     gl11xp.glBlendEquation(GL11ExtensionPack.GL_FUNC_ADD);
    gl.glBlendFunc(GL10.GL_ONE_MINUS_DST_COLOR,GL10.GL_ZERO);
  }
 else   if (mode == DARKEST) {
    if (gl11xp != null) {
      gl11xp.glBlendEquation(GL_MIN_EXT);
      gl.glBlendFunc(GL10.GL_SRC_ALPHA,GL10.GL_DST_ALPHA);
    }
 else {
      PGraphics.showWarning("A3D: This blend mode is currently unsupported.");
    }
  }
 else   if (mode == LIGHTEST) {
    if (gl11xp != null) {
      gl11xp.glBlendEquation(GL_MAX_EXT);
      gl.glBlendFunc(GL10.GL_SRC_ALPHA,GL10.GL_DST_ALPHA);
    }
 else {
      PGraphics.showWarning("A3D: This blend mode is currently unsupported.");
    }
  }
 else   if (mode == DIFFERENCE) {
    if (gl11xp != null) {
      gl11xp.glBlendEquation(GL11ExtensionPack.GL_FUNC_REVERSE_SUBTRACT);
      gl.glBlendFunc(GL10.GL_ONE,GL10.GL_ONE);
    }
 else {
      PGraphics.showWarning("A3D: This blend mode is currently unsupported.");
    }
  }
}
