{
  if (pointShader == null) {
    pointShader=new PShader(parent);
    pointShader.loadVertexShader(PGraphicsAndroid3D.class.getResource("PointShaderVert.glsl"));
    pointShader.loadFragmentShader(PGraphicsAndroid3D.class.getResource("PointShaderFrag.glsl"));
    pointShader.setup();
    pointModelviewLoc=pointShader.getUniformLocation("modelviewMatrix");
    pointProjectionLoc=pointShader.getUniformLocation("projectionMatrix");
    pointVertexAttribLoc=pointShader.getAttribLocation("inVertex");
    pointColorAttribLoc=pointShader.getAttribLocation("inColor");
    pointNormalAttribLoc=pointShader.getAttribLocation("inNormal");
    pointSizeAttribLoc=pointShader.getAttribLocation("inSize");
  }
  pointShader.start();
  pointShader.setMatUniform(pointModelviewLoc,modelview.m00,modelview.m01,modelview.m02,modelview.m03,modelview.m10,modelview.m11,modelview.m12,modelview.m13,modelview.m20,modelview.m21,modelview.m22,modelview.m23,modelview.m30,modelview.m31,modelview.m32,modelview.m33);
  pointShader.setMatUniform(pointProjectionLoc,projection.m00,projection.m01,projection.m02,projection.m03,projection.m10,projection.m11,projection.m12,projection.m13,projection.m20,projection.m21,projection.m22,projection.m23,projection.m30,projection.m31,projection.m32,projection.m33);
}
