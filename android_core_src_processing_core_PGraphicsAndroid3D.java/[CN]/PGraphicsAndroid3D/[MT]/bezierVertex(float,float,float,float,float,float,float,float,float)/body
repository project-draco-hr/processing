{
  bezierInitCheck();
  bezierVertexCheck();
  PMatrix3D draw=bezierDrawMatrix;
  float x1=inGeo.getlastVertexX();
  float y1=inGeo.getlastVertexY();
  float z1=inGeo.getlastVertexZ();
  float xplot1=draw.m10 * x1 + draw.m11 * x2 + draw.m12 * x3 + draw.m13 * x4;
  float xplot2=draw.m20 * x1 + draw.m21 * x2 + draw.m22 * x3 + draw.m23 * x4;
  float xplot3=draw.m30 * x1 + draw.m31 * x2 + draw.m32 * x3 + draw.m33 * x4;
  float yplot1=draw.m10 * y1 + draw.m11 * y2 + draw.m12 * y3 + draw.m13 * y4;
  float yplot2=draw.m20 * y1 + draw.m21 * y2 + draw.m22 * y3 + draw.m23 * y4;
  float yplot3=draw.m30 * y1 + draw.m31 * y2 + draw.m32 * y3 + draw.m33 * y4;
  float zplot1=draw.m10 * z1 + draw.m11 * z2 + draw.m12 * z3 + draw.m13 * z4;
  float zplot2=draw.m20 * z1 + draw.m21 * z2 + draw.m22 * z3 + draw.m23 * z4;
  float zplot3=draw.m30 * z1 + draw.m31 * z2 + draw.m32 * z3 + draw.m33 * z4;
  for (int j=0; j < bezierDetail; j++) {
    x1+=xplot1;
    xplot1+=xplot2;
    xplot2+=xplot3;
    y1+=yplot1;
    yplot1+=yplot2;
    yplot2+=yplot3;
    z1+=zplot1;
    zplot1+=zplot2;
    zplot2+=zplot3;
    vertexImpl(x1,y1,z1,0,0,BEZIER_VERTEX);
  }
}
