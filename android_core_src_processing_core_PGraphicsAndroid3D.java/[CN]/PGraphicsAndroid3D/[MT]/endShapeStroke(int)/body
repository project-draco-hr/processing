{
switch (shape) {
case POINTS:
{
      int stop=shapeLast;
      for (int i=shapeFirst; i < stop; i++) {
        addPoint(i);
      }
    }
  break;
case LINES:
{
  int first=lineCount;
  int stop=shapeLast - 1;
  if (shape != LINES)   addLineBreak();
  for (int i=shapeFirst; i < stop; i+=2) {
    if (shape == LINES)     addLineBreak();
    addLine(i,i + 1);
  }
  if (mode == CLOSE) {
    addLine(stop,lines[first][VERTEX1]);
  }
}
break;
case TRIANGLES:
{
for (int i=shapeFirst; i < shapeLast - 2; i+=3) {
addLineBreak();
addLine(i + 0,i + 1);
addLine(i + 1,i + 2);
addLine(i + 2,i + 0);
}
}
break;
case TRIANGLE_STRIP:
{
int stop=shapeLast - 1;
addLineBreak();
for (int i=shapeFirst; i < stop; i++) {
addLine(i,i + 1);
}
stop=shapeLast - 2;
for (int i=shapeFirst; i < stop; i++) {
addLineBreak();
addLine(i,i + 2);
}
}
break;
case TRIANGLE_FAN:
{
for (int i=shapeFirst + 1; i < shapeLast; i++) {
addLineBreak();
addLine(shapeFirst,i);
}
addLineBreak();
for (int i=shapeFirst + 1; i < shapeLast - 1; i++) {
addLine(i,i + 1);
}
addLine(shapeLast - 1,shapeFirst + 1);
}
break;
case QUADS:
{
for (int i=shapeFirst; i < shapeLast; i+=4) {
addLineBreak();
addLine(i + 0,i + 1);
addLine(i + 1,i + 2);
addLine(i + 2,i + 3);
addLine(i + 3,i + 0);
}
}
break;
case QUAD_STRIP:
{
for (int i=shapeFirst; i < shapeLast - 3; i+=2) {
addLineBreak();
addLine(i + 0,i + 2);
addLine(i + 2,i + 3);
addLine(i + 3,i + 1);
addLine(i + 1,i + 0);
}
}
break;
case POLYGON:
{
int stop=shapeLast - 1;
addLineBreak();
for (int i=shapeFirst; i < stop; i++) {
addLine(i,i + 1);
}
if (mode == CLOSE) {
addLine(stop,shapeFirst);
}
}
break;
}
}
