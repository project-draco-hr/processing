{
  recordingShape=true;
  if (recordedVertices == null) {
    recordedVertices=new ArrayList<PVector>(vertexBuffer.capacity() / 3);
  }
 else {
    recordedVertices.ensureCapacity(vertexBuffer.capacity() / 3);
  }
  if (recordedColors == null) {
    recordedColors=new ArrayList<float[]>(colorBuffer.capacity() / 4);
  }
 else {
    recordedColors.ensureCapacity(colorBuffer.capacity() / 4);
  }
  if (recordedNormals == null) {
    recordedNormals=new ArrayList<PVector>(normalBuffer.capacity() / 3);
  }
 else {
    recordedNormals.ensureCapacity(normalBuffer.capacity() / 3);
  }
  int size=texCoordBuffer[0].capacity() / 2;
  if (recordedTexCoords == null) {
    recordedTexCoords=new ArrayList[MAX_TEXTURES];
    for (int t=0; t < maxTextureUnits; t++) {
      recordedTexCoords[t]=new ArrayList<PVector>(size);
    }
  }
 else {
    for (int t=0; t < maxTextureUnits; t++) {
      recordedTexCoords[t].ensureCapacity(size);
    }
  }
  numRecordedTextures=0;
  recordedGroups=new ArrayList<VertexGroup>(PApplet.max(DEFAULT_PATHS,DEFAULT_FACES));
}
