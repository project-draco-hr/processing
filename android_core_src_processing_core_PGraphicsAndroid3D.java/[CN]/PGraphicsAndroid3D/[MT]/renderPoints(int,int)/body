{
  gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);
  gl.glEnableClientState(GL10.GL_COLOR_ARRAY);
  if (vertexBuffer.capacity() == stop - start) {
    expandBuffers();
  }
  vertexBuffer.rewind();
  colorBuffer.rewind();
  float sw=vertices[lines[start][VERTEX1]][SW];
  if (sw > 0) {
    gl.glPointSize(sw);
    for (int i=start; i < stop; i++) {
      float[] a=vertices[points[i][VERTEX1]];
      colorBuffer.put(toFixed16(a[SR]));
      colorBuffer.put(toFixed16(a[SG]));
      colorBuffer.put(toFixed16(a[SB]));
      colorBuffer.put(toFixed16(a[SA]));
      vertexBuffer.put(toFixed32(a[VX]));
      vertexBuffer.put(toFixed32(a[VY]));
      vertexBuffer.put(toFixed32(a[VZ]));
    }
    gl.glVertexPointer(3,GL10.GL_FIXED,0,vertexBuffer);
    gl.glColorPointer(4,GL10.GL_FIXED,0,colorBuffer);
    gl.glDrawArrays(GL10.GL_POINTS,start,stop - start);
  }
  gl.glDisableClientState(GL10.GL_VERTEX_ARRAY);
  gl.glDisableClientState(GL10.GL_COLOR_ARRAY);
}
