{
  gl.glEnableClientState(GL10.GL_VERTEX_ARRAY);
  gl.glEnableClientState(GL10.GL_COLOR_ARRAY);
  int size=3 * (stop - start);
  while (vertexBuffer.capacity() / 3 < size) {
    expandBuffers();
  }
  float sw=vertices[points[start][VERTEX1]][SW];
  if (sw > 0) {
    gl.glPointSize(sw);
    vertexBuffer.position(0);
    colorBuffer.position(0);
    int n=0;
    for (int i=start; i < stop; i++) {
      float[] a=vertices[points[i][VERTEX1]];
      vertexArray[3 * n + 0]=toFixed32(a[X]);
      vertexArray[3 * n + 1]=toFixed32(a[Y]);
      vertexArray[3 * n + 2]=toFixed32(a[Z]);
      colorArray[4 * n + 0]=toFixed32(a[SR]);
      colorArray[4 * n + 1]=toFixed32(a[SG]);
      colorArray[4 * n + 2]=toFixed32(a[SB]);
      colorArray[4 * n + 3]=toFixed32(a[SA]);
      n++;
    }
    vertexBuffer.put(vertexArray);
    colorBuffer.put(colorArray);
    vertexBuffer.position(0);
    colorBuffer.position(0);
    gl.glVertexPointer(3,GL10.GL_FIXED,0,vertexBuffer);
    gl.glColorPointer(4,GL10.GL_FIXED,0,colorBuffer);
    gl.glDrawArrays(GL10.GL_POINTS,start,stop - start);
  }
  gl.glDisableClientState(GL10.GL_VERTEX_ARRAY);
  gl.glDisableClientState(GL10.GL_COLOR_ARRAY);
}
