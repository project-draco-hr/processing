{
  enableLighting();
  if (lightCount == PGL.MAX_LIGHTS) {
    throw new RuntimeException("can only create " + PGL.MAX_LIGHTS + " lights");
  }
  lightType[lightCount]=SPOT;
  colorCalc(r,g,b);
  lightDiffuse[4 * lightCount + 0]=calcR;
  lightDiffuse[4 * lightCount + 1]=calcG;
  lightDiffuse[4 * lightCount + 2]=calcB;
  lightDiffuse[4 * lightCount + 3]=1.0f;
  lightFalloffConstant[lightCount]=currentLightFalloffConstant;
  lightFalloffLinear[lightCount]=currentLightFalloffLinear;
  lightFalloffQuadratic[lightCount]=currentLightFalloffQuadratic;
  lightSpecular[4 * lightCount + 0]=currentLightSpecular[0];
  lightSpecular[4 * lightCount + 1]=currentLightSpecular[1];
  lightSpecular[4 * lightCount + 2]=currentLightSpecular[2];
  lightSpecular[4 * lightCount + 3]=currentLightSpecular[3];
  lightPosition[4 * lightCount + 0]=x;
  lightPosition[4 * lightCount + 1]=y;
  lightPosition[4 * lightCount + 2]=z;
  lightPosition[4 * lightCount + 3]=1.0f;
  float invn=1.0f / PApplet.dist(0,0,0,nx,ny,nz);
  lightNormal[4 * lightCount + 0]=invn * nx;
  lightNormal[4 * lightCount + 1]=invn * ny;
  lightNormal[4 * lightCount + 2]=invn * nz;
  lightNormal[4 * lightCount + 3]=0.0f;
  lightSpotAngle[lightCount]=PApplet.degrees(angle);
  lightSpotConcentration[lightCount]=concentration;
  lightAmbient[4 * lightCount + 0]=0;
  lightAmbient[4 * lightCount + 1]=0;
  lightAmbient[4 * lightCount + 2]=0;
  lightAmbient[4 * lightCount + 3]=1.0f;
  lightCount++;
}
