{
  super.start();
  pgl.glEnableVertexAttribArray(inVertexLoc);
  pgl.glEnableVertexAttribArray(inColorLoc);
  pgl.glEnableVertexAttribArray(inNormalLoc);
  pgl.glEnableVertexAttribArray(inAmbientLoc);
  pgl.glEnableVertexAttribArray(inSpecularLoc);
  pgl.glEnableVertexAttribArray(inEmissiveLoc);
  pgl.glEnableVertexAttribArray(inShineLoc);
  projmodelview.get(glProjmodelview);
  set4x4MatUniform(projmodelviewMatrixLoc,glProjmodelview);
  modelview.get(glModelview);
  set4x4MatUniform(modelviewMatrixLoc,glModelview);
  glNormal[0]=modelviewInv.m00;
  glNormal[1]=modelviewInv.m10;
  glNormal[2]=modelviewInv.m20;
  glNormal[3]=modelviewInv.m01;
  glNormal[4]=modelviewInv.m11;
  glNormal[5]=modelviewInv.m21;
  glNormal[6]=modelviewInv.m02;
  glNormal[7]=modelviewInv.m12;
  glNormal[8]=modelviewInv.m22;
  set3x3MatUniform(inNormalLoc,glNormal);
  setIntUniform(lightCountLoc,lightCount);
  set4FloatVecUniform(lightPositionLoc,lightPosition);
  set3FloatVecUniform(lightNormalLoc,lightNormal);
  set4FloatVecUniform(lightAmbientLoc,lightAmbient);
  set4FloatVecUniform(lightDiffuseLoc,lightDiffuse);
  set4FloatVecUniform(lightSpecularLoc,lightSpecular);
  set1FloatVecUniform(lightFalloffConstantLoc,lightFalloffConstant);
  set1FloatVecUniform(lightFalloffLinearLoc,lightFalloffLinear);
  set1FloatVecUniform(lightFalloffQuadraticLoc,lightFalloffQuadratic);
  set1FloatVecUniform(lightSpotAngleCosLoc,lightSpotAngleCos);
  set1FloatVecUniform(lightSpotConcentrationLoc,lightSpotConcentration);
}
