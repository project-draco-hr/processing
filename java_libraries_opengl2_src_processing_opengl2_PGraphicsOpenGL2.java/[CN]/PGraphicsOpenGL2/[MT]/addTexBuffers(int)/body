{
  int size=texCoordBuffer[numTexBuffers - 1].capacity();
  for (int i=0; i < more; i++) {
    ByteBuffer tbb=ByteBuffer.allocateDirect(size * SIZEOF_FLOAT);
    tbb.order(ByteOrder.nativeOrder());
    texCoordBuffer[numTexBuffers + i]=tbb.asFloatBuffer();
  }
  texCoordArray=new float[numTexBuffers + more][size];
  size=vertexTex.length;
  float tempu[][]=new float[size][numTexBuffers + more];
  float tempv[][]=new float[size][numTexBuffers + more];
  PImage tempi[][]=new PImage[size][numTexBuffers + more];
  for (int i=0; i < size; i++) {
    PApplet.arrayCopy(vertexU[i],0,tempu[i],0,numTexBuffers);
    PApplet.arrayCopy(vertexV[i],0,tempv[i],0,numTexBuffers);
    PApplet.arrayCopy(vertexTex[i],0,tempi[i],0,numTexBuffers);
  }
  vertexU=tempu;
  vertexV=tempv;
  vertexTex=tempi;
  numTexBuffers+=more;
}
