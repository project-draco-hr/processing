{
  if (2 < num) {
    PGraphics.showWarning("OPENGL2: multitexture blending currently supports only two textures.");
    return;
  }
  if (!texenvCrossbarSupported) {
    PGraphics.showWarning("OPENGL2: Texture environment crossbar not supported, so the textures won't be affected by tint or light.");
    if (texBlendMode == REPLACE) {
      gl2f.glActiveTexture(GL2.GL_TEXTURE0);
      gl2f.glBindTexture(textures[0].getGLTarget(),textures[0].getGLID());
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_REPLACE);
      gl2f.glActiveTexture(GL2.GL_TEXTURE1);
      gl2f.glBindTexture(textures[1].getGLTarget(),textures[1].getGLID());
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_REPLACE);
    }
 else     if (texBlendMode == BLEND) {
      gl2f.glActiveTexture(GL2.GL_TEXTURE0);
      gl2f.glBindTexture(textures[0].getGLTarget(),textures[0].getGLID());
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_REPLACE);
      gl2f.glActiveTexture(GL2.GL_TEXTURE1);
      gl2f.glBindTexture(textures[1].getGLTarget(),textures[1].getGLID());
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_COMBINE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_RGB,GL2.GL_INTERPOLATE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_RGB,GL2.GL_PREVIOUS);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_RGB,GL2.GL_TEXTURE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC2_RGB,GL2.GL_TEXTURE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND2_RGB,GL2.GL_ONE_MINUS_SRC_ALPHA);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_ALPHA,GL2.GL_INTERPOLATE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_ALPHA,GL2.GL_PREVIOUS);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_ALPHA,GL2.GL_TEXTURE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC2_ALPHA,GL2.GL_TEXTURE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_ALPHA,GL2.GL_SRC_ALPHA);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_ALPHA,GL2.GL_SRC_ALPHA);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND2_ALPHA,GL2.GL_ONE_MINUS_SRC_ALPHA);
    }
 else     if (texBlendMode == MULTIPLY) {
      gl2f.glActiveTexture(GL2.GL_TEXTURE0);
      gl2f.glBindTexture(textures[0].getGLTarget(),textures[0].getGLID());
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_REPLACE);
      gl2f.glActiveTexture(GL2.GL_TEXTURE1);
      gl2f.glBindTexture(textures[1].getGLTarget(),textures[1].getGLID());
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_COMBINE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_RGB,GL2.GL_MODULATE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_RGB,GL2.GL_PREVIOUS);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_RGB,GL2.GL_TEXTURE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_ALPHA,GL2.GL_MODULATE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_ALPHA,GL2.GL_PREVIOUS);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_ALPHA,GL2.GL_TEXTURE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_ALPHA,GL2.GL_SRC_ALPHA);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_ALPHA,GL2.GL_SRC_ALPHA);
    }
 else     if (texBlendMode == ADD) {
      gl2f.glActiveTexture(GL2.GL_TEXTURE0);
      gl2f.glBindTexture(textures[0].getGLTarget(),textures[0].getGLID());
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_REPLACE);
      gl2f.glActiveTexture(GL2.GL_TEXTURE1);
      gl2f.glBindTexture(textures[1].getGLTarget(),textures[1].getGLID());
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_COMBINE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_RGB,GL2.GL_ADD);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_RGB,GL2.GL_PREVIOUS);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_RGB,GL2.GL_TEXTURE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_ALPHA,GL2.GL_ADD);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_ALPHA,GL2.GL_PREVIOUS);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_ALPHA,GL2.GL_TEXTURE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_ALPHA,GL2.GL_SRC_ALPHA);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_ALPHA,GL2.GL_SRC_ALPHA);
    }
 else     if (texBlendMode == SUBTRACT) {
      gl2f.glActiveTexture(GL2.GL_TEXTURE0);
      gl2f.glBindTexture(textures[0].getGLTarget(),textures[0].getGLID());
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_REPLACE);
      gl2f.glActiveTexture(GL2.GL_TEXTURE1);
      gl2f.glBindTexture(textures[1].getGLTarget(),textures[1].getGLID());
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_COMBINE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_RGB,GL2.GL_SUBTRACT);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_RGB,GL2.GL_PREVIOUS);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_RGB,GL2.GL_TEXTURE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_ALPHA,GL2.GL_ADD);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_ALPHA,GL2.GL_PREVIOUS);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_ALPHA,GL2.GL_TEXTURE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_ALPHA,GL2.GL_SRC_ALPHA);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_ALPHA,GL2.GL_SRC_ALPHA);
    }
 else {
      PGraphics.showWarning("OPENGL2: This blend mode is currently unsupported in multitexture mode.");
    }
  }
 else {
    if (texBlendMode == REPLACE) {
      gl2f.glActiveTexture(GL2.GL_TEXTURE0);
      gl2f.glBindTexture(textures[0].getGLTarget(),textures[0].getGLID());
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_COMBINE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_RGB,GL2.GL_REPLACE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_RGB,GL2.GL_TEXTURE1);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_ALPHA,GL2.GL_REPLACE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_ALPHA,GL2.GL_TEXTURE1);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_ALPHA,GL2.GL_SRC_ALPHA);
      modulateWithPrimaryColor(1,textures[1]);
    }
 else     if (texBlendMode == BLEND) {
      gl2f.glActiveTexture(GL2.GL_TEXTURE0);
      gl2f.glBindTexture(textures[0].getGLTarget(),textures[0].getGLID());
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_COMBINE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_RGB,GL2.GL_INTERPOLATE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_RGB,GL2.GL_TEXTURE0);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_RGB,GL2.GL_TEXTURE1);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC2_RGB,GL2.GL_TEXTURE1);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND2_RGB,GL2.GL_ONE_MINUS_SRC_ALPHA);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_ALPHA,GL2.GL_INTERPOLATE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_ALPHA,GL2.GL_TEXTURE0);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_ALPHA,GL2.GL_TEXTURE1);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC2_ALPHA,GL2.GL_TEXTURE1);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_ALPHA,GL2.GL_SRC_ALPHA);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_ALPHA,GL2.GL_SRC_ALPHA);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND2_ALPHA,GL2.GL_ONE_MINUS_SRC_ALPHA);
      modulateWithPrimaryColor(1,textures[1]);
    }
 else     if (texBlendMode == MULTIPLY) {
      gl2f.glActiveTexture(GL2.GL_TEXTURE0);
      gl2f.glBindTexture(textures[0].getGLTarget(),textures[0].getGLID());
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_COMBINE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_RGB,GL2.GL_MODULATE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_RGB,GL2.GL_TEXTURE0);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_RGB,GL2.GL_TEXTURE1);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_ALPHA,GL2.GL_MODULATE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_ALPHA,GL2.GL_TEXTURE0);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_ALPHA,GL2.GL_TEXTURE1);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_ALPHA,GL2.GL_SRC_ALPHA);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_ALPHA,GL2.GL_SRC_ALPHA);
      modulateWithPrimaryColor(1,textures[1]);
    }
 else     if (texBlendMode == ADD) {
      gl2f.glActiveTexture(GL2.GL_TEXTURE0);
      gl2f.glBindTexture(textures[0].getGLTarget(),textures[0].getGLID());
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_COMBINE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_RGB,GL2.GL_ADD);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_RGB,GL2.GL_TEXTURE0);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_RGB,GL2.GL_TEXTURE1);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_ALPHA,GL2.GL_ADD);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_ALPHA,GL2.GL_TEXTURE0);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_ALPHA,GL2.GL_TEXTURE1);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_ALPHA,GL2.GL_SRC_ALPHA);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_ALPHA,GL2.GL_SRC_ALPHA);
      modulateWithPrimaryColor(1,textures[1]);
    }
 else     if (texBlendMode == SUBTRACT) {
      gl2f.glActiveTexture(GL2.GL_TEXTURE0);
      gl2f.glBindTexture(textures[0].getGLTarget(),textures[0].getGLID());
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_COMBINE);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_RGB,GL2.GL_SUBTRACT);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_RGB,GL2.GL_TEXTURE0);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_RGB,GL2.GL_TEXTURE1);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_RGB,GL2.GL_SRC_COLOR);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_COMBINE_ALPHA,GL2.GL_SUBTRACT);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC0_ALPHA,GL2.GL_TEXTURE0);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_SRC1_ALPHA,GL2.GL_TEXTURE1);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND0_ALPHA,GL2.GL_SRC_ALPHA);
      gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_OPERAND1_ALPHA,GL2.GL_SRC_ALPHA);
      modulateWithPrimaryColor(1,textures[1]);
    }
 else {
      PGraphics.showWarning("OPENGL2: This blend mode is currently unsupported in multitexture mode.");
    }
  }
  screenBlend(REPLACE);
}
