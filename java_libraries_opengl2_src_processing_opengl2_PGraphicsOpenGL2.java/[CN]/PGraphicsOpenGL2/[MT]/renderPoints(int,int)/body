{
  gl2f.glEnableClientState(GL2.GL_VERTEX_ARRAY);
  gl2f.glEnableClientState(GL2.GL_COLOR_ARRAY);
  int size=3 * (stop - start);
  while (vertexBuffer.capacity() / 3 < size) {
    expandBuffers();
  }
  float sw=vertices[lines[start][VERTEX1]][SW];
  if (sw > 0) {
    gl2f.glPointSize(sw);
    vertexBuffer.position(0);
    colorBuffer.position(0);
    int n=0;
    for (int i=start; i < stop; i++) {
      float[] a=vertices[points[i][VERTEX1]];
      vertexArray[3 * n + 0]=a[X];
      vertexArray[3 * n + 1]=a[Y];
      vertexArray[3 * n + 2]=a[Z];
      colorArray[4 * n + 0]=a[SR];
      colorArray[4 * n + 1]=a[SG];
      colorArray[4 * n + 2]=a[SB];
      colorArray[4 * n + 3]=a[SA];
      n++;
    }
    vertexBuffer.put(vertexArray);
    colorBuffer.put(colorArray);
    vertexBuffer.position(0);
    colorBuffer.position(0);
    gl2f.glVertexPointer(3,GL.GL_FLOAT,0,vertexBuffer);
    gl2f.glColorPointer(4,GL.GL_FLOAT,0,colorBuffer);
    gl2f.glDrawArrays(GL.GL_POINTS,start,stop - start);
  }
  gl2f.glDisableClientState(GL2.GL_VERTEX_ARRAY);
  gl2f.glDisableClientState(GL2.GL_COLOR_ARRAY);
}
