{
  gl.glViewport(0,0,w,h);
  gl2f.glMatrixMode(GL2.GL_PROJECTION);
  gl2f.glPushMatrix();
  gl2f.glLoadIdentity();
  gl2f.glOrthof(0,w,0,h,-1,1);
  gl2f.glMatrixMode(GL2.GL_MODELVIEW);
  gl2f.glPushMatrix();
  gl2f.glLoadIdentity();
  gl.glEnable(tex.getGLTarget());
  gl.glBindTexture(tex.getGLTarget(),tex.getGLID());
  gl.glDepthMask(false);
  gl.glDisable(GL.GL_BLEND);
  gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_REPLACE);
  gl2f.glTranslatef(x,y,0);
  gl2f.glScalef(w,h,1);
  renderTexQuad(crop[0] / w,crop[1] / h,(crop[0] + crop[2]) / w,(crop[1] + crop[3]) / h);
  gl2f.glTexEnvi(GL2.GL_TEXTURE_ENV,GL2.GL_TEXTURE_ENV_MODE,GL2.GL_MODULATE);
  gl.glBindTexture(tex.getGLTarget(),0);
  gl.glDisable(tex.getGLTarget());
  if (hints[DISABLE_DEPTH_MASK]) {
    gl.glDepthMask(false);
  }
 else {
    gl.glDepthMask(true);
  }
  if (blend) {
    blend(blendMode);
  }
 else {
    noBlend();
  }
  gl.glViewport(0,0,width,height);
  gl2f.glMatrixMode(GL2.GL_PROJECTION);
  gl2f.glPopMatrix();
  gl2f.glMatrixMode(GL2.GL_MODELVIEW);
  gl2f.glPopMatrix();
}
