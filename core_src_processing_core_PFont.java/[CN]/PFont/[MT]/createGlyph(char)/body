{
  Glyph glyph=new Glyph();
  int mbox3=size * 3;
  lazyGraphics.setColor(Color.white);
  lazyGraphics.fillRect(0,0,mbox3,mbox3);
  lazyGraphics.setColor(Color.black);
  lazyGraphics.drawString(String.valueOf(c),size,size * 2);
  WritableRaster raster=lazyImage.getRaster();
  raster.getDataElements(0,0,mbox3,mbox3,lazySamples);
  int minX=1000, maxX=0;
  int minY=1000, maxY=0;
  boolean pixelFound=false;
  for (int y=0; y < mbox3; y++) {
    for (int x=0; x < mbox3; x++) {
      int sample=lazySamples[y * mbox3 + x] & 0xff;
      if (sample != 255) {
        if (x < minX)         minX=x;
        if (y < minY)         minY=y;
        if (x > maxX)         maxX=x;
        if (y > maxY)         maxY=y;
        pixelFound=true;
      }
    }
  }
  if (!pixelFound) {
    minX=minY=0;
    maxX=maxY=0;
  }
  glyph.value=c;
  glyph.height=(maxY - minY) + 1;
  glyph.width=(maxX - minX) + 1;
  glyph.setWidth=lazyMetrics.charWidth(c);
  glyph.topExtent=size * 2 - minY;
  glyph.leftExtent=minX - size;
  glyph.image=new PImage(glyph.width,glyph.height,ALPHA);
  int[] pixels=glyph.image.pixels;
  for (int y=minY; y <= maxY; y++) {
    for (int x=minX; x <= maxX; x++) {
      int val=255 - (lazySamples[y * mbox3 + x] & 0xff);
      int pindex=(y - minY) * glyph.width + (x - minX);
      pixels[pindex]=val;
    }
  }
  if (charCount == glyphs.length) {
    glyphs=(Glyph[])PApplet.expand(glyphs);
  }
  if (charCount == 0) {
    glyphs[charCount]=glyph;
    if (glyph.value < 128) {
      ascii[glyph.value]=0;
    }
  }
 else   if (glyphs[charCount - 1].value < glyph.value) {
    glyphs[charCount]=glyph;
    if (glyph.value < 128) {
      ascii[glyph.value]=charCount;
    }
  }
 else {
    for (int i=0; i < charCount; i++) {
      if (glyphs[i].value > c) {
        for (int j=charCount; j > i; --j) {
          glyphs[j]=glyphs[j - 1];
          if (glyphs[j].value < 128) {
            ascii[glyphs[j].value]=j;
          }
        }
        glyphs[i]=glyph;
        if (c < 128)         ascii[c]=i;
        break;
      }
    }
  }
  charCount++;
}
