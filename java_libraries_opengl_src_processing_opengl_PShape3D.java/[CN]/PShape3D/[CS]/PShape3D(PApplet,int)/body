{
  ogl=(PGraphicsOpenGL)parent.g;
  glMode=GL.GL_STATIC_DRAW;
  glFillVertexBufferID=0;
  glFillColorBufferID=0;
  glFillNormalBufferID=0;
  glFillTexCoordBufferID=0;
  glFillIndexBufferID=0;
  glLineVertexBufferID=0;
  glLineColorBufferID=0;
  glLineNormalBufferID=0;
  glLineAttribBufferID=0;
  glLineIndexBufferID=0;
  glPointVertexBufferID=0;
  glPointColorBufferID=0;
  glPointNormalBufferID=0;
  glPointAttribBufferID=0;
  glPointIndexBufferID=0;
  this.tessellator=ogl.tessellator;
  this.family=family;
  this.root=this;
  this.parent=null;
  this.tessellated=false;
  tess=ogl.newTessGeometry(RETAINED);
  if (family == GEOMETRY || family == PRIMITIVE || family == PATH) {
    in=ogl.newInGeometry();
  }
  textureMode=ogl.textureMode;
  rectMode=ogl.rectMode;
  ellipseMode=ogl.ellipseMode;
  shapeMode=ogl.shapeMode;
  imageMode=ogl.imageMode;
  colorMode(ogl.colorMode,ogl.colorModeX,ogl.colorModeY,ogl.colorModeZ,ogl.colorModeA);
  fill=ogl.fill;
  fillR=((ogl.fillColor >> 16) & 0xFF) / 255.0f;
  fillG=((ogl.fillColor >> 8) & 0xFF) / 255.0f;
  fillB=((ogl.fillColor >> 0) & 0xFF) / 255.0f;
  fillA=((ogl.fillColor >> 24) & 0xFF) / 255.0f;
  stroke=ogl.stroke;
  strokeR=((ogl.strokeColor >> 16) & 0xFF) / 255.0f;
  strokeG=((ogl.strokeColor >> 8) & 0xFF) / 255.0f;
  strokeB=((ogl.strokeColor >> 0) & 0xFF) / 255.0f;
  strokeA=((ogl.strokeColor >> 24) & 0xFF) / 255.0f;
  strokeWeight=ogl.strokeWeight;
  tint=ogl.tint;
  tintR=((ogl.tintColor >> 16) & 0xFF) / 255.0f;
  tintG=((ogl.tintColor >> 8) & 0xFF) / 255.0f;
  tintB=((ogl.tintColor >> 0) & 0xFF) / 255.0f;
  tintA=((ogl.tintColor >> 24) & 0xFF) / 255.0f;
  normalX=normalY=0;
  normalZ=1;
  normalMode=NORMAL_MODE_AUTO;
}
