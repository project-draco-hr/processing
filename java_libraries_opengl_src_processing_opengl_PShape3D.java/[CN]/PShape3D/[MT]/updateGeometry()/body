{
  if (root == this && parent == null && modified) {
    fillVertCopyOffset=0;
    lineVertCopyOffset=0;
    pointVertCopyOffset=0;
    updateRootGeometry();
    if (root.fillVerticesCache != null && root.fillVerticesCache.hasData()) {
      root.copyFillVertices(root.fillVerticesCache.offset,root.fillVerticesCache.size,root.fillVerticesCache.floatData);
      root.fillVerticesCache.clear();
    }
    if (root.fillColorsCache != null && root.fillColorsCache.hasData()) {
      root.copyFillColors(root.fillColorsCache.offset,root.fillColorsCache.size,root.fillColorsCache.intData);
      root.fillColorsCache.clear();
    }
    if (root.fillNormalsCache != null && root.fillNormalsCache.hasData()) {
      root.copyFillNormals(root.fillNormalsCache.offset,root.fillNormalsCache.size,root.fillNormalsCache.floatData);
      root.fillNormalsCache.clear();
    }
    if (root.fillTexCoordsCache != null && root.fillTexCoordsCache.hasData()) {
      root.copyFillTexCoords(root.fillTexCoordsCache.offset,root.fillTexCoordsCache.size,root.fillTexCoordsCache.floatData);
      root.fillTexCoordsCache.clear();
    }
    if (root.fillAmbientCache != null && root.fillAmbientCache.hasData()) {
      root.copyFillAmbient(root.fillAmbientCache.offset,root.fillAmbientCache.size,root.fillAmbientCache.intData);
      root.fillAmbientCache.clear();
    }
    if (root.fillSpecularCache != null && root.fillSpecularCache.hasData()) {
      root.copyFillSpecular(root.fillSpecularCache.offset,root.fillSpecularCache.size,root.fillSpecularCache.intData);
      root.fillSpecularCache.clear();
    }
    if (root.fillEmissiveCache != null && root.fillEmissiveCache.hasData()) {
      root.copyFillEmissive(root.fillEmissiveCache.offset,root.fillEmissiveCache.size,root.fillEmissiveCache.intData);
      root.fillEmissiveCache.clear();
    }
    if (root.fillShininessCache != null && root.fillShininessCache.hasData()) {
      root.copyFillShininess(root.fillShininessCache.offset,root.fillShininessCache.size,root.fillShininessCache.floatData);
      root.fillShininessCache.clear();
    }
    if (root.lineVerticesCache != null && root.lineVerticesCache.hasData()) {
      root.copyLineVertices(root.lineVerticesCache.offset,root.lineVerticesCache.size,root.lineVerticesCache.floatData);
      root.lineVerticesCache.clear();
    }
    if (root.lineColorsCache != null && root.lineColorsCache.hasData()) {
      root.copyLineColors(root.lineColorsCache.offset,root.lineColorsCache.size,root.lineColorsCache.intData);
      root.lineColorsCache.clear();
    }
    if (root.lineAttributesCache != null && root.lineAttributesCache.hasData()) {
      root.copyLineAttributes(root.lineAttributesCache.offset,root.lineAttributesCache.size,root.lineAttributesCache.floatData);
      root.lineAttributesCache.clear();
    }
    if (root.pointVerticesCache != null && root.pointVerticesCache.hasData()) {
      root.copyPointVertices(root.pointVerticesCache.offset,root.pointVerticesCache.size,root.pointVerticesCache.floatData);
      root.pointVerticesCache.clear();
    }
    if (root.pointColorsCache != null && root.pointColorsCache.hasData()) {
      root.copyPointColors(root.pointColorsCache.offset,root.pointColorsCache.size,root.pointColorsCache.intData);
      root.pointColorsCache.clear();
    }
    if (root.pointAttributesCache != null && root.pointAttributesCache.hasData()) {
      root.copyPointAttributes(root.pointAttributesCache.offset,root.pointAttributesCache.size,root.pointAttributesCache.floatData);
      root.pointAttributesCache.clear();
    }
  }
}
