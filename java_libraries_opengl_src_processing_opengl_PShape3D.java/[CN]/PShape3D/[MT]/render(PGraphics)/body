{
  if (root == null) {
    return;
  }
  if (0 < vertexCount && 0 < indexCount) {
    getGl().glEnableClientState(GL2.GL_NORMAL_ARRAY);
    getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,root.glNormalBufferID);
    getGl().glNormalPointer(GL.GL_FLOAT,0,0);
    getGl().glEnableClientState(GL2.GL_COLOR_ARRAY);
    getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,root.glColorBufferID);
    getGl().glColorPointer(4,GL.GL_FLOAT,0,0);
    getGl().glEnableClientState(GL2.GL_VERTEX_ARRAY);
    getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,root.glVertexBufferID);
    getGl().glVertexPointer(3,GL.GL_FLOAT,0,0);
    getGl().glBindBuffer(GL.GL_ELEMENT_ARRAY_BUFFER,root.glIndexBufferID);
    getGl().glDrawElements(GL.GL_TRIANGLES,lastIndex - firstIndex + 1,GL.GL_UNSIGNED_INT,firstIndex * PGraphicsOpenGL.SIZEOF_INT);
    getGl().glBindBuffer(GL.GL_ELEMENT_ARRAY_BUFFER,0);
    getGl().glDisableClientState(GL2.GL_VERTEX_ARRAY);
    getGl().glDisableClientState(GL2.GL_COLOR_ARRAY);
    getGl().glDisableClientState(GL2.GL_NORMAL_ARRAY);
  }
  if (useStroke) {
    strokeRenderShader.start();
    getGl().glEnableClientState(GL2.GL_NORMAL_ARRAY);
    getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,root.glStrokeNormalBufferID);
    getGl().glNormalPointer(GL.GL_FLOAT,0,0);
    getGl().glEnableClientState(GL2.GL_COLOR_ARRAY);
    getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,root.glStrokeColorBufferID);
    getGl().glColorPointer(4,GL.GL_FLOAT,0,0);
    getGl().glEnableClientState(GL2.GL_VERTEX_ARRAY);
    getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,root.glStrokeVertexBufferID);
    getGl().glVertexPointer(3,GL.GL_FLOAT,0,0);
    int[] viewport={0,0,0,0};
    getGl().glGetIntegerv(GL.GL_VIEWPORT,viewport,0);
    strokeRenderShader.setVecUniform("viewport",viewport[0],viewport[1],viewport[2],viewport[3]);
    int attribsID=strokeRenderShader.getAttribLocation("attribs");
    ogl.gl2x.glEnableVertexAttribArray(attribsID);
    getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,root.glStrokeAttribBufferID);
    ogl.gl2x.glVertexAttribPointer(attribsID,4,GL.GL_FLOAT,false,0,0);
    getGl().glBindBuffer(GL.GL_ELEMENT_ARRAY_BUFFER,root.glStrokeIndexBufferID);
    getGl().glDrawElements(GL.GL_TRIANGLES,lastStrokeIndex - firstStrokeIndex + 1,GL.GL_UNSIGNED_INT,firstStrokeIndex * PGraphicsOpenGL.SIZEOF_INT);
    getGl().glBindBuffer(GL.GL_ELEMENT_ARRAY_BUFFER,0);
    ogl.gl2x.glDisableVertexAttribArray(attribsID);
    getGl().glDisableClientState(GL2.GL_VERTEX_ARRAY);
    getGl().glDisableClientState(GL2.GL_COLOR_ARRAY);
    getGl().glDisableClientState(GL2.GL_NORMAL_ARRAY);
    strokeRenderShader.stop();
  }
}
