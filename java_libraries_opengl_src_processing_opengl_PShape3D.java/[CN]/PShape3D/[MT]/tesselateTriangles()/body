{
  vertexCount=dataSize;
  vertices=new float[3 * dataSize];
  PApplet.arrayCopy(vertexData,vertices,3 * dataSize);
  texcoords=new float[2 * dataSize];
  PApplet.arrayCopy(tcoordData,texcoords,2 * dataSize);
  colors=new float[4 * dataSize];
  PApplet.arrayCopy(colorData,colors,4 * dataSize);
  normals=new float[3 * dataSize];
  PApplet.arrayCopy(normalData,normals,3 * dataSize);
  useIndices=true;
  indexCount=vertexCount;
  indices=new int[indexCount];
  for (int i=0; i < indexCount; i++) {
    indices[i]=i;
  }
  glUsage=GL.GL_STATIC_DRAW;
  glVertexBufferID=ogl.createGLResource(PGraphicsOpenGL.GL_VERTEX_BUFFER);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,glVertexBufferID);
  getGl().glBufferData(GL.GL_ARRAY_BUFFER,vertexCount * 3 * PGraphicsOpenGL.SIZEOF_FLOAT,null,glUsage);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,0);
  glColorBufferID=ogl.createGLResource(PGraphicsOpenGL.GL_VERTEX_BUFFER);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,glColorBufferID);
  getGl().glBufferData(GL.GL_ARRAY_BUFFER,vertexCount * 4 * PGraphicsOpenGL.SIZEOF_FLOAT,null,glUsage);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,0);
  glNormalBufferID=ogl.createGLResource(PGraphicsOpenGL.GL_VERTEX_BUFFER);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,glNormalBufferID);
  getGl().glBufferData(GL.GL_ARRAY_BUFFER,vertexCount * 3 * PGraphicsOpenGL.SIZEOF_FLOAT,null,glUsage);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,0);
  if (glTexCoordBufferID == null) {
    glTexCoordBufferID=new int[PGraphicsOpenGL.MAX_TEXTURES];
    java.util.Arrays.fill(glTexCoordBufferID,0);
  }
  numTexBuffers=1;
  for (int i=0; i < numTexBuffers; i++) {
    glTexCoordBufferID[i]=ogl.createGLResource(PGraphicsOpenGL.GL_VERTEX_BUFFER);
    getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,glTexCoordBufferID[i]);
    getGl().glBufferData(GL.GL_ARRAY_BUFFER,vertexCount * 2 * PGraphicsOpenGL.SIZEOF_FLOAT,null,glUsage);
    getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,0);
  }
  glIndexBufferID=ogl.createGLResource(PGraphicsOpenGL.GL_VERTEX_BUFFER);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,glIndexBufferID);
  getGl().glBufferData(GL.GL_ARRAY_BUFFER,indexCount * PGraphicsOpenGL.SIZEOF_INT,null,GL.GL_STATIC_DRAW);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,0);
  int offset=0;
  int size=vertexCount;
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,glVertexBufferID);
  getGl().glBufferSubData(GL.GL_ARRAY_BUFFER,3 * offset * PGraphicsOpenGL.SIZEOF_FLOAT,3 * size * PGraphicsOpenGL.SIZEOF_FLOAT,FloatBuffer.wrap(vertices));
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,0);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,glTexCoordBufferID[0]);
  getGl().glBufferSubData(GL.GL_ARRAY_BUFFER,2 * offset * PGraphicsOpenGL.SIZEOF_FLOAT,2 * size * PGraphicsOpenGL.SIZEOF_FLOAT,FloatBuffer.wrap(texcoords));
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,0);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,glColorBufferID);
  getGl().glBufferSubData(GL.GL_ARRAY_BUFFER,4 * offset * PGraphicsOpenGL.SIZEOF_FLOAT,4 * size * PGraphicsOpenGL.SIZEOF_FLOAT,FloatBuffer.wrap(colors));
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,0);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,glNormalBufferID);
  getGl().glBufferSubData(GL.GL_ARRAY_BUFFER,3 * offset * PGraphicsOpenGL.SIZEOF_FLOAT,3 * size * PGraphicsOpenGL.SIZEOF_FLOAT,FloatBuffer.wrap(normals));
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,0);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,glIndexBufferID);
  getGl().glBufferSubData(GL.GL_ARRAY_BUFFER,offset * PGraphicsOpenGL.SIZEOF_INT,size * PGraphicsOpenGL.SIZEOF_INT,IntBuffer.wrap(indices));
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,0);
}
