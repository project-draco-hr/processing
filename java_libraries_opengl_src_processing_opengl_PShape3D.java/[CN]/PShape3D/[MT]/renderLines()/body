{
  ogl.lineShader.start();
  getGl().glEnableClientState(GL2.GL_NORMAL_ARRAY);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,root.glLineNormalBufferID);
  getGl().glNormalPointer(GL.GL_FLOAT,0,0);
  getGl().glEnableClientState(GL2.GL_COLOR_ARRAY);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,root.glLineColorBufferID);
  getGl().glColorPointer(4,GL.GL_FLOAT,0,0);
  getGl().glEnableClientState(GL2.GL_VERTEX_ARRAY);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,root.glLineVertexBufferID);
  getGl().glVertexPointer(3,GL.GL_FLOAT,0,0);
  int[] viewport={0,0,0,0};
  getGl().glGetIntegerv(GL.GL_VIEWPORT,viewport,0);
  ogl.lineShader.setVecUniform("viewport",viewport[0],viewport[1],viewport[2],viewport[3]);
  int attribsID=ogl.lineShader.getAttribLocation("attribs");
  ogl.gl2x.glEnableVertexAttribArray(attribsID);
  getGl().glBindBuffer(GL.GL_ARRAY_BUFFER,root.glLineAttribBufferID);
  ogl.gl2x.glVertexAttribPointer(attribsID,4,GL.GL_FLOAT,false,0,0);
  getGl().glBindBuffer(GL.GL_ELEMENT_ARRAY_BUFFER,root.glLineIndexBufferID);
  getGl().glDrawElements(GL.GL_TRIANGLES,tess.lastLineIndex - tess.firstLineIndex + 1,GL.GL_UNSIGNED_INT,tess.firstLineIndex * PGraphicsOpenGL.SIZEOF_INT);
  getGl().glBindBuffer(GL.GL_ELEMENT_ARRAY_BUFFER,0);
  ogl.gl2x.glDisableVertexAttribArray(attribsID);
  getGl().glDisableClientState(GL2.GL_VERTEX_ARRAY);
  getGl().glDisableClientState(GL2.GL_COLOR_ARRAY);
  getGl().glDisableClientState(GL2.GL_NORMAL_ARRAY);
  ogl.lineShader.stop();
}
