{
  this.textarea=(JavaTextArea)textarea;
  this.editor=editor;
  this.insertionPosition=position;
  if (subWord.indexOf('.') != -1 && subWord.indexOf('.') != subWord.length() - 1) {
    this.subWord=subWord.substring(subWord.lastIndexOf('.') + 1);
  }
 else {
    this.subWord=subWord;
  }
  if (classIcon == null) {
    Mode mode=editor.getMode();
    File dir=new File(mode.getFolder(),"theme/completion");
    classIcon=Toolkit.getIconX(dir,"class_obj");
    methodIcon=Toolkit.getIconX(dir,"methpub_obj");
    fieldIcon=Toolkit.getIconX(dir,"field_protected_obj");
    localVarIcon=Toolkit.getIconX(dir,"field_default_obj");
    selectionBgColor=new Color(0xffF0F0F0);
    textColor=new Color(0xff222222);
  }
  popupMenu=new JPopupMenu();
  popupMenu.removeAll();
  popupMenu.setOpaque(false);
  popupMenu.setBorder(null);
  scrollPane=new JScrollPane();
  completionList=new JList<CompletionCandidate>(items){
{
      setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
      setSelectedIndex(0);
      addMouseListener(new MouseAdapter(){
        @Override public void mouseClicked(        MouseEvent e){
          if (e.getClickCount() == 2) {
            insertSelection(MOUSE_COMPLETION);
            setInvisible();
          }
        }
      }
);
      setCellRenderer(new CustomListRenderer());
      setFocusable(false);
      setFont(Toolkit.getSansFont(12,Font.PLAIN));
    }
  }
;
  scrollPane.setViewportView(completionList);
  scrollPane.setBorder(null);
  popupMenu.add(scrollPane,BorderLayout.CENTER);
  popupMenu.setPopupSize(calcWidth(),calcHeight(items.getSize()));
  popupMenu.setFocusable(false);
  popupMenu.show(textarea,location.x,textarea.getBaseline(0,0) + location.y);
}
