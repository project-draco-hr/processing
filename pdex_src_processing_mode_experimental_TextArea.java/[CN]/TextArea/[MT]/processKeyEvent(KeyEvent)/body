{
  if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
    if (suggestion != null) {
      if (suggestion.isVisible()) {
        System.out.println("esc key");
        hideSuggestion();
        return;
      }
    }
  }
  if (evt.getID() == KeyEvent.KEY_PRESSED) {
switch (evt.getKeyCode()) {
case KeyEvent.VK_DOWN:
      if (suggestion != null)       if (suggestion.isVisible()) {
        suggestion.moveDown();
        return;
      }
    break;
case KeyEvent.VK_UP:
  if (suggestion != null)   if (suggestion.isVisible()) {
    suggestion.moveUp();
    return;
  }
break;
case KeyEvent.VK_ENTER:
if (suggestion != null) {
if (suggestion.isVisible()) {
  if (suggestion.insertSelection()) {
    SwingUtilities.invokeLater(new Runnable(){
      @Override public void run(){
        try {
        }
 catch (        Exception e) {
          e.printStackTrace();
        }
      }
    }
);
    return;
  }
}
}
break;
case KeyEvent.VK_BACK_SPACE:
System.out.println("BK Key");
break;
default :
break;
}
}
super.processKeyEvent(evt);
if (evt.getID() == KeyEvent.KEY_TYPED) {
errorCheckerService.runManualErrorCheck();
System.out.println(" Typing: " + fetchPhrase(evt) + " "+ (evt.getKeyChar() == KeyEvent.VK_BACK_SPACE));
}
}
