{
  if (evt != null) {
    char keyChar=evt.getKeyChar();
    if (keyChar == KeyEvent.VK_ENTER) {
      return null;
    }
 else     if (keyChar == KeyEvent.VK_ESCAPE) {
      return null;
    }
 else     if (keyChar == KeyEvent.VK_TAB || keyChar == KeyEvent.CHAR_UNDEFINED) {
      return null;
    }
  }
  int off=getCaretPosition();
  log2("off " + off);
  if (off < 0)   return null;
  int line=getCaretLine();
  if (line < 0)   return null;
  String s=getLineText(line);
  log2("lin " + line);
  int x=getCaretPosition() - getLineStartOffset(line) - 1, x2=x + 1, x1=x - 1;
  if (x >= s.length() || x < 0)   return null;
  log2(" x char: " + s.charAt(x));
  String word=(x < s.length() ? s.charAt(x) : "") + "";
  if (s.trim().length() == 1) {
    word=word.trim();
    if (word.endsWith("."))     word=word.substring(0,word.length() - 1);
    if (word.length() > 1)     errorCheckerService.getASTGenerator().preparePredictions(word,line + errorCheckerService.mainClassOffset,0);
    return word;
  }
  int i=0;
  int closeB=0;
  while (true) {
    i++;
    if (x1 >= 0) {
      if (Character.isLetterOrDigit(s.charAt(x1)) || s.charAt(x1) == '_' || s.charAt(x1) == '.' || s.charAt(x1) == ')' || s.charAt(x1) == ']') {
        if (s.charAt(x1) == ')') {
          word=s.charAt(x1--) + word;
          closeB++;
          while (x1 >= 0 && closeB > 0) {
            word=s.charAt(x1) + word;
            if (s.charAt(x1) == '(')             closeB--;
            if (s.charAt(x1) == ')')             closeB++;
            x1--;
          }
        }
 else         if (s.charAt(x1) == ']') {
          word=s.charAt(x1--) + word;
          closeB++;
          while (x1 >= 0 && closeB > 0) {
            word=s.charAt(x1) + word;
            if (s.charAt(x1) == '[')             closeB--;
            if (s.charAt(x1) == ']')             closeB++;
            x1--;
          }
        }
 else {
          word=s.charAt(x1--) + word;
        }
      }
 else {
        break;
      }
    }
 else {
      break;
    }
    if (i > 200) {
      break;
    }
  }
  if (Character.isDigit(word.charAt(0)))   return null;
  word=word.trim();
  int lineStartNonWSOffset=0;
  if (word.length() > 1)   errorCheckerService.getASTGenerator().preparePredictions(word,line + errorCheckerService.mainClassOffset,lineStartNonWSOffset);
  return word;
}
