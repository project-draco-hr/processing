{
  if (defListModel.size() == 0) {
    return;
  }
  hideSuggestion();
  final int position=getCaretPosition();
  Point location=new Point();
  try {
    location.x=offsetToX(getCaretLine(),position - getLineStartOffset(getCaretLine()));
    location.y=lineToY(getCaretLine()) + getPainter().getFontMetrics().getHeight();
  }
 catch (  Exception e2) {
    e2.printStackTrace();
    return;
  }
  String text=getText();
  int start=Math.max(0,position - 1);
  while (start > 0) {
    if (!Character.isWhitespace(text.charAt(start))) {
      start--;
    }
 else {
      start++;
      break;
    }
  }
  if (start > position) {
    return;
  }
  final String subWord=text.substring(start,position);
  if (subWord.length() < 2) {
    return;
  }
  suggestion=new CompletionPanel(this,position,subWord,defListModel,location);
  SwingUtilities.invokeLater(new Runnable(){
    @Override public void run(){
      requestFocusInWindow();
    }
  }
);
}
