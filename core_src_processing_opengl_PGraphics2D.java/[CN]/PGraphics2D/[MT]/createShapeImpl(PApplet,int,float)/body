{
  PShape2D shape=null;
  int len=p.length;
  if (kind == POINT) {
    if (len != 2) {
      showWarning("Wrong number of parameters");
      return null;
    }
    shape=new PShape2D(parent,PShape.PRIMITIVE);
    shape.setKind(POINT);
  }
 else   if (kind == LINE) {
    if (len != 4) {
      showWarning("Wrong number of parameters");
      return null;
    }
    shape=new PShape2D(parent,PShape.PRIMITIVE);
    shape.setKind(LINE);
  }
 else   if (kind == TRIANGLE) {
    if (len != 6) {
      showWarning("Wrong number of parameters");
      return null;
    }
    shape=new PShape2D(parent,PShape.PRIMITIVE);
    shape.setKind(TRIANGLE);
  }
 else   if (kind == QUAD) {
    if (len != 8) {
      showWarning("Wrong number of parameters");
      return null;
    }
    shape=new PShape2D(parent,PShape.PRIMITIVE);
    shape.setKind(QUAD);
  }
 else   if (kind == RECT) {
    if (len != 4 && len != 5 && len != 8) {
      showWarning("Wrong number of parameters");
      return null;
    }
    shape=new PShape2D(parent,PShape.PRIMITIVE);
    shape.setKind(RECT);
  }
 else   if (kind == ELLIPSE) {
    if (len != 4) {
      showWarning("Wrong number of parameters");
      return null;
    }
    shape=new PShape2D(parent,PShape.PRIMITIVE);
    shape.setKind(ELLIPSE);
  }
 else   if (kind == ARC) {
    if (len != 6) {
      showWarning("Wrong number of parameters");
      return null;
    }
    shape=new PShape2D(parent,PShape.PRIMITIVE);
    shape.setKind(ARC);
  }
 else   if (kind == BOX) {
    showWarning("Primitive not supported in 2D");
  }
 else   if (kind == SPHERE) {
    showWarning("Primitive not supported in 2D");
  }
 else {
    showWarning("Unrecognized primitive type");
  }
  if (shape != null) {
    shape.setParams(p);
  }
  return shape;
}
