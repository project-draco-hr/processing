{
  try {
    boolean commanate=false;
    final int length=this.size();
    Iterator keys=this.keyIterator();
    writer.write('{');
    int actualFactor=(indentFactor == -1) ? 0 : indentFactor;
    if (length == 1) {
      Object key=keys.next();
      writer.write(quote(key.toString()));
      writer.write(':');
      if (actualFactor > 0) {
        writer.write(' ');
      }
      writeValue(writer,this.map.get(key),actualFactor,indent);
    }
 else     if (length != 0) {
      final int newindent=indent + actualFactor;
      while (keys.hasNext()) {
        Object key=keys.next();
        if (commanate) {
          writer.write(',');
        }
        if (indentFactor != -1) {
          writer.write('\n');
        }
        indent(writer,newindent);
        writer.write(quote(key.toString()));
        writer.write(':');
        if (actualFactor > 0) {
          writer.write(' ');
        }
        writeValue(writer,this.map.get(key),actualFactor,newindent);
        commanate=true;
      }
      if (indentFactor != -1) {
        writer.write('\n');
      }
      indent(writer,indent);
    }
    writer.write('}');
    return writer;
  }
 catch (  IOException exception) {
    throw new RuntimeException(exception);
  }
}
