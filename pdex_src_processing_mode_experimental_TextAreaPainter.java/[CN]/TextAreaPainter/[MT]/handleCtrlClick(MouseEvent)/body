{
  log("--handleCtrlClick--");
  int off=ta.xyToOffset(evt.getX(),evt.getY());
  if (off < 0)   return;
  int line=ta.getLineOfOffset(off);
  if (line < 0)   return;
  String s=ta.getLineText(line);
  if (s == null)   return;
 else   if (s.length() == 0)   return;
 else {
    int x=ta.xToOffset(line,evt.getX()), x2=x + 1, x1=x - 1;
    log("x=" + x);
    int xLS=off - ta.getLineStartNonWhiteSpaceOffset(line);
    if (x < 0 || x >= s.length())     return;
    String word=s.charAt(x) + "";
    if (s.charAt(x) == ' ')     return;
    if (!(Character.isLetterOrDigit(s.charAt(x)) || s.charAt(x) == '_' || s.charAt(x) == '$'))     return;
    int i=0;
    while (true) {
      i++;
      if (x1 >= 0 && x1 < s.length()) {
        if (Character.isLetter(s.charAt(x1)) || s.charAt(x1) == '_') {
          word=s.charAt(x1--) + word;
          xLS--;
        }
 else         x1=-1;
      }
 else       x1=-1;
      if (x2 >= 0 && x2 < s.length()) {
        if (Character.isLetterOrDigit(s.charAt(x2)) || s.charAt(x2) == '_' || s.charAt(x2) == '$')         word=word + s.charAt(x2++);
 else         x2=-1;
      }
 else       x2=-1;
      if (x1 < 0 && x2 < 0)       break;
      if (i > 200) {
        break;
      }
    }
    if (Character.isDigit(word.charAt(0)))     return;
    log(errorCheckerService.mainClassOffset + line + "|"+ line+ "| offset "+ xLS+ word+ " <= \n");
    errorCheckerService.getASTGenerator().scrollToDeclaration(line + errorCheckerService.mainClassOffset,word,xLS);
  }
}
