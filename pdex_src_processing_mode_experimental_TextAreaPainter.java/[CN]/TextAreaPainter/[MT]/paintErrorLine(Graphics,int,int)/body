{
  if (errorCheckerService == null) {
    return;
  }
  if (errorCheckerService.problemsList == null) {
    return;
  }
  boolean notFound=true;
  boolean isWarning=false;
  for (  ErrorMarker emarker : errorCheckerService.getEditor().errorBar.errorPoints) {
    if (emarker.getProblem().getLineNumber() == line + 1) {
      notFound=false;
      if (emarker.getType() == ErrorMarker.Warning) {
        isWarning=true;
      }
      break;
    }
  }
  if (notFound) {
    return;
  }
  int y=ta.lineToY(line);
  y+=fm.getLeading() + fm.getMaxDescent();
  int height=fm.getHeight();
  int start=ta.getLineStartOffset(line);
  try {
    String linetext=null;
    try {
      linetext=ta.getDocument().getText(start,ta.getLineStopOffset(line) - start - 1);
    }
 catch (    BadLocationException bl) {
      return;
    }
    int aw=fm.stringWidth(trimRight(linetext)) + ta.getHorizontalOffset();
    int rw=fm.stringWidth(linetext.trim());
    int x1=0 + (aw - rw), y1=y + fm.getHeight() - 2, x2=x1 + rw;
    x1+=ta.getGutterWidth();
    x2+=ta.getGutterWidth();
    gfx.setColor(errorMarkerColor);
    if (isWarning) {
      gfx.setColor(warningMarkerColor);
    }
    gfx.fillRect(1,y + 2,3,height - 2);
    gfx.setColor(errorColor);
    if (isWarning) {
      gfx.setColor(warningColor);
    }
    int xx=x1;
    while (xx < x2) {
      gfx.drawLine(xx,y1,xx + 2,y1 + 1);
      xx+=2;
      gfx.drawLine(xx,y1 + 1,xx + 2,y1);
      xx+=2;
    }
  }
 catch (  Exception e) {
    System.out.println("Looks like I messed up! XQTextAreaPainter.paintLine() : " + e);
  }
}
