{
  String lower=filename.toLowerCase();
  if (lower.endsWith(".tga")) {
    try {
      return loadImageTGA(filename);
    }
 catch (    IOException e) {
      e.printStackTrace();
      return null;
    }
  }
  if (lower.endsWith(".tif") || lower.endsWith(".tiff")) {
    byte bytes[]=loadBytes(filename);
    return (bytes == null) ? null : PImage.loadTIFF(bytes);
  }
  if (lower.endsWith(".png") && PApplet.javaVersion < 1.3f) {
    System.err.println("PNG images can only be loaded when " + "using Java 1.3 and later.");
    return null;
  }
  try {
    if (lower.endsWith(".jpg") || lower.endsWith(".jpeg") || lower.endsWith(".gif")|| lower.endsWith(".png")) {
      byte bytes[]=loadBytes(filename);
      if (bytes == null) {
        return null;
      }
 else {
        Image awtImage=Toolkit.getDefaultToolkit().createImage(bytes);
        PImage image=loadImageSync(awtImage);
        if ((lower.endsWith(".gif")) || (lower.endsWith(".png"))) {
          image.checkAlpha();
        }
        return image;
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  if (PApplet.javaVersion >= 1.4f) {
    if (loadImageFormats == null) {
      try {
        Class ioClass=Class.forName("javax.imageio.ImageIO");
        Method getFormatNamesMethod=ioClass.getMethod("getReaderFormatNames",(Class[])null);
        loadImageFormats=(String[])getFormatNamesMethod.invoke((Class[])null,(Object[])null);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
    if (loadImageFormats != null) {
      for (int i=0; i < loadImageFormats.length; i++) {
        if (filename.endsWith("." + loadImageFormats[i])) {
          return loadImageIO(filename);
        }
      }
    }
  }
  return null;
}
