{
  if (extension == null) {
    String lower=filename.toLowerCase();
    int dot=filename.lastIndexOf('.');
    if (dot == -1) {
      extension="unknown";
    }
    extension=lower.substring(dot + 1);
    int question=extension.indexOf('?');
    if (question != -1) {
      extension=extension.substring(0,question);
    }
  }
  extension=extension.toLowerCase();
  if (extension.equals("tga")) {
    try {
      PImage image=loadImageTGA(filename);
      return image;
    }
 catch (    IOException e) {
      e.printStackTrace();
      return null;
    }
  }
  if (extension.equals("tif") || extension.equals("tiff")) {
    byte bytes[]=loadBytes(filename);
    PImage image=(bytes == null) ? null : PImage.loadTIFF(bytes);
    return image;
  }
  try {
    if (extension.equals("jpg") || extension.equals("jpeg") || extension.equals("gif")|| extension.equals("png")|| extension.equals("unknown")) {
      byte bytes[]=loadBytes(filename);
      if (bytes == null) {
        return null;
      }
 else {
        Image awtImage=new ImageIcon(bytes).getImage();
        if (awtImage instanceof BufferedImage) {
          BufferedImage buffImage=(BufferedImage)awtImage;
          int space=buffImage.getColorModel().getColorSpace().getType();
          if (space == ColorSpace.TYPE_CMYK) {
            System.err.println(filename + " is a CMYK image, " + "only RGB images are supported.");
            return null;
          }
        }
        PImage image=new PImage(awtImage);
        if (image.width == -1) {
          System.err.println("The file " + filename + " contains bad image data, or may not be an image.");
        }
        if (extension.equals("gif") || extension.equals("png")) {
          image.checkAlpha();
        }
        return image;
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  if (loadImageFormats == null) {
    loadImageFormats=ImageIO.getReaderFormatNames();
  }
  if (loadImageFormats != null) {
    for (int i=0; i < loadImageFormats.length; i++) {
      if (extension.equals(loadImageFormats[i])) {
        return loadImageIO(filename);
      }
    }
  }
  System.err.println("Could not find a method to load " + filename);
  return null;
}
