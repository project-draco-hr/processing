{
  System.setProperty("sun.awt.noerasebackground","true");
  Toolkit.getDefaultToolkit().setDynamicLayout(true);
  if (args.length < 1) {
    System.err.println("Usage: PApplet [options] <class name> [sketch args]");
    System.err.println("See the Javadoc for PApplet for an explanation.");
    System.exit(1);
  }
  boolean external=false;
  int[] location=null;
  int[] editorLocation=null;
  String name=null;
  Color backgroundColor=null;
  Color stopColor=Color.GRAY;
  boolean hideStop=false;
  int displayIndex=-1;
  boolean fullScreen=false;
  boolean spanDisplays=false;
  String param=null, value=null;
  String folder=calcSketchPath();
  int argIndex=0;
  while (argIndex < args.length) {
    int equals=args[argIndex].indexOf('=');
    if (equals != -1) {
      param=args[argIndex].substring(0,equals);
      value=args[argIndex].substring(equals + 1);
      if (param.equals(ARGS_EDITOR_LOCATION)) {
        external=true;
        editorLocation=parseInt(split(value,','));
      }
 else       if (param.equals(ARGS_DISPLAY)) {
        displayIndex=parseInt(value,-1);
      }
 else       if (param.equals(ARGS_BGCOLOR)) {
        if (value.charAt(0) == '#')         value=value.substring(1);
        backgroundColor=new Color(Integer.parseInt(value,16));
      }
 else       if (param.equals(ARGS_STOP_COLOR)) {
        if (value.charAt(0) == '#')         value=value.substring(1);
        stopColor=new Color(Integer.parseInt(value,16));
      }
 else       if (param.equals(ARGS_SKETCH_FOLDER)) {
        folder=value;
      }
 else       if (param.equals(ARGS_LOCATION)) {
        location=parseInt(split(value,','));
      }
    }
 else {
      if (args[argIndex].equals(ARGS_FULL_SCREEN)) {
        fullScreen=true;
      }
 else       if (args[argIndex].equals(ARGS_SPAN_SCREENS)) {
        spanDisplays=true;
      }
 else       if (args[argIndex].equals(ARGS_HIDE_STOP)) {
        hideStop=true;
      }
 else       if (args[argIndex].equals(ARGS_EXTERNAL)) {
        external=true;
      }
 else {
        name=args[argIndex];
        break;
      }
    }
    argIndex++;
  }
  final PApplet applet;
  if (constructedApplet != null) {
    applet=constructedApplet;
  }
 else {
    try {
      Class<?> c=Thread.currentThread().getContextClassLoader().loadClass(name);
      applet=(PApplet)c.newInstance();
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
  }
  applet.sketchPath=folder;
  fullScreen|=applet.sketchFullScreen();
  fullScreen|=applet.sketchSpanScreens();
  applet.args=PApplet.subset(args,argIndex + 1);
  applet.external=external;
  PSurface surface=applet.initSurface(backgroundColor,displayIndex,fullScreen,spanDisplays);
  if (fullScreen) {
    if (hideStop) {
      stopColor=null;
    }
    surface.placePresent(stopColor);
  }
 else {
    surface.placeWindow(location,editorLocation);
  }
  if (external) {
    surface.setupExternalMessages();
  }
}
