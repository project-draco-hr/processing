{
  int id=event.getID();
  if ((id == MouseEvent.MOUSE_DRAGGED) || (id == MouseEvent.MOUSE_MOVED)) {
    pmouseX=emouseX;
    pmouseY=emouseY;
    mouseX=event.getX();
    mouseY=event.getY();
  }
  mouseEvent=event;
  int modifiers=event.getModifiers();
  if ((modifiers & InputEvent.BUTTON1_MASK) != 0) {
    mouseButton=LEFT;
  }
 else   if ((modifiers & InputEvent.BUTTON2_MASK) != 0) {
    mouseButton=CENTER;
  }
 else   if ((modifiers & InputEvent.BUTTON3_MASK) != 0) {
    mouseButton=RIGHT;
  }
  if (platform == MACOSX) {
    if (mouseEvent.isPopupTrigger()) {
      mouseButton=RIGHT;
    }
  }
  if (mouseEventMethods != null) {
    mouseEventMethods.handle(new Object[]{event});
  }
  if (firstMouse) {
    pmouseX=mouseX;
    pmouseY=mouseY;
    dmouseX=mouseX;
    dmouseY=mouseY;
    firstMouse=false;
  }
switch (id) {
case MouseEvent.MOUSE_PRESSED:
    mousePressed=true;
  mousePressed();
break;
case MouseEvent.MOUSE_RELEASED:
mousePressed=false;
mouseReleased();
break;
case MouseEvent.MOUSE_CLICKED:
mouseClicked();
break;
case MouseEvent.MOUSE_DRAGGED:
mouseDragged();
break;
case MouseEvent.MOUSE_MOVED:
mouseMoved();
break;
}
if ((id == MouseEvent.MOUSE_DRAGGED) || (id == MouseEvent.MOUSE_MOVED)) {
emouseX=mouseX;
emouseY=mouseY;
}
}
