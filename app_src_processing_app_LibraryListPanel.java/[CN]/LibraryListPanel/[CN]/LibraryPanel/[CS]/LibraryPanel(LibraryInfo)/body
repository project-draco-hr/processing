{
  this.libInfo=libInfo;
  setLayout(new BoxLayout(this,BoxLayout.Y_AXIS));
  generateAuthorStrings();
  hyperlinkOpener=new HyperlinkListener(){
    public void hyperlinkUpdate(    HyperlinkEvent e){
      if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
        Base.openURL(e.getURL().toString());
      }
    }
  }
;
  setBorder(BorderFactory.createEmptyBorder(topAndBottomBorder,2,topAndBottomBorder,2));
  addPaneComponents();
  addProgressBarAndButton();
  setFocusable(true);
  setShowInfo(false);
  updateColors();
  MouseAdapter expandPanelMouseListener=new MouseAdapter(){
    public void mousePressed(    MouseEvent e){
      for (      Component c : LibraryListPanel.this.getComponents()) {
        if (c instanceof LibraryPanel) {
          LibraryPanel lp=(LibraryPanel)c;
          if (lp.isInfoShown) {
            lp.setShowInfo(false);
            break;
          }
        }
      }
      setShowInfo(true);
      updateColors();
      getParent().requestFocusInWindow();
    }
  }
;
  addMouseListener(expandPanelMouseListener);
  authorLabel.addMouseListener(expandPanelMouseListener);
  descriptionText.addMouseListener(expandPanelMouseListener);
}
