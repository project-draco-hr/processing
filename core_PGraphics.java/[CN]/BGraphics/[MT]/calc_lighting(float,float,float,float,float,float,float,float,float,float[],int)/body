{
  if (!lighting) {
    target[toffset + 0]=r;
    target[toffset + 1]=g;
    target[toffset + 2]=b;
    return;
  }
  float nlen=mag(nx,ny,nz);
  if (nlen != 0) {
    nx/=nlen;
    ny/=nlen;
    nz/=nlen;
  }
  float diffuse_r=0;
  float diffuse_g=0;
  float diffuse_b=0;
  for (int i=1; i < MAX_LIGHTS; i++) {
    if (lightKind[i] == DISABLED)     break;
    float lix=lightX[i] - ix;
    float liy=lightY[i] - iy;
    float liz=lightZ[i] - iz;
    float m=mag(lix,liy,liz);
    if (m != 0) {
      lix/=m;
      liy/=m;
      liz/=m;
    }
    float n_dot_li=(nx * lix + ny * liy + nz * liz);
    if (n_dot_li > 0) {
      diffuse_r+=lightR[i] * n_dot_li;
      diffuse_g+=lightG[i] * n_dot_li;
      diffuse_b+=lightB[i] * n_dot_li;
    }
  }
  target[toffset + 0]=lightR[0] + (r * diffuse_r);
  target[toffset + 1]=lightG[0] + (g * diffuse_g);
  target[toffset + 2]=lightB[0] + (b * diffuse_b);
  if (target[toffset + 0] > ONE)   target[toffset + 0]=ONE;
  if (target[toffset + 1] > ONE)   target[toffset + 1]=ONE;
  if (target[toffset + 2] > ONE)   target[toffset + 2]=ONE;
}
