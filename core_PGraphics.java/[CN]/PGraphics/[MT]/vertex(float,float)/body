{
  splineVertexCount=0;
  float vertex[];
  if (vertexCount == vertices.length) {
    float temp[][]=new float[vertexCount << 1][VERTEX_FIELD_COUNT];
    System.arraycopy(vertices,0,temp,0,vertexCount);
    vertices=temp;
  }
  vertices[vertexCount][MX]=x;
  vertices[vertexCount][MY]=y;
  vertexCount++;
switch (shape) {
case POINTS:
    point(x,y);
  break;
case LINES:
if ((vertexCount % 2) == 0) {
  line(vertices[vertexCount - 2][MX],vertices[vertexCount - 2][MY],x,y);
}
break;
case LINE_STRIP:
case LINE_LOOP:
if (vertexCount == 1) {
path=new Path();
path.moveTo(x,y);
}
 else {
path.lineTo(x,y);
}
break;
case TRIANGLES:
if ((vertexCount % 3) == 0) {
triangle(vertices[vertexCount - 3][MX],vertices[vertexCount - 3][MY],vertices[vertexCount - 2][MX],vertices[vertexCount - 2][MY],x,y);
}
break;
case TRIANGLE_STRIP:
if (vertexCount == 3) {
triangle(vertices[0][MX],vertices[0][MY],vertices[1][MX],vertices[1][MY],x,y);
}
 else if (vertexCount > 3) {
path=new Path();
path.moveTo(vertices[vertexCount - 2][MX],vertices[vertexCount - 2][MY]);
path.lineTo(vertices[vertexCount - 1][MX],vertices[vertexCount - 1][MY]);
path.lineTo(vertices[vertexCount - 3][MX],vertices[vertexCount - 3][MY]);
draw_shape(path);
}
break;
case TRIANGLE_FAN:
if (vertexCount == 3) {
triangle(vertices[0][MX],vertices[0][MY],vertices[1][MX],vertices[1][MY],x,y);
}
 else if (vertexCount > 3) {
path=new Path();
path.moveTo(vertices[0][MX],vertices[0][MY]);
path.lineTo(vertices[vertexCount - 2][MX],vertices[vertexCount - 2][MY]);
path.lineTo(x,y);
draw_shape(path);
}
break;
case QUADS:
if ((vertexCount % 4) == 0) {
quad(vertices[vertexCount - 4][MX],vertices[vertexCount - 4][MY],vertices[vertexCount - 3][MX],vertices[vertexCount - 3][MY],vertices[vertexCount - 2][MX],vertices[vertexCount - 2][MY],x,y);
}
break;
case QUAD_STRIP:
if (vertexCount == 4) {
quad(vertices[0][MX],vertices[0][MY],vertices[2][MX],vertices[2][MY],x,y,vertices[1][MX],vertices[1][MY]);
}
 else if (vertexCount > 4) {
path=new Path();
path.moveTo(vertices[vertexCount - 3][MX],vertices[vertexCount - 3][MY]);
path.lineTo(vertices[vertexCount - 1][MX],vertices[vertexCount - 1][MY]);
path.lineTo(x,y);
path.lineTo(vertices[vertexCount - 2][MX],vertices[vertexCount - 2][MY]);
draw_shape(path);
}
break;
case POLYGON:
if (vertexCount == 1) {
path=new Path();
path.moveTo(x,y);
}
 else {
path.lineTo(x,y);
}
break;
}
}
