{
  if (y2 < y1) {
    int temp=y1;
    y1=y2;
    y2=temp;
  }
  if (x2 < x1) {
    int temp=x1;
    x1=x2;
    x2=temp;
  }
  if ((x1 > width1) || (x2 < 0) || (y1 > height1)|| (y2 < 0))   return;
  if (fill) {
    int fx1=x1;
    int fy1=y1;
    int fx2=x2;
    int fy2=y2;
    if (fx1 < 0)     fx1=0;
    if (fx2 > width)     fx2=width;
    if (fy1 < 0)     fy1=0;
    if (fy2 > height)     fy2=height;
    int ww=fx2 - fx1;
    int hh=fy2 - fy1;
    int[] row=new int[ww];
    for (int i=0; i < ww; i++)     row[i]=fillColor;
    int idx=fy1 * width + fx1;
    for (int y=0; y < hh; y++) {
      System.arraycopy(row,0,pixels,idx,ww);
      idx+=width;
    }
    row=null;
  }
  if (!hints[NEW_GRAPHICS]) {
    if (stroke) {
      if (strokeWeight == 1) {
        thin_flat_line(x1,y1,x2,y1);
        thin_flat_line(x2,y1,x2,y2);
        thin_flat_line(x2,y2,x1,y2);
        thin_flat_line(x1,y2,x1,y1);
      }
 else {
        thick_flat_line(x1,y1,fillR,fillG,fillB,fillA,x2,y1,fillR,fillG,fillB,fillA);
        thick_flat_line(x2,y1,fillR,fillG,fillB,fillA,x2,y2,fillR,fillG,fillB,fillA);
        thick_flat_line(x2,y2,fillR,fillG,fillB,fillA,x1,y2,fillR,fillG,fillB,fillA);
        thick_flat_line(x1,y2,fillR,fillG,fillB,fillA,x1,y1,fillR,fillG,fillB,fillA);
      }
    }
  }
}
