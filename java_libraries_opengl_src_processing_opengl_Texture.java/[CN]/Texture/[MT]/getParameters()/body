{
  Parameters res=new Parameters();
  if (glTarget == PGL.GL_TEXTURE_2D) {
    res.target=TEX2D;
  }
  if (glFormat == PGL.GL_RGB) {
    res.format=RGB;
  }
 else   if (glFormat == PGL.GL_RGBA) {
    res.format=ARGB;
  }
 else   if (glFormat == PGL.GL_ALPHA) {
    res.format=ALPHA;
  }
  if (glMagFilter == PGL.GL_NEAREST && glMinFilter == PGL.GL_NEAREST) {
    res.sampling=POINT;
    res.mipmaps=false;
  }
 else   if (glMagFilter == PGL.GL_NEAREST && glMinFilter == PGL.GL_LINEAR) {
    res.sampling=LINEAR;
    res.mipmaps=false;
  }
 else   if (glMagFilter == PGL.GL_NEAREST && glMinFilter == PGL.GL_LINEAR_MIPMAP_NEAREST) {
    res.sampling=LINEAR;
    res.mipmaps=true;
  }
 else   if (glMagFilter == PGL.GL_LINEAR && glMinFilter == PGL.GL_LINEAR) {
    res.sampling=BILINEAR;
    res.mipmaps=false;
  }
 else   if (glMagFilter == PGL.GL_LINEAR && glMinFilter == PGL.GL_LINEAR_MIPMAP_NEAREST) {
    res.sampling=BILINEAR;
    res.mipmaps=true;
  }
 else   if (glMagFilter == PGL.GL_LINEAR && glMinFilter == PGL.GL_LINEAR_MIPMAP_LINEAR) {
    res.sampling=TRILINEAR;
    res.mipmaps=true;
  }
  if (glWrapS == PGL.GL_CLAMP_TO_EDGE) {
    res.wrapU=CLAMP;
  }
 else   if (glWrapS == PGL.GL_REPEAT) {
    res.wrapU=REPEAT;
  }
  if (glWrapT == PGL.GL_CLAMP_TO_EDGE) {
    res.wrapV=CLAMP;
  }
 else   if (glWrapT == PGL.GL_REPEAT) {
    res.wrapV=REPEAT;
  }
  return res;
}
