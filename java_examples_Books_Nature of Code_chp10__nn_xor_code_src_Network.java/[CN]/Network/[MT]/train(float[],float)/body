{
  float result=feedForward(inputs);
  float deltaOutput=result * (1 - result) * (answer - result);
  ArrayList connections=output.getConnections();
  for (int i=0; i < connections.size(); i++) {
    Connection c=(Connection)connections.get(i);
    Neuron neuron=c.getFrom();
    float output=neuron.getOutput();
    float deltaWeight=output * deltaOutput;
    c.adjustWeight(LEARNING_CONSTANT * deltaWeight);
  }
  for (int i=0; i < hidden.length; i++) {
    connections=hidden[i].getConnections();
    float sum=0;
    for (int j=0; j < connections.size(); j++) {
      Connection c=(Connection)connections.get(j);
      if (c.getFrom() == hidden[i]) {
        sum+=c.getWeight() * deltaOutput;
      }
    }
    for (int j=0; j < connections.size(); j++) {
      Connection c=(Connection)connections.get(j);
      if (c.getTo() == hidden[i]) {
        float output=hidden[i].getOutput();
        float deltaHidden=output * (1 - output);
        deltaHidden*=sum;
        Neuron neuron=c.getFrom();
        float deltaWeight=neuron.getOutput() * deltaHidden;
        c.adjustWeight(LEARNING_CONSTANT * deltaWeight);
      }
    }
  }
  return result;
}
