{
  if (!pointVBOsCreated) {
    createPointBuffers();
    pointVBOsCreated=true;
  }
  updatePointBuffers();
  PointShader shader=getPointShader();
  shader.start();
  shader.setVertexAttribute(glPointVertexBufferID,3,PGL.GL_FLOAT,0,0);
  shader.setColorAttribute(glPointColorBufferID,4,PGL.GL_UNSIGNED_BYTE,0,0);
  shader.setSizeAttribute(glPointSizeBufferID,2,PGL.GL_FLOAT,0,0);
  int size=tessGeo.pointIndexCount;
  pgl.glDrawElements(PGL.GL_TRIANGLES,size,PGL.INDEX_TYPE,0);
  pgl.glBindBuffer(PGL.GL_ELEMENT_ARRAY_BUFFER,0);
  shader.stop();
}
