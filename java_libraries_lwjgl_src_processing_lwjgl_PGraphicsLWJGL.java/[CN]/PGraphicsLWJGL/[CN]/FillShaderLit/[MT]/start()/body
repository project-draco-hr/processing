{
  super.start();
  if (-1 < inVertexLoc)   pgl.glEnableVertexAttribArray(inVertexLoc);
  if (-1 < inColorLoc)   pgl.glEnableVertexAttribArray(inColorLoc);
  if (-1 < inNormalLoc)   pgl.glEnableVertexAttribArray(inNormalLoc);
  if (-1 < inAmbientLoc)   pgl.glEnableVertexAttribArray(inAmbientLoc);
  if (-1 < inSpecularLoc)   pgl.glEnableVertexAttribArray(inSpecularLoc);
  if (-1 < inEmissiveLoc)   pgl.glEnableVertexAttribArray(inEmissiveLoc);
  if (-1 < inShineLoc)   pgl.glEnableVertexAttribArray(inShineLoc);
  updateGLProjmodelview();
  set4x4MatUniform(projmodelviewMatrixLoc,glProjmodelview);
  updateGLModelview();
  set4x4MatUniform(modelviewMatrixLoc,glModelview);
  updateGLNormal();
  set3x3MatUniform(normalMatrixLoc,glNormal);
  setIntUniform(lightCountLoc,lightCount);
  set4FloatVecUniform(lightPositionLoc,lightPosition);
  set3FloatVecUniform(lightNormalLoc,lightNormal);
  set3FloatVecUniform(lightAmbientLoc,lightAmbient);
  set3FloatVecUniform(lightDiffuseLoc,lightDiffuse);
  set3FloatVecUniform(lightSpecularLoc,lightSpecular);
  set3FloatVecUniform(lightFalloffCoefficientsLoc,lightFalloffCoefficients);
  set2FloatVecUniform(lightSpotParametersLoc,lightSpotParameters);
}
