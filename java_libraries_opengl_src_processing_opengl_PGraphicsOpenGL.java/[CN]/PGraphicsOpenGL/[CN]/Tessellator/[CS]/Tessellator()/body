{
  sinLUT=new float[SINCOS_LENGTH];
  cosLUT=new float[SINCOS_LENGTH];
  for (int i=0; i < SINCOS_LENGTH; i++) {
    sinLUT[i]=(float)Math.sin(i * DEG_TO_RAD * SINCOS_PRECISION);
    cosLUT[i]=(float)Math.cos(i * DEG_TO_RAD * SINCOS_PRECISION);
  }
  glu=new GLU();
  gluTess=GLU.gluNewTess();
  GLUTessCallback tessCallback;
  tessCallback=new GLUTessCallback();
  GLU.gluTessCallback(gluTess,GLU.GLU_TESS_BEGIN,tessCallback);
  GLU.gluTessCallback(gluTess,GLU.GLU_TESS_END,tessCallback);
  GLU.gluTessCallback(gluTess,GLU.GLU_TESS_VERTEX,tessCallback);
  GLU.gluTessCallback(gluTess,GLU.GLU_TESS_COMBINE,tessCallback);
  GLU.gluTessCallback(gluTess,GLU.GLU_TESS_ERROR,tessCallback);
}
