{
  int nInVert=inGeo.lastVertex - inGeo.firstVertex + 1;
  if (fill && 3 <= nInVert) {
    tessGeo.addFillVertices(inGeo);
    int triCount=nInVert - 2;
    tessGeo.addFillIndices(3 * triCount);
    int idx=tessGeo.firstFillIndex;
    int offset=tessGeo.firstFillVertex;
    for (int i=inGeo.firstVertex + 1; i < inGeo.lastVertex; i++) {
      tessGeo.fillIndices[idx++]=offset + i;
      if (i % 2 == 0) {
        tessGeo.fillIndices[idx++]=offset + i - 1;
        tessGeo.fillIndices[idx++]=offset + i + 1;
      }
 else {
        tessGeo.fillIndices[idx++]=offset + i + 1;
        tessGeo.fillIndices[idx++]=offset + i - 1;
      }
    }
  }
  if (stroke) {
    tessGeo.isStroked=true;
    tessellateEdges();
  }
}
