{
  int nInVert=in.lastVertex - in.firstVertex + 1;
  if (fill && 4 <= nInVert) {
    int quadCount=nInVert / 4;
    int nInInd=6 * quadCount;
    checkForFlush(tess.fillVertexCount + nInVert,tess.fillIndexCount + nInInd);
    tess.addFillVertices(in);
    tess.addFillIndices(nInInd);
    int idx=tess.firstFillIndex;
    int offset=tess.firstFillVertex;
    for (int qd=0; qd < quadCount; qd++) {
      int i0=offset + 4 * qd + 0;
      int i1=offset + 4 * qd + 1;
      int i2=offset + 4 * qd + 2;
      int i3=offset + 4 * qd + 3;
      tess.fillIndices.put(idx++,PGL.makeIndex(i0));
      tess.fillIndices.put(idx++,PGL.makeIndex(i1));
      tess.fillIndices.put(idx++,PGL.makeIndex(i3));
      tess.fillIndices.put(idx++,PGL.makeIndex(i1));
      tess.fillIndices.put(idx++,PGL.makeIndex(i2));
      tess.fillIndices.put(idx++,PGL.makeIndex(i3));
    }
  }
  if (stroke) {
    tess.isStroked=true;
    tessellateEdges();
  }
}
