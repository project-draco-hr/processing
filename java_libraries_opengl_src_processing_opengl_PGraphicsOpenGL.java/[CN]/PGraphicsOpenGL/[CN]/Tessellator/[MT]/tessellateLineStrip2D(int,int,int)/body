{
  if (strokeWeight < PGL.MIN_CAPS_JOINS_WEIGHT) {
    tess.polyVertexCheck(nvert);
    tess.polyIndexCheck(nind);
    int index=in.renderMode == RETAINED ? tess.polyIndexCache.addNew() : tess.polyIndexCache.getLast();
    firstLineIndexCache=index;
    int i0=in.firstVertex;
    for (int ln=0; ln < lineCount; ln++) {
      int i1=in.firstVertex + ln + 1;
      index=addLine2D(i0,i1,index,false);
      i0=i1;
    }
    lastLineIndexCache=lastPolyIndexCache=index;
  }
 else {
    int first=in.firstVertex;
    LinePath path=new LinePath(LinePath.WIND_NON_ZERO);
    path.moveTo(in.vertices[3 * first + 0],in.vertices[3 * first + 1]);
    if (tess.renderMode == RETAINED) {
    }
    for (int ln=0; ln < lineCount; ln++) {
      int i1=first + ln + 1;
      path.lineTo(in.vertices[3 * i1 + 0],in.vertices[3 * i1 + 1]);
      if (tess.renderMode == RETAINED) {
      }
    }
    tessellateLinePath(path);
  }
}
