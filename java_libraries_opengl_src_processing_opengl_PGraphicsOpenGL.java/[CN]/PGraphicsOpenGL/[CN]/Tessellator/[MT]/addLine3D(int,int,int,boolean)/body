{
  IndexCache cache=tess.lineIndexCache;
  int count=cache.vertexCount[index];
  if (PGL.MAX_VERTEX_INDEX1 <= count + 4) {
    index=cache.addNew();
    count=0;
  }
  int iidx=cache.indexOffset[index] + cache.indexCount[index];
  int vidx=cache.vertexOffset[index] + cache.vertexCount[index];
  int color;
  float weight;
  color=constStroke ? strokeColor : in.strokeColors[i0];
  weight=constStroke ? strokeWeight : in.strokeWeights[i0];
  tess.setLineVertex(vidx,in,i0,i1,color,+weight / 2);
  tess.lineIndices[iidx++]=(short)(count + 0);
  vidx++;
  tess.setLineVertex(vidx,in,i0,i1,color,-weight / 2);
  tess.lineIndices[iidx++]=(short)(count + 1);
  color=constStroke ? strokeColor : in.strokeColors[i1];
  weight=constStroke ? strokeWeight : in.strokeWeights[i1];
  vidx++;
  tess.setLineVertex(vidx,in,i1,i0,color,-weight / 2);
  tess.lineIndices[iidx++]=(short)(count + 2);
  tess.lineIndices[iidx++]=(short)(count + 2);
  tess.lineIndices[iidx++]=(short)(count + 1);
  vidx++;
  tess.setLineVertex(vidx,in,i1,i0,color,+weight / 2);
  tess.lineIndices[iidx++]=(short)(count + 3);
  cache.incCounts(index,6,4);
  return index;
}
