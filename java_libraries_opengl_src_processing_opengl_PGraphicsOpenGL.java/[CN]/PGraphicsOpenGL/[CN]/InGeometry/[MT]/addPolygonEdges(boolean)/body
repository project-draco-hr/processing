{
  int edgeCount=0;
  int lnMax=lastVertex - firstVertex + 1;
  int first=firstVertex;
  int contour0=first;
  if (!closed)   lnMax--;
  for (int ln=0; ln < lnMax; ln++) {
    int i=first + ln + 1;
    if ((i == lnMax || breaks[i]) && closed) {
      i=first + ln;
    }
    if (!breaks[i]) {
      edgeCount++;
    }
  }
  if (0 < edgeCount) {
    boolean begin=true;
    contour0=first;
    for (int ln=0; ln < lnMax; ln++) {
      int i0=first + ln;
      int i1=first + ln + 1;
      if (breaks[i0])       contour0=i0;
      if (i1 == lnMax || breaks[i1]) {
        if (closed) {
          i0=first + ln;
          i1=contour0;
          addEdge(i0,i1,begin,true);
        }
 else         if (!breaks[i1]) {
          addEdge(i0,i1,begin,false);
        }
        begin=true;
      }
 else       if (!breaks[i1]) {
        addEdge(i0,i1,begin,false);
      }
    }
  }
}
