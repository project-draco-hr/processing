{
  PolyShader shader;
  if (lit) {
    if (tex) {
      if (defPolyShaderFull == null || defPolyShaderFull.contextIsOutdated()) {
        defPolyShaderFull=new PolyShaderFull(parent,defPolyShaderVertFullURL,defPolyShaderFragTexURL);
      }
      if (polyShaderFull == null || polyShaderFull.contextIsOutdated()) {
        polyShaderFull=defPolyShaderFull;
      }
      shader=polyShaderFull;
    }
 else {
      if (defPolyShaderLit == null || defPolyShaderLit.contextIsOutdated()) {
        defPolyShaderLit=new PolyShaderLit(parent,defPolyShaderVertLitURL,defPolyShaderFragNoTexURL);
      }
      if (polyShaderLit == null || polyShaderLit.contextIsOutdated()) {
        polyShaderLit=defPolyShaderLit;
      }
      shader=polyShaderLit;
    }
  }
 else {
    if (tex) {
      if (defPolyShaderTex == null || defPolyShaderTex.contextIsOutdated()) {
        defPolyShaderTex=new PolyShaderTex(parent,defPolyShaderVertTexURL,defPolyShaderFragTexURL);
      }
      if (polyShaderTex == null || polyShaderTex.contextIsOutdated()) {
        polyShaderTex=defPolyShaderTex;
      }
      shader=polyShaderTex;
    }
 else {
      if (defPolyShaderSimple == null || defPolyShaderSimple.contextIsOutdated()) {
        defPolyShaderSimple=new PolyShaderSimple(parent,defPolyShaderVertSimpleURL,defPolyShaderFragNoTexURL);
      }
      if (polyShaderSimple == null || polyShaderSimple.contextIsOutdated()) {
        polyShaderSimple=defPolyShaderSimple;
      }
      shader=polyShaderSimple;
    }
  }
  shader.setRenderer(this);
  shader.loadAttributes();
  shader.loadUniforms();
  return shader;
}
