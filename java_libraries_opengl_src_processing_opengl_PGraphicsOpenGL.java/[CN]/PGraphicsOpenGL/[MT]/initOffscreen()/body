{
  ogl=(PGraphicsOpenGL)parent.g;
  context=ogl.getContext();
  capabilities=ogl.getCapabilities();
  drawable=null;
  registerPGLObject(this);
  getGLProfiles();
  loadTextureImpl(BILINEAR);
  if (offscreenFramebuffer != null) {
    offscreenFramebuffer.delete();
    offscreenFramebuffer=null;
  }
  if (offscreenFramebufferMultisample != null) {
    offscreenFramebufferMultisample.delete();
    offscreenFramebufferMultisample=null;
  }
  boolean opengl2X=!hints[DISABLE_OPENGL_2X_SMOOTH];
  boolean opengl4X=hints[ENABLE_OPENGL_4X_SMOOTH];
  if (PGraphicsOpenGL.fboMultisampleSupported && gl2x != null && (opengl2X || opengl4X)) {
    int nsamples=1;
    if (opengl2X) {
      nsamples=2;
    }
 else     if (opengl4X) {
      nsamples=4;
    }
    offscreenFramebufferMultisample=new PFramebuffer(parent,texture.glWidth,texture.glHeight,nsamples,0,offscreenDepthBits,offscreenStencilBits,offscreenDepthBits == 24 && offscreenStencilBits == 8,false);
    offscreenFramebufferMultisample.clear();
    offscreenMultisample=true;
    offscreenFramebuffer=new PFramebuffer(parent,texture.glWidth,texture.glHeight,1,1,0,0,false,false);
  }
 else {
    offscreenFramebuffer=new PFramebuffer(parent,texture.glWidth,texture.glHeight,1,1,offscreenDepthBits,offscreenStencilBits,offscreenDepthBits == 24 && offscreenStencilBits == 8,false);
    offscreenMultisample=false;
  }
  offscreenFramebuffer.setColorBuffer(texture);
  offscreenFramebuffer.clear();
}
