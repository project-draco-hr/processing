{
  screenBlendMode=mode;
  gl.glEnable(GL.GL_BLEND);
  if (mode == REPLACE) {
    if (blendEqSupported)     gl.glBlendEquation(GL.GL_FUNC_ADD);
    gl.glBlendFunc(GL.GL_ONE,GL.GL_ZERO);
  }
 else   if (mode == BLEND) {
    if (blendEqSupported)     gl.glBlendEquation(GL.GL_FUNC_ADD);
    gl.glBlendFunc(GL.GL_SRC_ALPHA,GL.GL_ONE_MINUS_SRC_ALPHA);
  }
 else   if (mode == ADD) {
    if (blendEqSupported)     gl.glBlendEquation(GL.GL_FUNC_ADD);
    gl.glBlendFunc(GL.GL_SRC_ALPHA,GL.GL_ONE);
  }
 else   if (mode == SUBTRACT) {
    if (blendEqSupported)     gl.glBlendEquation(GL.GL_FUNC_ADD);
    gl.glBlendFunc(GL.GL_ONE_MINUS_DST_COLOR,GL.GL_ZERO);
  }
 else   if (mode == LIGHTEST) {
    if (blendEqSupported) {
      gl.glBlendEquation(GL2.GL_MAX);
      gl.glBlendFunc(GL.GL_SRC_ALPHA,GL.GL_DST_ALPHA);
    }
 else {
      PGraphics.showWarning("P3D: This blend mode is currently unsupported.");
    }
  }
 else   if (mode == DARKEST) {
    if (blendEqSupported) {
      gl.glBlendEquation(GL2.GL_MIN);
      gl.glBlendFunc(GL.GL_SRC_ALPHA,GL.GL_DST_ALPHA);
    }
 else {
      PGraphics.showWarning("P3D: This blend mode is currently unsupported.");
    }
  }
 else   if (mode == DIFFERENCE) {
    if (blendEqSupported) {
      gl.glBlendEquation(GL.GL_FUNC_REVERSE_SUBTRACT);
      gl.glBlendFunc(GL.GL_ONE,GL.GL_ONE);
    }
 else {
      PGraphics.showWarning("P3D: This blend mode is currently unsupported.");
    }
  }
 else   if (mode == EXCLUSION) {
    if (blendEqSupported)     gl.glBlendEquation(GL.GL_FUNC_ADD);
    gl.glBlendFunc(GL.GL_ONE_MINUS_DST_COLOR,GL.GL_ONE_MINUS_SRC_COLOR);
  }
 else   if (mode == MULTIPLY) {
    if (blendEqSupported)     gl.glBlendEquation(GL.GL_FUNC_ADD);
    gl.glBlendFunc(GL.GL_DST_COLOR,GL.GL_SRC_COLOR);
  }
 else   if (mode == SCREEN) {
    if (blendEqSupported)     gl.glBlendEquation(GL.GL_FUNC_ADD);
    gl.glBlendFunc(GL.GL_ONE_MINUS_DST_COLOR,GL.GL_ONE);
  }
}
