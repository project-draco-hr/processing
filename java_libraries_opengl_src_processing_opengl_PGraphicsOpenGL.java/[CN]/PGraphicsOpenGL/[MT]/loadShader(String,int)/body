{
  PShader shader;
  if (kind == POLY_SHADER_SIMPLE) {
    shader=new PolyShaderSimple(parent);
    shader.setVertexShader(defPolyShaderVertSimpleURL);
  }
 else   if (kind == POLY_SHADER_LIT) {
    shader=new PolyShaderLit(parent);
    shader.setVertexShader(defPolyShaderVertLitURL);
  }
 else   if (kind == POLY_SHADER_TEX) {
    shader=new PolyShaderTex(parent);
    shader.setVertexShader(defPolyShaderVertTexURL);
  }
 else   if (kind == POLY_SHADER_FULL) {
    shader=new PolyShaderFull(parent);
    shader.setVertexShader(defPolyShaderVertFullURL);
  }
 else   if (kind == LINE_SHADER) {
    shader=new LineShader(parent);
    shader.setVertexShader(defLineShaderVertURL);
  }
 else   if (kind == POINT_SHADER) {
    shader=new PointShader(parent);
    shader.setVertexShader(defPointShaderVertURL);
  }
 else {
    PGraphics.showWarning("Wrong shader type");
    return null;
  }
  shader.setFragmentShader(fragFilename);
  return shader;
}
