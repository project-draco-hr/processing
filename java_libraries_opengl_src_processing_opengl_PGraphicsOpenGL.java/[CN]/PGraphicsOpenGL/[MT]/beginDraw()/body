{
  if (drawable != null) {
    drawable.setRealized(parent.isDisplayable());
    if (parent.isDisplayable()) {
      drawable.setRealized(true);
    }
 else {
      return;
    }
    detainContext();
  }
  super.beginDraw();
  report("top beginDraw()");
  gl.glDisable(GL.GL_LIGHTING);
  for (int i=0; i < MAX_LIGHTS; i++) {
    gl.glDisable(GL.GL_LIGHT0 + i);
  }
  gl.glViewport(0,0,width,height);
  if (resized) {
    background(0);
    resized=false;
  }
  updateProjection();
  gl.glMatrixMode(GL.GL_MODELVIEW);
  gl.glLoadIdentity();
  gl.glScalef(1,-1,1);
  gl.glEnable(GL.GL_BLEND);
  gl.glBlendFunc(GL.GL_SRC_ALPHA,GL.GL_ONE_MINUS_SRC_ALPHA);
  if (hints[DISABLE_DEPTH_TEST]) {
    gl.glDisable(GL.GL_DEPTH_TEST);
  }
 else {
    gl.glEnable(GL.GL_DEPTH_TEST);
  }
  gl.glDepthFunc(GL.GL_LEQUAL);
  gl.glFrontFace(GL.GL_CW);
  gl.glEnable(GL.GL_COLOR_MATERIAL);
  gl.glColorMaterial(GL.GL_FRONT_AND_BACK,GL.GL_AMBIENT_AND_DIFFUSE);
  gl.glColorMaterial(GL.GL_FRONT_AND_BACK,GL.GL_SPECULAR);
  report("bot beginDraw()");
}
