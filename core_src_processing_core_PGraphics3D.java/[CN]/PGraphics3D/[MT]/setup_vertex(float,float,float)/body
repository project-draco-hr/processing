{
  if (vertexCount == vertices.length) {
    float temp[][]=new float[vertexCount << 1][VERTEX_FIELD_COUNT];
    System.arraycopy(vertices,0,temp,0,vertexCount);
    vertices=temp;
    int temp2[]=new int[vertexCount << 1];
    System.arraycopy(vertex_order,0,temp2,0,vertexCount);
    vertex_order=temp2;
  }
  float vertex[]=vertices[vertexCount];
  if (shape == POLYGON) {
    if (vertexCount > 0) {
      float pvertex[]=vertices[vertexCount - 1];
      if ((abs(pvertex[MX] - x) < EPSILON) && (abs(pvertex[MY] - y) < EPSILON) && (abs(pvertex[MZ] - z) < EPSILON)) {
        return;
      }
    }
  }
  splineVertexCount=0;
  vertex[MX]=x;
  vertex[MY]=y;
  vertex[MZ]=z;
  if (fill) {
    vertex[R]=fillR;
    vertex[G]=fillG;
    vertex[B]=fillB;
    vertex[A]=fillA;
    vertex[AR]=ambientR;
    vertex[AG]=ambientG;
    vertex[AB]=ambientB;
    vertex[SPR]=specularR;
    vertex[SPG]=specularG;
    vertex[SPB]=specularB;
    vertex[SPA]=specularA;
    vertex[SHINE]=shininess;
    vertex[ER]=emissiveR;
    vertex[EG]=emissiveG;
    vertex[EB]=emissiveB;
  }
  if (stroke) {
    vertex[SR]=strokeR;
    vertex[SG]=strokeG;
    vertex[SB]=strokeB;
    vertex[SA]=strokeA;
    vertex[SW]=strokeWeight;
  }
  if (textureImage != null) {
    vertex[U]=textureU;
    vertex[V]=textureV;
  }
  vertex[NX]=normalX;
  vertex[NY]=normalY;
  vertex[NZ]=normalZ;
  vertex[BEEN_LIT]=0;
  vertexCount++;
}
