{
  if (lights) {
    if (!lightingDependsOnVertexPosition && normalMode == NORMAL_MODE_SHAPE) {
      calcLightingContribution(shapeFirst,tempLightingContribution);
      for (int tri=0; tri < triangleCount; tri++) {
        light_triangle(tri,tempLightingContribution);
      }
    }
 else {
      for (int tri=0; tri < triangleCount; tri++) {
        light_triangle(tri);
      }
    }
  }
 else {
    int vIndex;
    for (int tri=0; tri < triangleCount; tri++) {
      vIndex=triangles[tri][VERTEX1];
      copy_prelit_vertex_color_to_triangle(tri,vIndex,0);
      vIndex=triangles[tri][VERTEX2];
      copy_prelit_vertex_color_to_triangle(tri,vIndex,1);
      vIndex=triangles[tri][VERTEX3];
      copy_prelit_vertex_color_to_triangle(tri,vIndex,2);
    }
  }
}
