{
  width=iwidth;
  height=iheight;
  width1=width - 1;
  height1=height - 1;
  allocate();
  reapplySettings();
  cameraFOV=60 * DEG_TO_RAD;
  cameraX=width / 2.0f;
  cameraY=height / 2.0f;
  cameraZ=cameraY / ((float)tan(cameraFOV / 2.0f));
  cameraNear=cameraZ / 10.0f;
  cameraFar=cameraZ * 10.0f;
  cameraAspect=(float)width / (float)height;
  lightType=new int[MAX_LIGHTS];
  lightPosition=new float[MAX_LIGHTS][3];
  lightDiffuse=new float[MAX_LIGHTS][3];
  lightNormal=new float[MAX_LIGHTS][3];
  lightSpecular=new float[MAX_LIGHTS][3];
  lightFalloffConstant=new float[MAX_LIGHTS];
  lightFalloffLinear=new float[MAX_LIGHTS];
  lightFalloffQuadratic=new float[MAX_LIGHTS];
  lightSpotAngle=new float[MAX_LIGHTS];
  lightSpotAngleCos=new float[MAX_LIGHTS];
  lightSpotConcentration=new float[MAX_LIGHTS];
  currentLightSpecular=new float[3];
  projection=new PMatrix();
  modelview=new PMatrix(MATRIX_STACK_DEPTH);
  modelviewInv=new PMatrix(MATRIX_STACK_DEPTH);
  forwardTransform=modelview;
  reverseTransform=modelviewInv;
  camera=new PMatrix();
  cameraInv=new PMatrix();
  camera();
  perspective();
}
