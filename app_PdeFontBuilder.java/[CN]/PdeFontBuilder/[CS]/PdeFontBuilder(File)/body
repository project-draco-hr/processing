{
  super("Create Font");
  this.targetFolder=targetFolder;
  Container pain=getContentPane();
  pain.setLayout(new BoxLayout(pain,BoxLayout.Y_AXIS));
  String labelText="Use this tool to create bitmap fonts for your program.\n" + "Select a font and size, and click 'OK' to generate the font.\n" + "It will be added to the data folder of the current sketch.";
  JTextArea textarea=new JTextArea(labelText);
  textarea.setBorder(new EmptyBorder(10,20,10,20));
  textarea.setFont(new Font("Dialog",Font.PLAIN,12));
  pain.add(textarea);
  String flist[]=Toolkit.getDefaultToolkit().getFontList();
  int index=0;
  for (int i=0; i < flist.length; i++) {
    if ((flist[i].indexOf('.') == 0) || (flist[i].indexOf('#') == 0) || (flist[i].equals("Dialog"))|| (flist[i].equals("DialogInput"))|| (flist[i].equals("Serif"))|| (flist[i].equals("SansSerif"))|| (flist[i].equals("Monospaced")))     continue;
    if (i != index)     flist[index++]=flist[i];
  }
  list=new String[index];
  System.arraycopy(flist,0,list,0,index);
  fontSelector=new JList(list);
  fontSelector.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      selection=e.getFirstIndex();
      okButton.setEnabled(true);
      int fontsize=0;
      try {
        fontsize=Integer.parseInt(sizeSelector.getText().trim());
      }
 catch (      NumberFormatException e2) {
      }
      if (fontsize != 0) {
        font=new Font(list[selection],Font.PLAIN,fontsize);
        sample.setFont(font);
      }
    }
  }
);
  fontSelector.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  JScrollPane fontScroller=new JScrollPane(fontSelector);
  pain.add(fontScroller);
  sample=new JTextArea("The quick brown fox blah blah.");
  pain.add(sample);
  JPanel panel=new JPanel();
  panel.add(new JLabel("Size:"));
  sizeSelector=new JTextField("48 ");
  panel.add(sizeSelector);
  JLabel rec=new JLabel("(Recommended size for 3D use is 48 points)");
  if (PdeBase.platform == PdeBase.MACOSX) {
    rec.setFont(new Font("Dialog",Font.PLAIN,10));
  }
  panel.add(rec);
  pain.add(panel);
  JPanel filestuff=new JPanel();
  filestuff.add(new JLabel("Filename:"));
  filestuff.add(filenameField=new JTextField(25));
  filestuff.add(new JLabel(".vlw"));
  pain.add(filestuff);
  JPanel buttons=new JPanel();
  JButton cancelButton=new JButton("Cancel");
  cancelButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      hide();
    }
  }
);
  okButton=new JButton("OK");
  okButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      build();
    }
  }
);
  okButton.setEnabled(false);
  buttons.add(cancelButton);
  buttons.add(okButton);
  pain.add(buttons);
  getRootPane().setDefaultButton(okButton);
  setResizable(false);
  pack();
  sample.setFont(new Font(list[0],Font.PLAIN,48));
  Dimension screen=Toolkit.getDefaultToolkit().getScreenSize();
  Dimension size=getSize();
  setLocation((screen.width - size.width) / 2,(screen.height - size.height) / 2);
  show();
}
