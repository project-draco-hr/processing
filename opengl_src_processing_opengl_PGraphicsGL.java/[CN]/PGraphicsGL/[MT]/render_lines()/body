{
  report("render_lines in");
  int i=0;
  for (int j=0; j < pathCount; j++) {
    float sw=vertices[lines[i][VERTEX1]][SW];
    if (sw == 0)     continue;
    gl.glLineWidth(sw);
    gl.glBegin(GL.GL_LINE_STRIP);
    if (raw != null) {
      raw.strokeWeight(sw);
    }
    float a[]=vertices[lines[i][VERTEX1]];
    gl.glColor4f(a[SR],a[SG],a[SB],a[SA]);
    gl.glVertex3f(a[VX],a[VY],a[VZ]);
    if (raw != null) {
      if (a[SA] > EPSILON) {
        raw.colorMode(RGB,1);
        raw.beginShape(LINE_STRIP);
        if (raw instanceof PGraphics3) {
          if (a[VW] != 0) {
            raw.stroke(a[SR],a[SG],a[SB],a[SA]);
            raw.vertex(a[VX] / a[VW],a[VY] / a[VW],a[VZ] / a[VW]);
          }
        }
 else {
          raw.stroke(a[SR],a[SG],a[SB],a[SA]);
          raw.vertex(a[X],a[Y]);
        }
      }
    }
    for (int k=0; k < pathLength[j]; k++) {
      float b[]=vertices[lines[i][VERTEX2]];
      gl.glColor4f(b[SR],b[SG],b[SB],b[SA]);
      gl.glVertex3f(b[VX],b[VY],b[VZ]);
      if (raw != null) {
        if (raw instanceof PGraphics3) {
          if ((a[VW] != 0) && (b[VW] != 0)) {
            raw.stroke(b[SR],b[SG],b[SB],b[SA]);
            raw.vertex(b[VX] / b[VW],b[VY] / b[VW],b[VZ] / b[VW]);
          }
        }
 else {
          raw.stroke(b[SR],b[SG],b[SB],b[SA]);
          raw.vertex(b[X],b[Y]);
        }
      }
      i++;
    }
    if (raw != null) {
      raw.endShape();
    }
    gl.glEnd();
  }
  report("render_lines out");
}
