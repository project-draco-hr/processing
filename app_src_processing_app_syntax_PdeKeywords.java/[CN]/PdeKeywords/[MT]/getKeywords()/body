{
  if (keywordColoring == null) {
    try {
      keywordColoring=new KeywordMap(false);
      keywordToReference=new Hashtable();
      InputStream input=Base.getLibStream("keywords.txt");
      InputStreamReader isr=new InputStreamReader(input);
      BufferedReader reader=new BufferedReader(isr);
      String line=null;
      while ((line=reader.readLine()) != null) {
        String pieces[]=processing.core.PApplet.split(line,'\t');
        if (pieces.length >= 2) {
          String keyword=pieces[0].trim();
          String coloring=pieces[1].trim();
          if (coloring.length() > 0) {
            boolean isKey=(coloring.charAt(0) == 'K');
            int num=coloring.charAt(coloring.length() - 1) - '1';
            byte id=(byte)((isKey ? Token.KEYWORD1 : Token.LITERAL1) + num);
            keywordColoring.add(keyword,id);
          }
          if (pieces.length >= 3) {
            String htmlFilename=pieces[2].trim();
            if (htmlFilename.length() > 0) {
              keywordToReference.put(keyword,htmlFilename);
            }
          }
        }
      }
      reader.close();
    }
 catch (    Exception e) {
      Base.showError("Problem loading keywords","Could not load keywords.txt,\n" + "please re-install Processing.",e);
      System.exit(1);
    }
  }
  return keywordColoring;
}
