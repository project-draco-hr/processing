{
  if (keywordColoring == null) {
    keywordColoring=new KeywordMap(false);
  }
  int num=coloring.charAt(coloring.length() - 1) - '1';
  int id=0;
  boolean paren=false;
switch (coloring.charAt(0)) {
case 'K':
    id=Token.KEYWORD1 + num;
  break;
case 'L':
id=Token.LITERAL1 + num;
break;
case 'F':
id=Token.FUNCTION1 + num;
paren=true;
break;
}
keywordColoring.add(keyword,(byte)id,paren);
}
