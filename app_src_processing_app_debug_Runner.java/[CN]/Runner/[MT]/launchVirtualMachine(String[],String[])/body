{
  LaunchingConnector connector=findLaunchingConnector("com.sun.jdi.RawCommandLineLaunch");
  Map arguments=connector.defaultArguments();
  Connector.Argument commandArg=(Connector.Argument)arguments.get("command");
  String addr="127.0.0.1:" + (8000 + (int)(Math.random() * 1000));
  String commandArgs=(PApplet.platform == PConstants.WINDOWS) ? "java -Xrunjdwp:transport=dt_shmem,address=" + addr + ",suspend=y " : "java -Xrunjdwp:transport=dt_socket,address=" + addr + ",suspend=y ";
  for (int i=0; i < vmParams.length; i++) {
    commandArgs=addArgument(commandArgs,vmParams[i],' ');
  }
  if (classParams != null) {
    for (int i=0; i < classParams.length; i++) {
      commandArgs=addArgument(commandArgs,classParams[i],' ');
    }
  }
  commandArg.setValue(commandArgs);
  Connector.Argument addressArg=(Connector.Argument)arguments.get("address");
  addressArg.setValue(addr);
  try {
    return connector.launch(arguments);
  }
 catch (  IOException exc) {
    throw new Error("Unable to launch target VM: " + exc);
  }
catch (  IllegalConnectorArgumentsException exc) {
    throw new Error("Internal error: " + exc);
  }
catch (  VMStartException exc) {
    Process p=exc.process();
    String[] errorStrings=PApplet.loadStrings(p.getErrorStream());
    PApplet.loadStrings(p.getInputStream());
    if (errorStrings != null && errorStrings.length > 1) {
      if (errorStrings[0].indexOf("Invalid maximum heap size") != -1) {
        Base.showWarning("Way Too High","Please lower the value for \u201Cmaximum available memory\u201D in the\n" + "Preferences window. For more information, read Help \u2192 Troubleshooting.",exc);
      }
 else {
        PApplet.println(errorStrings);
        System.err.println("Using startup command:");
        PApplet.println(arguments);
      }
    }
 else {
      exc.printStackTrace();
      System.err.println("Could not run the sketch (Target VM failed to initialize).");
      if (Preferences.getBoolean("run.options.memory")) {
        System.err.println("Make sure that you haven't set the maximum available memory too high.");
      }
      System.err.println("For more information, read revisions.txt and Help \u2192 Troubleshooting.");
    }
    if (editor != null) {
      listener.statusError("Could not run the sketch.");
    }
    return null;
  }
}
