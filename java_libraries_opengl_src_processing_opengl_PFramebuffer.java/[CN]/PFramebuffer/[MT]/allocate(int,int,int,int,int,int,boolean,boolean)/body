{
  release();
  width=w;
  height=h;
  if (1 < samples) {
    multisample=true;
    nsamples=samples;
  }
 else {
    multisample=false;
    nsamples=1;
  }
  numColorBuffers=colorBuffers;
  colorBufferAttchPoints=new int[numColorBuffers];
  glColorBufferTargets=new int[numColorBuffers];
  glColorBufferIDs=new int[numColorBuffers];
  for (int i=0; i < numColorBuffers; i++) {
    colorBufferAttchPoints[i]=GL.GL_COLOR_ATTACHMENT0 + i;
  }
  if (depthBits < 1 && stencilBits < 1) {
    this.depthBits=0;
    this.stencilBits=0;
    this.combinedDepthStencil=false;
  }
 else {
    if (combinedDepthStencil) {
      this.depthBits=24;
      this.stencilBits=8;
      this.combinedDepthStencil=true;
    }
 else {
      this.depthBits=depthBits;
      this.stencilBits=stencilBits;
      this.combinedDepthStencil=false;
    }
  }
  screenFb=screen;
  if (screenFb) {
    glFboID=0;
  }
 else   if (fboMode) {
    glFboID=ogl.createGLResource(PGraphicsOpenGL.GL_FRAME_BUFFER);
  }
 else {
    glFboID=0;
  }
  if (multisample) {
    createColorBufferMultisample();
  }
  if (combinedDepthStencil) {
    createCombinedDepthStencilBuffer();
  }
 else {
    if (0 < depthBits) {
      createDepthBuffer();
    }
    if (0 < stencilBits) {
      createStencilBuffer();
    }
  }
}
