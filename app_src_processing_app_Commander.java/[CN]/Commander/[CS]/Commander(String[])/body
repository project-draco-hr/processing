{
  String sketchFolder=null;
  String pdePath=null;
  String outputPath=null;
  String preferencesPath=null;
  int platformIndex=PApplet.platform;
  int mode=HELP;
  for (  String arg : args) {
    if (arg.length() == 0) {
    }
 else     if (arg.equals(helpArg)) {
    }
 else     if (arg.equals(buildArg)) {
      mode=BUILD;
    }
 else     if (arg.equals(runArg)) {
      mode=RUN;
    }
 else     if (arg.equals(presentArg)) {
      mode=PRESENT;
    }
 else     if (arg.equals(preprocArg)) {
      mode=PREPROCESS;
    }
 else     if (arg.equals(exportAppletArg)) {
      mode=EXPORT_APPLET;
    }
 else     if (arg.equals(exportApplicationArg)) {
      mode=EXPORT_APPLICATION;
    }
 else     if (arg.startsWith(platformArg)) {
      String platformStr=arg.substring(platformArg.length());
      platformIndex=Base.getPlatformIndex(platformStr);
      if (platformIndex == -1) {
        complainAndQuit(platformStr + " should instead be " + "'windows', 'macosx', or 'linux'.");
      }
    }
 else     if (arg.startsWith(sketchArg)) {
      sketchFolder=arg.substring(sketchArg.length());
      File sketchy=new File(sketchFolder);
      File pdeFile=new File(sketchy,sketchy.getName() + ".pde");
      pdePath=pdeFile.getAbsolutePath();
    }
 else     if (arg.startsWith(outputArg)) {
      outputPath=arg.substring(outputArg.length());
    }
 else {
      complainAndQuit("I don't know anything about " + arg + ".");
    }
  }
  if ((outputPath == null) && (mode == PREPROCESS || mode == BUILD || mode == RUN || mode == PRESENT)) {
    complainAndQuit("An output path must be specified when using " + preprocArg + ", "+ buildArg+ ", "+ runArg+ ", or "+ presentArg+ ".");
  }
  if (mode == HELP) {
    printCommandLine(System.out);
    System.exit(0);
  }
  File outputFolder=new File(outputPath);
  if (!outputFolder.exists()) {
    if (!outputFolder.mkdirs()) {
      complainAndQuit("Could not create the output folder.");
    }
  }
  Preferences.init(preferencesPath);
  if (sketchFolder == null) {
    complainAndQuit("No sketch path specified.");
  }
 else   if (outputPath.equals(pdePath)) {
    complainAndQuit("The sketch path and output path cannot be identical.");
  }
 else   if (!pdePath.toLowerCase().endsWith(".pde")) {
    complainAndQuit("Sketch path must point to the main .pde file.");
  }
 else {
    boolean success=false;
    try {
      sketch=new Sketch(null,pdePath);
      if (mode == PREPROCESS) {
        success=sketch.preprocess(outputPath) != null;
      }
 else       if (mode == BUILD) {
        success=sketch.build(outputPath) != null;
      }
 else       if (mode == RUN || mode == PRESENT) {
        String className=sketch.build(outputPath);
        if (className != null) {
          success=true;
          Runner runner=new Runner(this);
          runner.launch(sketch,className,mode == PRESENT);
        }
 else {
          success=false;
        }
      }
 else       if (mode == EXPORT_APPLET) {
        if (outputPath != null) {
          success=sketch.exportApplet(outputPath);
        }
 else {
          String target=sketchFolder + File.separatorChar + "applet";
          success=sketch.exportApplet(target);
        }
      }
 else       if (mode == EXPORT_APPLICATION) {
        if (outputPath != null) {
          success=sketch.exportApplication(outputPath,platformIndex);
        }
 else {
          outputPath=sketchFolder + File.separatorChar + "application."+ Base.getPlatformName(platformIndex);
          success=sketch.exportApplication(outputPath,platformIndex);
        }
      }
      System.exit(success ? 0 : 1);
    }
 catch (    RunnerException re) {
      statusError(re);
    }
catch (    IOException e) {
      e.printStackTrace();
      System.exit(1);
    }
  }
}
