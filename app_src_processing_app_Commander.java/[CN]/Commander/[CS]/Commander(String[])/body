{
  String sketchPath=null;
  String outputPath=null;
  String preferencesPath=null;
  int platformIndex=PApplet.platform;
  int mode=HELP;
  for (  String arg : args) {
    if (arg.equals(helpArg)) {
    }
 else     if (arg.equals(buildArg)) {
      mode=BUILD;
    }
 else     if (arg.equals(preprocArg)) {
      mode=PREPROCESS;
    }
 else     if (arg.equals(exportAppletArg)) {
      mode=EXPORT_APPLET;
    }
 else     if (arg.equals(exportApplicationArg)) {
      mode=EXPORT_APPLICATION;
    }
 else     if (arg.equals(platformArg)) {
      String platformStr=arg.substring(platformArg.length());
      platformIndex=Base.getPlatformIndex(platformStr);
      if (platformIndex == -1) {
        complainAndQuit(platformStr + " should instead be " + "'windows', 'macosx', or 'linux'.");
      }
    }
 else     if (arg.startsWith(sketchArg)) {
      sketchPath=arg.substring(sketchArg.length());
    }
 else     if (arg.startsWith(outputArg)) {
      outputPath=arg.substring(outputArg.length());
    }
  }
  Preferences.init(preferencesPath);
  if (mode == HELP) {
    printCommandLine(System.out);
    System.exit(0);
  }
 else   if (sketchPath == null) {
    complainAndQuit("No sketch path specified.");
  }
 else   if (outputPath.equals(sketchPath)) {
    complainAndQuit("The sketch path and output path cannot be identical.");
  }
 else   if (!sketchPath.toLowerCase().endsWith(".pde")) {
    complainAndQuit("Sketch path must point to the main .pde file.");
  }
 else {
    Sketch sketch=null;
    boolean success=false;
    try {
      sketch=new Sketch(null,sketchPath);
      if (mode == PREPROCESS) {
        success=sketch.preprocess(outputPath) != null;
      }
 else       if (mode == BUILD) {
        success=sketch.build(outputPath) != null;
      }
 else       if (mode == EXPORT_APPLET) {
        if (outputPath != null) {
          success=sketch.exportApplet(outputPath);
        }
 else {
          String sketchFolder=sketchPath.substring(0,sketchPath.lastIndexOf(File.separatorChar));
          success=sketch.exportApplet(sketchFolder + "applet");
        }
      }
 else       if (mode == EXPORT_APPLICATION) {
        if (outputPath != null) {
          success=sketch.exportApplication(outputPath,platformIndex);
        }
 else {
          String sketchFolder=sketchPath.substring(0,sketchPath.lastIndexOf(File.separatorChar));
          outputPath=sketchFolder + "application." + Base.getPlatformName(platformIndex);
          success=sketch.exportApplication(outputPath,platformIndex);
        }
      }
      System.exit(success ? 0 : 1);
    }
 catch (    RunnerException re) {
      String filename=sketch.getCode(re.getCodeIndex()).getFileName();
      int line=re.getCodeLine();
      int column=re.getCodeColumn();
      if (column == -1)       column=0;
      System.err.println(filename + ":" + line+ ":"+ column+ ":"+ line+ ":"+ column+ ":"+ " "+ re.getMessage());
    }
catch (    IOException e) {
      e.printStackTrace();
      System.exit(1);
    }
  }
}
