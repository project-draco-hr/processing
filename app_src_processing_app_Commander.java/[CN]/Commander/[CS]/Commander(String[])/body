{
  String sketchPath=null;
  String outputPath=null;
  String[] platforms=null;
  int mode=HELP;
  for (  String arg : args) {
    if (arg.equals(helpArg)) {
    }
 else     if (arg.equals(buildArg)) {
      mode=BUILD;
    }
 else     if (arg.equals(preprocArg)) {
      mode=PREPROCESS;
    }
 else     if (arg.equals(exportAppletArg)) {
      mode=EXPORT_APPLET;
    }
 else     if (arg.equals(exportApplicationArg)) {
      mode=EXPORT_APPLICATION;
    }
 else     if (arg.equals(platformArg)) {
      String platformStr=arg.substring(platformArg.length());
      platforms=PApplet.splitTokens(platformStr,", ");
    }
 else     if (arg.startsWith(sketchArg)) {
      sketchPath=arg.substring(sketchArg.length());
    }
 else     if (arg.startsWith(outputArg)) {
      outputPath=arg.substring(outputArg.length());
    }
  }
  if (platforms == null) {
    platforms=new String[]{"macosx","windows","linux"};
  }
  if (mode == HELP) {
    printCommandLine(System.out);
    System.exit(0);
  }
 else   if (sketchPath == null) {
    complainAndQuit("No sketch path specified.");
  }
 else   if (outputPath == null) {
    complainAndQuit("No output path specified.");
  }
 else   if (outputPath.equals(sketchPath)) {
    complainAndQuit("The sketch path and output path cannot be identical.");
  }
 else   if (!sketchPath.toLowerCase().endsWith(".pde")) {
    complainAndQuit("Sketch path must point to the main .pde file.");
  }
 else {
    try {
      Sketch sketch=new Sketch(null,sketchPath);
      boolean success=false;
      if (mode == PREPROCESS) {
        success=sketch.preprocess(outputPath) != null;
      }
 else       if (mode == BUILD) {
        success=sketch.build(outputPath) != null;
      }
 else       if (mode == EXPORT_APPLET) {
        success=sketch.exportApplet(outputPath);
      }
 else       if (mode == EXPORT_APPLICATION) {
        if (platforms.length == 1) {
          if (platforms[0].equals("macosx")) {
            success=sketch.exportApplication(outputPath,PConstants.MACOSX);
          }
 else           if (platforms[0].equals("windows")) {
            success=sketch.exportApplication(outputPath,PConstants.WINDOWS);
          }
 else           if (platforms[0].equals("linux")) {
            success=sketch.exportApplication(outputPath,PConstants.LINUX);
          }
 else {
            complainAndQuit("Platform \"" + platforms[0] + "\" does not exist.");
          }
        }
 else {
          for (          String platform : platforms) {
            File folder=new File(outputPath,"application." + platform);
            String path=folder.getAbsolutePath();
            if (platform.equals("macosx")) {
              success=sketch.exportApplication(path,PConstants.MACOSX);
            }
 else             if (platform.equals("windows")) {
              success=sketch.exportApplication(path,PConstants.WINDOWS);
            }
 else             if (platform.equals("linux")) {
              success=sketch.exportApplication(path,PConstants.LINUX);
            }
 else {
              complainAndQuit("Platform \"" + platform + "\" does not exist.");
            }
            if (!success)             break;
          }
        }
      }
      System.exit(success ? 0 : 1);
    }
 catch (    RunnerException re) {
    }
catch (    IOException e) {
      e.printStackTrace();
      System.exit(1);
    }
  }
}
