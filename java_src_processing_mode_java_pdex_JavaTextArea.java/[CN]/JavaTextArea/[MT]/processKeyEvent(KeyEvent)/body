{
  if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
    if (suggestion != null) {
      if (suggestion.isVisible()) {
        Base.log("esc key");
        hideSuggestion();
        evt.consume();
        return;
      }
    }
  }
 else   if (evt.getKeyCode() == KeyEvent.VK_ENTER && evt.getID() == KeyEvent.KEY_PRESSED) {
    if (suggestion != null) {
      if (suggestion.isVisible()) {
        if (suggestion.insertSelection(CompletionPanel.KEYBOARD_COMPLETION)) {
          evt.consume();
          if (suggestion.isVisible())           prepareSuggestions(evt);
          return;
        }
      }
    }
  }
  if (evt.getID() == KeyEvent.KEY_PRESSED) {
switch (evt.getKeyCode()) {
case KeyEvent.VK_DOWN:
      if (suggestion != null)       if (suggestion.isVisible()) {
        suggestion.moveDown();
        return;
      }
    break;
case KeyEvent.VK_UP:
  if (suggestion != null)   if (suggestion.isVisible()) {
    suggestion.moveUp();
    return;
  }
break;
case KeyEvent.VK_BACK_SPACE:
Base.log("BK Key");
break;
case KeyEvent.VK_SPACE:
if (suggestion != null) if (suggestion.isVisible()) {
Base.log("Space bar, hide completion list");
suggestion.hide();
}
break;
default :
break;
}
}
super.processKeyEvent(evt);
if (!editor.hasJavaTabs()) {
if (evt.getID() == KeyEvent.KEY_TYPED) {
processCompletionKeys(evt);
}
 else if (Base.isMacOS() && evt.getID() == KeyEvent.KEY_RELEASED) {
processControlSpace(evt);
}
}
}
