{
  codeFolder=new File(folder,"code");
  dataFolder=new File(folder,"data");
  String list[]=folder.list();
  codeCount=0;
  hiddenCount=0;
  code=new SketchCode[list.length];
  hidden=new SketchCode[list.length];
  String[] extensions=getExtensions();
  for (int i=0; i < list.length; i++) {
    String filename=list[i];
    if (filename.startsWith("."))     continue;
    if (new File(folder,filename).isDirectory())     continue;
    String base=filename;
    boolean hiddenX=base.endsWith(".x");
    if (hiddenX) {
      base=base.substring(0,base.length() - 2);
    }
    String extension=null;
    for (int j=0; j < extensions.length; j++) {
      if (base.toLowerCase().endsWith("." + extensions[j])) {
        base=base.substring(0,base.length() - (extensions[j].length() + 1));
        extension=extensions[j];
        if (Sketch.isSanitaryName(base)) {
          if (hiddenX) {
            hidden[hiddenCount++]=new SketchCode(new File(folder,filename),extension);
          }
 else {
            code[codeCount++]=new SketchCode(new File(folder,filename),extension);
          }
        }
      }
    }
  }
  code=(SketchCode[])PApplet.subset(code,0,codeCount);
  hidden=(SketchCode[])PApplet.subset(hidden,0,hiddenCount);
  for (int i=1; i < codeCount; i++) {
    if (code[i].getFile().equals(primaryFile)) {
      SketchCode temp=code[0];
      code[0]=code[i];
      code[i]=temp;
      break;
    }
  }
  sortCode();
  setCurrentCode(0);
}
