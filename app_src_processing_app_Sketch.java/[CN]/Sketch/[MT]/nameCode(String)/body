{
  newName=newName.trim();
  if (newName.length() == 0) {
    return;
  }
  ensureExistence();
  if (newName.indexOf('.') == -1) {
    newName+="." + (renamingCode ? mode.getDefaultExtension() : mode.getModuleExtension());
  }
  if (renamingCode) {
    if (newName.equalsIgnoreCase(current.getFileName())) {
      return;
    }
  }
  if (newName.startsWith(".")) {
    Base.showWarning("Problem with rename","The name cannot start with a period.");
    return;
  }
  int dot=newName.lastIndexOf('.');
  String newExtension=newName.substring(dot + 1).toLowerCase();
  if (!mode.validExtension(newExtension)) {
    Base.showWarning("Problem with rename","\"." + newExtension + "\""+ "is not a valid extension.");
    return;
  }
  if (!mode.isDefaultExtension(newExtension)) {
    if (renamingCode) {
      if (current == code[0]) {
        Base.showWarning("Problem with rename","The first tab cannot be a ." + newExtension + " file.\n"+ "(It may be time for you to graduate to a\n"+ "\"real\" programming environment, hotshot.)");
        return;
      }
    }
  }
  String shortName=newName.substring(0,dot);
  String sanitaryName=Sketch.sanitizeName(shortName);
  if (!shortName.equals(sanitaryName)) {
    newName=sanitaryName + "." + newExtension;
  }
  if (!(renamingCode && sanitaryName.equals(current.getPrettyName()))) {
    for (    SketchCode c : code) {
      if (sanitaryName.equalsIgnoreCase(c.getPrettyName())) {
        Base.showMessage("Nope","A file named \"" + c.getFileName() + "\" already exists at\n"+ "\""+ folder.getAbsolutePath()+ "\"");
        return;
      }
    }
  }
  File newFile=new File(folder,newName);
  if (renamingCode) {
    if (currentIndex == 0) {
      String folderName=newName.substring(0,newName.indexOf('.'));
      File newFolder=new File(folder.getParentFile(),folderName);
      if (newFolder.exists()) {
        Base.showWarning("Cannot Rename","Sorry, a sketch (or folder) named " + "\"" + newName + "\" already exists.");
        return;
      }
      boolean success=folder.renameTo(newFolder);
      if (!success) {
        Base.showWarning("Error","Could not rename the sketch folder.");
        return;
      }
      current.setFolder(newFolder);
      newFile=new File(newFolder,newName);
      if (!current.renameTo(newFile,newExtension)) {
        Base.showWarning("Error","Could not rename \"" + current.getFileName() + "\" to \""+ newFile.getName()+ "\"");
        return;
      }
      for (int i=1; i < codeCount; i++) {
        code[i].setFolder(newFolder);
      }
      updateInternal(sanitaryName,newFolder);
    }
 else {
      if (!current.renameTo(newFile,newExtension)) {
        Base.showWarning("Error","Could not rename \"" + current.getFileName() + "\" to \""+ newFile.getName()+ "\"");
        return;
      }
    }
  }
 else {
    try {
      if (!newFile.createNewFile()) {
        throw new IOException("createNewFile() returned false");
      }
    }
 catch (    IOException e) {
      Base.showWarning("Error","Could not create the file \"" + newFile + "\"\n"+ "in \""+ folder.getAbsolutePath()+ "\"",e);
      return;
    }
    SketchCode newCode=new SketchCode(newFile,newExtension);
    insertCode(newCode);
  }
  sortCode();
  setCurrentCode(newName);
  editor.header.rebuild();
}
