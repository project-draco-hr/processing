{
  ensureExistence();
  if (newName.indexOf('.') == -1) {
    newName+="." + mode.getDefaultExtension();
  }
  if (renamingCode) {
    if (newName.equalsIgnoreCase(current.getFileName())) {
      return;
    }
  }
  newName=newName.trim();
  if (newName.equals(""))   return;
  int dot=newName.indexOf('.');
  if (dot == 0) {
    Base.showWarning("Problem with rename","The name cannot start with a period.",null);
    return;
  }
  String newExtension=newName.substring(dot + 1).toLowerCase();
  if (!mode.validExtension(newExtension)) {
    Base.showWarning("Problem with rename","\"." + newExtension + "\""+ "is not a valid extension.",null);
    return;
  }
  if (!mode.isDefaultExtension(newExtension)) {
    if (renamingCode) {
      if (current == code[0]) {
        Base.showWarning("Problem with rename","The main .pde file cannot be .java file.\n" + "(It may be time for your to graduate to a\n" + "\"real\" programming environment)",null);
        return;
      }
    }
  }
  String shortName=newName.substring(0,dot);
  String sanitaryName=Sketch.sanitizeName(shortName);
  if (!shortName.equals(sanitaryName)) {
    newName=sanitaryName + "." + newExtension;
  }
  for (  SketchCode c : code) {
    if (sanitaryName.equalsIgnoreCase(c.getPrettyName())) {
      Base.showMessage("Nope","A file named \"" + c.getFileName() + "\" already exists\n"+ "in \""+ folder.getAbsolutePath()+ "\"");
      return;
    }
  }
  File newFile=new File(folder,newName);
  if (renamingCode) {
    if (currentIndex == 0) {
      String folderName=newName.substring(0,newName.indexOf('.'));
      File newFolder=new File(folder.getParentFile(),folderName);
      if (newFolder.exists()) {
        Base.showWarning("Cannot Rename","Sorry, a sketch (or folder) named " + "\"" + newName + "\" already exists.",null);
        return;
      }
      if (current.isModified()) {
        current.setProgram(editor.getText());
        try {
          current.save();
        }
 catch (        Exception e) {
          Base.showWarning("Error","Could not rename the sketch. (0)",e);
          return;
        }
      }
      if (!current.renameTo(newFile,newExtension)) {
        Base.showWarning("Error","Could not rename \"" + current.getFileName() + "\" to \""+ newFile.getName()+ "\"",null);
        return;
      }
      try {
        for (int i=1; i < codeCount; i++) {
          code[i].save();
        }
      }
 catch (      Exception e) {
        Base.showWarning("Error","Could not rename the sketch. (1)",e);
        return;
      }
      boolean success=folder.renameTo(newFolder);
      if (!success) {
        Base.showWarning("Error","Could not rename the sketch. (2)",null);
        return;
      }
      File newMainFile=new File(newFolder,newName + ".pde");
      String newMainFilePath=newMainFile.getAbsolutePath();
      editor.handleOpenUnchecked(newMainFilePath,currentIndex,editor.getSelectionStart(),editor.getSelectionStop(),editor.getScrollPosition());
      editor.base.rebuildSketchbookMenusAsync();
    }
 else {
      if (!current.renameTo(newFile,newExtension)) {
        Base.showWarning("Error","Could not rename \"" + current.getFileName() + "\" to \""+ newFile.getName()+ "\"",null);
        return;
      }
    }
  }
 else {
    try {
      if (!newFile.createNewFile()) {
        throw new IOException("createNewFile() returned false");
      }
    }
 catch (    IOException e) {
      Base.showWarning("Error","Could not create the file \"" + newFile + "\"\n"+ "in \""+ folder.getAbsolutePath()+ "\"",e);
      return;
    }
    SketchCode newCode=new SketchCode(newFile,newExtension);
    insertCode(newCode);
  }
  sortCode();
  setCurrentCode(newName);
  editor.header.rebuild();
}
