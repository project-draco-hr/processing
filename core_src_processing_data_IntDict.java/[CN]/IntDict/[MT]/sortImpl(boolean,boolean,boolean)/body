{
  Sort s=new Sort(){
    @Override public int size(){
      return count;
    }
    @Override public float compare(    int a,    int b){
      int diff=0;
      if (useKeys) {
        diff=keys[a].compareToIgnoreCase(keys[b]);
        if (diff == 0) {
          diff=values[a] - values[b];
        }
      }
 else {
        diff=values[a] - values[b];
        if (diff == 0 && stable) {
          diff=keys[a].compareToIgnoreCase(keys[b]);
        }
      }
      return reverse ? -diff : diff;
    }
    @Override public void swap(    int a,    int b){
      IntDict.this.swap(a,b);
    }
  }
;
  s.run();
  indices=new HashMap<String,Integer>();
  for (int i=0; i < count; i++) {
    indices.put(keys[i],i);
  }
}
