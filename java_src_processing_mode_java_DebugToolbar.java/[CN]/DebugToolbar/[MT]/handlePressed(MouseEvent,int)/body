{
  boolean shift=e.isShiftDown();
  JavaEditor deditor=(JavaEditor)editor;
  int id=buttonId(idx);
switch (id) {
case STOP:
    Logger.getLogger(DebugToolbar.class.getName()).log(Level.INFO,"Invoked 'Stop' toolbar button");
  super.handlePressed(e,JavaToolbar.STOP);
break;
case DEBUG:
deditor.handleStop();
deditor.showProblemListView(XQConsoleToggle.CONSOLE);
if (shift) {
Logger.getLogger(DebugToolbar.class.getName()).log(Level.INFO,"Invoked 'Run' toolbar button");
deditor.handleRun();
}
 else {
Logger.getLogger(DebugToolbar.class.getName()).log(Level.INFO,"Invoked 'Debug' toolbar button");
deditor.debugger.startDebug();
}
break;
case CONTINUE:
Logger.getLogger(DebugToolbar.class.getName()).log(Level.INFO,"Invoked 'Continue' toolbar button");
deditor.debugger.continueDebug();
break;
case TOGGLE_BREAKPOINT:
Logger.getLogger(DebugToolbar.class.getName()).log(Level.INFO,"Invoked 'Toggle Breakpoint' toolbar button");
deditor.debugger.toggleBreakpoint();
break;
case STEP:
if (shift) {
Logger.getLogger(DebugToolbar.class.getName()).log(Level.INFO,"Invoked 'Step Into' toolbar button");
deditor.debugger.stepInto();
}
 else {
Logger.getLogger(DebugToolbar.class.getName()).log(Level.INFO,"Invoked 'Step' toolbar button");
deditor.debugger.stepOver();
}
break;
case TOGGLE_VAR_INSPECTOR:
Logger.getLogger(DebugToolbar.class.getName()).log(Level.INFO,"Invoked 'Variable Inspector' toolbar button");
deditor.toggleVariableInspector();
break;
}
}
