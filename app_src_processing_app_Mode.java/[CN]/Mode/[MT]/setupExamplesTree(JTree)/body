{
  tree.setOpaque(true);
  tree.setAlignmentX(Component.LEFT_ALIGNMENT);
  tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
  tree.setShowsRootHandles(true);
  tree.expandRow(0);
  tree.setRootVisible(false);
  tree.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() == 2) {
        DefaultMutableTreeNode node=(DefaultMutableTreeNode)tree.getLastSelectedPathComponent();
        int selRow=tree.getRowForLocation(e.getX(),e.getY());
        if (node != null && node.isLeaf() && selRow != -1) {
          SketchReference sketch=(SketchReference)node.getUserObject();
          base.handleOpen(sketch.getPath());
        }
      }
    }
  }
);
  tree.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {
        examplesFrame.setVisible(false);
      }
    }
    public void keyTyped(    KeyEvent e){
      if (e.getKeyChar() == KeyEvent.VK_ENTER) {
        DefaultMutableTreeNode node=(DefaultMutableTreeNode)tree.getLastSelectedPathComponent();
        if (node != null && node.isLeaf()) {
          SketchReference sketch=(SketchReference)node.getUserObject();
          base.handleOpen(sketch.getPath());
        }
      }
    }
  }
);
  tree.addTreeExpansionListener(new TreeExpansionListener(){
    @Override public void treeExpanded(    TreeExpansionEvent event){
      updateExpanded(tree);
    }
    @Override public void treeCollapsed(    TreeExpansionEvent event){
      updateExpanded(tree);
    }
  }
);
  tree.setBorder(new EmptyBorder(5,5,5,5));
  if (Base.isMacOS()) {
    tree.setToggleClickCount(2);
  }
 else {
    tree.setToggleClickCount(1);
  }
}
