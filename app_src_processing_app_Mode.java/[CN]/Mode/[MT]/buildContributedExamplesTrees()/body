{
  DefaultMutableTreeNode contribExamplesNode=new DefaultMutableTreeNode(Language.text("examples.contributed"));
  try {
    File[] subfolders=ContributionType.EXAMPLES.listCandidates(examplesContribFolder);
    if (subfolders != null) {
      for (      File sub : subfolders) {
        if (ExamplesContribution.isCompatible(base,sub)) {
          DefaultMutableTreeNode subNode=new DefaultMutableTreeNode(sub.getName());
          if (base.addSketches(subNode,sub)) {
            contribExamplesNode.add(subNode);
            int exampleNodeNumber=-1;
            for (int y=0; y < subNode.getChildCount(); y++) {
              if (subNode.getChildAt(y).toString().equals("examples")) {
                exampleNodeNumber=y;
              }
            }
            if (exampleNodeNumber != -1) {
              TreeNode exampleNode=subNode.getChildAt(exampleNodeNumber);
              subNode.remove(exampleNodeNumber);
              int count=exampleNode.getChildCount();
              for (int x=0; x < count; x++) {
                subNode.add((DefaultMutableTreeNode)exampleNode.getChildAt(0));
              }
            }
          }
        }
      }
    }
  }
 catch (  IOException e) {
    e.printStackTrace();
  }
  return contribExamplesNode;
}
