{
  if (params.target == TEX_NORM) {
    glTexTarget=GL10.GL_TEXTURE_2D;
  }
  if (params.format == RGB) {
    glTexInternalFormat=GL10.GL_RGB;
  }
  if (params.format == ARGB) {
    glTexInternalFormat=GL10.GL_RGBA;
  }
  if (params.format == ALPHA) {
    glTexInternalFormat=GL10.GL_ALPHA;
  }
  if (params.minFilter == NEAREST) {
    glMinFilter=GL10.GL_NEAREST;
  }
 else   if (params.minFilter == LINEAR) {
    glMinFilter=GL10.GL_LINEAR;
  }
 else   if (params.minFilter == NEAREST_MIPMAP_NEAREST) {
    glMinFilter=GL10.GL_NEAREST_MIPMAP_NEAREST;
  }
 else   if (params.minFilter == LINEAR_MIPMAP_NEAREST) {
    glMinFilter=GL10.GL_LINEAR_MIPMAP_NEAREST;
  }
 else   if (params.minFilter == NEAREST_MIPMAP_LINEAR) {
    glMinFilter=GL10.GL_NEAREST_MIPMAP_LINEAR;
  }
 else   if (params.minFilter == LINEAR_MIPMAP_LINEAR) {
    glMinFilter=GL10.GL_LINEAR_MIPMAP_LINEAR;
  }
  if (params.magFilter == NEAREST) {
    glMagFilter=GL10.GL_NEAREST;
  }
 else   if (params.magFilter == LINEAR) {
    glMagFilter=GL10.GL_LINEAR;
  }
  usingMipmaps=(glMinFilter == GL10.GL_NEAREST_MIPMAP_NEAREST) || (glMinFilter == GL10.GL_LINEAR_MIPMAP_NEAREST) || (glMinFilter == GL10.GL_NEAREST_MIPMAP_LINEAR)|| (glMinFilter == GL10.GL_LINEAR_MIPMAP_LINEAR);
  flippedX=false;
  flippedY=false;
}
