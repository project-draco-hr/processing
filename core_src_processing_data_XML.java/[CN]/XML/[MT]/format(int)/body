{
  try {
    TransformerFactory factory=TransformerFactory.newInstance();
    if (indent != -1) {
      factory.setAttribute("indent-number",indent);
    }
    Transformer transformer=factory.newTransformer();
    if (indent == -1 || parent != null) {
      transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION,"yes");
    }
 else {
      transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION,"no");
    }
    transformer.setOutputProperty(OutputKeys.METHOD,"xml");
    transformer.setOutputProperty(OutputKeys.ENCODING,"UTF-8");
    if (indent != 0) {
      transformer.setOutputProperty(OutputKeys.INDENT,"yes");
    }
 else {
      transformer.setOutputProperty(OutputKeys.INDENT,"no");
    }
    StringWriter tempWriter=new StringWriter();
    StreamResult tempResult=new StreamResult(tempWriter);
    transformer.transform(new DOMSource(node),tempResult);
    String[] tempLines=PApplet.split(tempWriter.toString(),'\n');
    if (tempLines[0].startsWith("<?xml")) {
      tempLines=PApplet.subset(tempLines,1);
    }
    String singleLine=PApplet.join(PApplet.trim(tempLines),"");
    if (indent == -1) {
      return singleLine;
    }
    StringWriter stringWriter=new StringWriter();
    StreamResult xmlOutput=new StreamResult(stringWriter);
    Source source=new StreamSource(new StringReader(singleLine));
    transformer.transform(source,xmlOutput);
    return stringWriter.toString();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  return null;
}
