{
  String filename=(jdk ? "jdk" : "jre") + (update == 0 ? String.format("-%d-%s",version,flavor) : String.format("-%du%d-%s",version,update,flavor));
  if (path == null) {
    path=filename;
  }
  String url="https://edelivery.oracle.com/otn-pub/java/jdk/" + (update == 0 ? String.format("%d-b%02d/",version,build) : String.format("%du%d-b%02d/",version,update,build)) + filename;
  System.out.println(url);
  try {
    HttpURLConnection conn=(HttpURLConnection)new URL(url).openConnection();
    conn.setRequestProperty("Cookie",COOKIE);
    if (conn.getResponseCode() == 302) {
      Map<String,List<String>> headers=conn.getHeaderFields();
      List<String> location=headers.get("Location");
      if (location.size() == 1) {
        url=location.get(0);
      }
 else {
        throw new RuntimeException("Got " + location.size() + " locations.");
      }
      List<String> cookies=headers.get("Set-Cookie");
      conn=(HttpURLConnection)new URL(url).openConnection();
      for (      String cookie : cookies) {
        conn.setRequestProperty("Cookie",cookie);
      }
      conn.setRequestProperty("Cookie",COOKIE);
      conn.connect();
    }
    if (conn.getResponseCode() == 200) {
      InputStream input=conn.getInputStream();
      BufferedInputStream bis=new BufferedInputStream(input);
      File outputFile=new File(path);
      BufferedOutputStream output=new BufferedOutputStream(new FileOutputStream(outputFile));
      int c=bis.read();
      while (c != -1) {
        output.write(c);
        c=bis.read();
      }
      bis.close();
      output.flush();
      output.close();
    }
 else {
      printHeaders(conn);
      System.exit(1);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
