{
  Advapi32 advapi32;
  int handle;
  byte[] data;
  boolean ret=false;
  data=new byte[4];
  data[0]=(byte)(value & 0xff);
  data[1]=(byte)((value >> 8) & 0xff);
  data[2]=(byte)((value >> 16) & 0xff);
  data[3]=(byte)((value >> 24) & 0xff);
  advapi32=Advapi32.INSTANCE;
  handle=openKey(rootKey,subKeyName,WINNT.KEY_READ | WINNT.KEY_WRITE);
  if (handle != 0) {
    if (advapi32.RegSetValueEx(handle,name,0,WINNT.REG_DWORD,data,data.length) == WINERROR.ERROR_SUCCESS) {
      ret=true;
    }
    advapi32.RegCloseKey(handle);
  }
  return (ret);
}
