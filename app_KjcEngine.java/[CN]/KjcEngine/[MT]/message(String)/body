{
  if (s.indexOf("caution") != -1)   return;
  if (messageMode == COMPILING) {
    String fullTempFilename=buildPath + File.separator + tempFilename;
    if (s.indexOf(fullTempFilename) == 0) {
      String s1=s.substring(fullTempFilename.length() + 1);
      int colon=s1.indexOf(':');
      int lineNumber=Integer.parseInt(s1.substring(0,colon));
      int err=s1.indexOf("error:");
      if (err != -1) {
        String description=s1.substring(err + "error:".length());
        description=description.trim();
        exception=new PdeException(description,lineNumber - 1);
        editor.error(exception);
      }
 else {
        System.err.println("i suck: " + s);
      }
    }
 else {
      exception=new PdeException("Error while compiling, " + "please send code to bugs@proce55ing.net");
      editor.error(exception);
    }
  }
 else   if (messageMode == RUNNING) {
    if (newMessage) {
      exception=new PdeException(s);
      newMessage=false;
      messageLineCount=0;
    }
 else {
      messageLineCount++;
      int index=s.indexOf(tempFilename);
      if (index != -1) {
        int len=tempFilename.length();
        String lineNumberStr=s.substring(index + len + 1);
        index=lineNumberStr.indexOf(')');
        lineNumberStr=lineNumberStr.substring(0,index);
        try {
          exception.line=Integer.parseInt(lineNumberStr) - 1;
          editor.error(exception);
        }
 catch (        NumberFormatException e) {
          e.printStackTrace();
        }
      }
 else       if ((index=s.indexOf(tempClass)) != -1) {
        String functionStr=s.substring(index + tempClass.length() + 1);
        index=functionStr.indexOf('(');
        if (index != -1) {
          functionStr=functionStr.substring(0,index);
        }
        exception=new PdeException(exception.getMessage() + " inside " + functionStr+ "() "+ "[add Compiler.disable() to setup()]");
        editor.error(exception);
      }
 else       if (messageLineCount > 5) {
        messageLineCount=-100;
        exception=new PdeException(exception.getMessage());
        editor.error(exception);
      }
    }
  }
 else {
    System.out.println("message mode not set");
  }
}
