{
  IJavaProject jproject=this.getJavaProject();
  HashSet<IClasspathEntry> entries=new HashSet<IClasspathEntry>();
  if (srcFolderPathList != null) {
    for (    IPath p : srcFolderPathList) {
      if (p != null)       entries.add(JavaCore.newSourceEntry(p.makeAbsolute()));
    }
  }
  if (libraryJarPathList != null) {
    for (    IPath p : libraryJarPathList) {
      if (p != null) {
        entries.add(JavaCore.newLibraryEntry(p.makeAbsolute(),null,null,false));
      }
    }
  }
  IClasspathEntry[] classpathEntries=new IClasspathEntry[entries.size()];
  int i=0;
  for (  IClasspathEntry cpe : entries) {
    classpathEntries[i++]=cpe;
    System.out.println(cpe.toString());
  }
  try {
    jproject.setOutputLocation(getJavaBuildFolder().getFullPath(),null);
    jproject.setRawClasspath(classpathEntries,null);
  }
 catch (  Exception e) {
    ProcessingLog.logError("There was a problem setting the compiler class path.",e);
  }
}
