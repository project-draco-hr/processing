{
  int bx0, bx1, by0, by1, bz0, bz1, b00, b10, b01, b11;
  float rx0, rx1, ry0, ry1, rz0, rz1, sy, sz, a, b, c, d, t, u, v;
  float[] q;
  int i, j;
  t=vec[0] + N;
  bx0=PApplet.parseInt(t) & BM;
  bx1=(bx0 + 1) & BM;
  rx0=t - PApplet.parseInt(t);
  rx1=rx0 - 1.0f;
  t=vec[1] + N;
  by0=PApplet.parseInt(t) & BM;
  by1=(by0 + 1) & BM;
  ry0=t - PApplet.parseInt(t);
  ry1=ry0 - 1.0f;
  t=vec[2] + N;
  bz0=PApplet.parseInt(t) & BM;
  bz1=(bz0 + 1) & BM;
  rz0=t - PApplet.parseInt(t);
  rz1=rz0 - 1.0f;
  i=p[bx0];
  j=p[bx1];
  b00=p[i + by0];
  b10=p[j + by0];
  b01=p[i + by1];
  b11=p[j + by1];
  t=sCurve(rx0);
  sy=sCurve(ry0);
  sz=sCurve(rz0);
  q=g3[b00 + bz0];
  u=at3(q,rx0,ry0,rz0);
  q=g3[b10 + bz0];
  v=at3(q,rx1,ry0,rz0);
  a=lerp(u,v,t);
  q=g3[b01 + bz0];
  u=at3(q,rx0,ry1,rz0);
  q=g3[b11 + bz0];
  v=at3(q,rx1,ry1,rz0);
  b=lerp(u,v,t);
  c=lerp(a,b,sy);
  q=g3[b00 + bz1];
  u=at3(q,rx0,ry0,rz1);
  q=g3[b10 + bz1];
  v=at3(q,rx1,ry0,rz1);
  a=lerp(u,v,t);
  q=g3[b01 + bz1];
  u=at3(q,rx0,ry1,rz1);
  q=g3[b11 + bz1];
  v=at3(q,rx1,ry1,rz1);
  b=lerp(u,v,t);
  d=lerp(a,b,sy);
  return lerp(c,d,sz);
}
