{
  int offsetf=offset * PGL.SIZEOF_FLOAT;
  int offseti=offset * PGL.SIZEOF_INT;
  int sizef=size * PGL.SIZEOF_FLOAT;
  int sizei=size * PGL.SIZEOF_INT;
  pgl.glBindBuffer(PGL.GL_ARRAY_BUFFER,glFillVertexBufferID);
  pgl.glBufferSubData(PGL.GL_ARRAY_BUFFER,3 * offsetf,3 * sizef,vertices);
  pgl.glBindBuffer(PGL.GL_ARRAY_BUFFER,glFillColorBufferID);
  pgl.glBufferSubData(PGL.GL_ARRAY_BUFFER,offseti,sizei,colors);
  pgl.glBindBuffer(PGL.GL_ARRAY_BUFFER,glFillNormalBufferID);
  pgl.glBufferSubData(PGL.GL_ARRAY_BUFFER,3 * offsetf,3 * sizef,normals);
  pgl.glBindBuffer(PGL.GL_ARRAY_BUFFER,glFillTexCoordBufferID);
  pgl.glBufferSubData(PGL.GL_ARRAY_BUFFER,2 * offsetf,2 * sizef,texcoords);
  pgl.glBindBuffer(PGL.GL_ARRAY_BUFFER,glFillAmbientBufferID);
  pgl.glBufferSubData(PGL.GL_ARRAY_BUFFER,offseti,sizei,ambient);
  pgl.glBindBuffer(PGL.GL_ARRAY_BUFFER,glFillSpecularBufferID);
  pgl.glBufferSubData(PGL.GL_ARRAY_BUFFER,offseti,sizei,specular);
  pgl.glBindBuffer(PGL.GL_ARRAY_BUFFER,glFillEmissiveBufferID);
  pgl.glBufferSubData(PGL.GL_ARRAY_BUFFER,offseti,sizei,emissive);
  pgl.glBindBuffer(PGL.GL_ARRAY_BUFFER,glFillShininessBufferID);
  pgl.glBufferSubData(PGL.GL_ARRAY_BUFFER,offsetf,sizef,shininess);
  pgl.glBindBuffer(PGL.GL_ARRAY_BUFFER,0);
}
