{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST typeDefinition_AST=null;
  AST m_AST=null;
  try {
switch (LA(1)) {
case FINAL:
case ABSTRACT:
case STRICTFP:
case LITERAL_private:
case LITERAL_public:
case LITERAL_protected:
case LITERAL_static:
case LITERAL_transient:
case LITERAL_native:
case LITERAL_threadsafe:
case LITERAL_synchronized:
case LITERAL_volatile:
case LITERAL_class:
case LITERAL_interface:
{
        modifiers();
        m_AST=(AST)returnAST;
{
switch (LA(1)) {
case LITERAL_class:
{
              classDefinition(m_AST);
              astFactory.addASTChild(currentAST,returnAST);
              break;
            }
case LITERAL_interface:
{
            interfaceDefinition(m_AST);
            astFactory.addASTChild(currentAST,returnAST);
            break;
          }
default :
{
          throw new NoViableAltException(LT(1),getFilename());
        }
    }
  }
  typeDefinition_AST=(AST)currentAST.root;
  break;
}
case SEMI:
{
match(SEMI);
typeDefinition_AST=(AST)currentAST.root;
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
 catch (RecognitionException ex) {
if (inputState.guessing == 0) {
reportError(ex);
recover(ex,_tokenSet_2);
}
 else {
throw ex;
}
}
returnAST=typeDefinition_AST;
}
