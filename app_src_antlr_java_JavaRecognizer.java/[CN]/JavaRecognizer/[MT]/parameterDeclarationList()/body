{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST parameterDeclarationList_AST=null;
{
switch (LA(1)) {
case FINAL:
case LITERAL_void:
case LITERAL_boolean:
case LITERAL_byte:
case LITERAL_char:
case LITERAL_short:
case LITERAL_int:
case LITERAL_float:
case LITERAL_long:
case LITERAL_double:
case IDENT:
{
        parameterDeclaration();
        astFactory.addASTChild(currentAST,returnAST);
{
          _loop80:           do {
            if ((LA(1) == COMMA)) {
              match(COMMA);
              parameterDeclaration();
              astFactory.addASTChild(currentAST,returnAST);
            }
 else {
              break _loop80;
            }
          }
 while (true);
        }
        break;
      }
case RPAREN:
{
      break;
    }
default :
{
    throw new NoViableAltException(LT(1),getFilename());
  }
}
}
if (inputState.guessing == 0) {
parameterDeclarationList_AST=(AST)currentAST.root;
parameterDeclarationList_AST=(AST)astFactory.make((new ASTArray(2)).add(astFactory.create(PARAMETERS,"PARAMETERS")).add(parameterDeclarationList_AST));
currentAST.root=parameterDeclarationList_AST;
currentAST.child=parameterDeclarationList_AST != null && parameterDeclarationList_AST.getFirstChild() != null ? parameterDeclarationList_AST.getFirstChild() : parameterDeclarationList_AST;
currentAST.advanceChildToEnd();
}
parameterDeclarationList_AST=(AST)currentAST.root;
returnAST=parameterDeclarationList_AST;
}
