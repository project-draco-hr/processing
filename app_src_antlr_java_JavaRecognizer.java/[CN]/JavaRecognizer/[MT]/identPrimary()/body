{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST identPrimary_AST=null;
  Token lp=null;
  AST lp_AST=null;
  Token lbc=null;
  AST lbc_AST=null;
  AST tmp192_AST=null;
  tmp192_AST=astFactory.create(LT(1));
  astFactory.addASTChild(currentAST,tmp192_AST);
  match(IDENT);
{
    _loop182:     do {
      if ((LA(1) == DOT) && (LA(2) == IDENT)) {
        AST tmp193_AST=null;
        tmp193_AST=astFactory.create(LT(1));
        astFactory.makeASTRoot(currentAST,tmp193_AST);
        match(DOT);
        AST tmp194_AST=null;
        tmp194_AST=astFactory.create(LT(1));
        astFactory.addASTChild(currentAST,tmp194_AST);
        match(IDENT);
      }
 else {
        break _loop182;
      }
    }
 while (true);
  }
{
    if ((LA(1) == LPAREN)) {
{
        lp=LT(1);
        lp_AST=astFactory.create(lp);
        astFactory.makeASTRoot(currentAST,lp_AST);
        match(LPAREN);
        if (inputState.guessing == 0) {
          lp_AST.setType(METHOD_CALL);
        }
        argList();
        astFactory.addASTChild(currentAST,returnAST);
        match(RPAREN);
      }
    }
 else     if ((LA(1) == LBRACK) && (LA(2) == RBRACK)) {
{
        int _cnt186=0;
        _loop186:         do {
          if ((LA(1) == LBRACK) && (LA(2) == RBRACK)) {
            lbc=LT(1);
            lbc_AST=astFactory.create(lbc);
            astFactory.makeASTRoot(currentAST,lbc_AST);
            match(LBRACK);
            if (inputState.guessing == 0) {
              lbc_AST.setType(ARRAY_DECLARATOR);
            }
            match(RBRACK);
          }
 else {
            if (_cnt186 >= 1) {
              break _loop186;
            }
 else {
              throw new NoViableAltException(LT(1),getFilename());
            }
          }
          _cnt186++;
        }
 while (true);
      }
    }
 else     if ((_tokenSet_25.member(LA(1))) && (_tokenSet_26.member(LA(2)))) {
    }
 else {
      throw new NoViableAltException(LT(1),getFilename());
    }
  }
  identPrimary_AST=(AST)currentAST.root;
  returnAST=identPrimary_AST;
}
