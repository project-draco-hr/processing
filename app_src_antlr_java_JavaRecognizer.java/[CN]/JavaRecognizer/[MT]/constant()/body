{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST constant_AST=null;
switch (LA(1)) {
case NUM_INT:
{
      AST tmp197_AST=null;
      tmp197_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp197_AST);
      match(NUM_INT);
      constant_AST=(AST)currentAST.root;
      break;
    }
case CHAR_LITERAL:
{
    AST tmp198_AST=null;
    tmp198_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp198_AST);
    match(CHAR_LITERAL);
    constant_AST=(AST)currentAST.root;
    break;
  }
case STRING_LITERAL:
{
  AST tmp199_AST=null;
  tmp199_AST=astFactory.create(LT(1));
  astFactory.addASTChild(currentAST,tmp199_AST);
  match(STRING_LITERAL);
  constant_AST=(AST)currentAST.root;
  break;
}
case NUM_FLOAT:
{
AST tmp200_AST=null;
tmp200_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp200_AST);
match(NUM_FLOAT);
constant_AST=(AST)currentAST.root;
break;
}
case NUM_LONG:
{
AST tmp201_AST=null;
tmp201_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp201_AST);
match(NUM_LONG);
constant_AST=(AST)currentAST.root;
break;
}
case NUM_DOUBLE:
{
AST tmp202_AST=null;
tmp202_AST=astFactory.create(LT(1));
astFactory.addASTChild(currentAST,tmp202_AST);
match(NUM_DOUBLE);
constant_AST=(AST)currentAST.root;
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
returnAST=constant_AST;
}
