{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST conditionalExpression_AST=null;
  logicalOrExpression();
  astFactory.addASTChild(currentAST,returnAST);
{
switch (LA(1)) {
case QUESTION:
{
        AST tmp134_AST=null;
        tmp134_AST=astFactory.create(LT(1));
        astFactory.makeASTRoot(currentAST,tmp134_AST);
        match(QUESTION);
        assignmentExpression();
        astFactory.addASTChild(currentAST,returnAST);
        match(COLON);
        conditionalExpression();
        astFactory.addASTChild(currentAST,returnAST);
        break;
      }
case SEMI:
case RBRACK:
case RCURLY:
case COMMA:
case RPAREN:
case ASSIGN:
case COLON:
case PLUS_ASSIGN:
case MINUS_ASSIGN:
case STAR_ASSIGN:
case DIV_ASSIGN:
case MOD_ASSIGN:
case SR_ASSIGN:
case BSR_ASSIGN:
case SL_ASSIGN:
case BAND_ASSIGN:
case BXOR_ASSIGN:
case BOR_ASSIGN:
{
      break;
    }
default :
{
    throw new NoViableAltException(LT(1),getFilename());
  }
}
}
conditionalExpression_AST=(AST)currentAST.root;
returnAST=conditionalExpression_AST;
}
