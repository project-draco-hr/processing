{
  if (data instanceof double[]) {
    double[] d=(double[])data;
    int l=d.length;
    if (l < 25) {
      throw new RuntimeException("TessCallback vertex() data is not " + "of length 25");
    }
    if (vertCount < PGL.MAX_VERTEX_INDEX1) {
      int fcolor=((int)d[3] << 24) | ((int)d[4] << 16) | ((int)d[5] << 8)| (int)d[6];
      int acolor=((int)d[12] << 24) | ((int)d[13] << 16) | ((int)d[14] << 8)| (int)d[15];
      int scolor=((int)d[16] << 24) | ((int)d[17] << 16) | ((int)d[18] << 8)| (int)d[19];
      int ecolor=((int)d[20] << 24) | ((int)d[21] << 16) | ((int)d[22] << 8)| (int)d[23];
      tess.addPolyVertex((float)d[0],(float)d[1],(float)d[2],fcolor,(float)d[7],(float)d[8],(float)d[9],(float)d[10],(float)d[11],acolor,scolor,ecolor,(float)d[24],clampXY);
      vertCount++;
    }
 else {
      throw new RuntimeException("The tessellator is generating too " + "many vertices, reduce complexity of " + "shape.");
    }
  }
 else {
    throw new RuntimeException("TessCallback vertex() data not " + "understood");
  }
}
