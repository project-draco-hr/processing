{
  if (kind == FLAT_SHADER) {
    if (defPolyFlatShader == null || defPolyFlatShader.contextIsOutdated()) {
      defPolyFlatShader=new PolyFlatShader(parent,defPolyFlatShaderVertURL,defPolyNoTexShaderFragURL);
    }
    polyFlatShader=defPolyFlatShader;
  }
 else   if (kind == LIGHT_SHADER) {
    if (defPolyLightShader == null || defPolyLightShader.contextIsOutdated()) {
      defPolyLightShader=new PolyLightShader(parent,defPolyLightShaderVertURL,defPolyNoTexShaderFragURL);
    }
    polyLightShader=defPolyLightShader;
  }
 else   if (kind == TEXTURE_SHADER) {
    if (defPolyTexShader == null || defPolyTexShader.contextIsOutdated()) {
      defPolyTexShader=new PolyTexShader(parent,defPolyTexShaderVertURL,defPolyTexShaderFragURL);
    }
    polyTexShader=defPolyTexShader;
  }
 else   if (kind == FULL_SHADER) {
    if (defPolyFullShader == null || defPolyFullShader.contextIsOutdated()) {
      defPolyFullShader=new PolyFullShader(parent,defPolyFullShaderVertURL,defPolyTexShaderFragURL);
    }
    polyFullShader=defPolyFullShader;
  }
 else   if (kind == LINE3D_SHADER) {
    if (defLineShader == null || defLineShader.contextIsOutdated()) {
      defLineShader=new LineShader(parent,defLineShaderVertURL,defLineShaderFragURL);
    }
    lineShader=defLineShader;
  }
 else   if (kind == POINT3D_SHADER) {
    if (defPointShader == null || defPointShader.contextIsOutdated()) {
      defPointShader=new PointShader(parent,defPointShaderVertURL,defPointShaderFragURL);
    }
    pointShader=defPointShader;
  }
 else {
    PGraphics.showWarning("Wrong shader type");
  }
}
