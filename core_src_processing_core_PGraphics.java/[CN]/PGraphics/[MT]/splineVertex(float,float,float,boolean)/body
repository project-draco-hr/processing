{
  if (splineVertices == null) {
    splineVertices=new float[DEFAULT_SPLINE_VERTICES][VERTEX_FIELD_COUNT];
  }
  if (splineVertexCount == DEFAULT_SPLINE_VERTICES) {
    System.arraycopy(splineVertices[DEFAULT_SPLINE_VERTICES - 3],0,splineVertices[0],0,VERTEX_FIELD_COUNT);
    System.arraycopy(splineVertices[DEFAULT_SPLINE_VERTICES - 2],0,splineVertices[1],0,VERTEX_FIELD_COUNT);
    System.arraycopy(splineVertices[DEFAULT_SPLINE_VERTICES - 1],0,splineVertices[2],0,VERTEX_FIELD_COUNT);
    splineVertexCount=3;
  }
  float vertex[]=splineVertices[splineVertexCount];
  vertex[X]=x;
  vertex[Y]=y;
  if (fill) {
    vertex[R]=fillR;
    vertex[G]=fillG;
    vertex[B]=fillB;
    vertex[A]=fillA;
  }
  if (stroke) {
    vertex[SR]=strokeR;
    vertex[SG]=strokeG;
    vertex[SB]=strokeB;
    vertex[SA]=strokeA;
    vertex[SW]=strokeWeight;
  }
  if (textureImage != null) {
    vertex[U]=textureU;
    vertex[V]=textureV;
  }
  int dimensions=(z == Float.MAX_VALUE) ? 2 : 3;
  if (dimensions == 3) {
    vertex[Z]=z;
    vertex[NX]=normalX;
    vertex[NY]=normalY;
    vertex[NZ]=normalZ;
  }
  splineVertexCount++;
  if (splineVertexCount > 3) {
    if (bezier) {
      if ((splineVertexCount % 4) == 0) {
        bezierInitCheck();
        splineSegment(splineVertexCount - 4,splineVertexCount - 4,bezierDrawMatrix,dimensions,bezierDetail);
      }
    }
 else {
      curveInitCheck();
      splineSegment(splineVertexCount - 4,splineVertexCount - 3,curveDrawMatrix,dimensions,curveDetail);
    }
  }
}
