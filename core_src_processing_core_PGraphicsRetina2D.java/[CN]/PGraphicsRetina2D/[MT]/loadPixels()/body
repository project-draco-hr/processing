{
  if ((retina.pixels == null) || (retina.pixels.length != retina.width * retina.height)) {
    retina.pixels=new int[retina.width * retina.height];
  }
  getRaster().getDataElements(0,0,retina.width,retina.height,retina.pixels);
  if (hints[ENABLE_RETINA_PIXELS]) {
    pixels=retina.pixels;
  }
 else {
    if ((pixels == null) || (pixels.length != width * height)) {
      pixels=new int[width * height];
    }
    int offset=0;
    int roffset=0;
    for (int y=0; y < height; y++) {
      for (int x=0; x < width; x++) {
        int px00=retina.pixels[roffset];
        int px01=retina.pixels[roffset + 1];
        int px10=retina.pixels[roffset + retina.width];
        int px11=retina.pixels[roffset + retina.width + 1];
        int red=((((px00 >> 16) & 0xff) + ((px01 >> 16) & 0xff) + ((px10 >> 16) & 0xff)+ ((px11 >> 16) & 0xff)) << 14) & 0xFF0000;
        int green=((((px00 >> 8) & 0xff) + ((px01 >> 8) & 0xff) + ((px10 >> 8) & 0xff)+ ((px11 >> 8) & 0xff)) << 6) & 0xFF00;
        int blue=(((px00 & 0xff) + (px01 & 0xff) + (px10 & 0xff)+ (px11 & 0xff)) >> 2) & 0xFF;
        pixels[offset++]=0xff000000 | red | green| blue;
        roffset+=2;
      }
      roffset+=retina.width;
    }
  }
}
