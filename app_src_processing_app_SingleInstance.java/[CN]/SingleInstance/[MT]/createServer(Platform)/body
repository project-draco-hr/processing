{
  try {
    final ServerSocket ss=new ServerSocket(0,0,InetAddress.getByName(null));
    Preferences.set(SERVER_PORT,"" + ss.getLocalPort());
    final String key="" + Math.random();
    Preferences.set(SERVER_KEY,key);
    Preferences.save();
    new Thread(new Runnable(){
      public void run(){
        while (true) {
          try {
            Socket s=ss.accept();
            final BufferedReader reader=PApplet.createReader(s.getInputStream());
            String receivedKey=reader.readLine();
            if (Base.DEBUG) {
              System.out.println("key is " + key + ", received is "+ receivedKey);
              System.out.println("platform base is " + platform.base);
              System.out.flush();
            }
            if (platform.base != null) {
              if (key.equals(receivedKey)) {
                SwingUtilities.invokeLater(new Runnable(){
                  public void run(){
                    try {
                      if (Base.DEBUG)                       System.out.println("about to read line");
                      String filename=reader.readLine();
                      if (filename != null) {
                        if (Base.DEBUG)                         System.out.println("calling open with " + filename);
                        platform.base.handleOpen(filename);
                        while ((filename=reader.readLine()) != null) {
                          if (Base.DEBUG)                           System.out.println("continuing to call open with " + filename);
                          platform.base.handleOpen(filename);
                        }
                      }
 else {
                        if (Base.DEBUG)                         System.out.println("opening new empty sketch");
                        platform.base.handleNew();
                      }
                    }
 catch (                    IOException e) {
                      e.printStackTrace();
                    }
                  }
                }
);
              }
 else {
                if (Base.DEBUG)                 System.out.println("keys do not match");
              }
            }
          }
 catch (          IOException e) {
            e.printStackTrace();
          }
        }
      }
    }
).start();
  }
 catch (  IOException e) {
    System.err.println("Could not create single instance server.");
    e.printStackTrace();
  }
}
