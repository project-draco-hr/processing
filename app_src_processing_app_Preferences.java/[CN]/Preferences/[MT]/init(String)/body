{
  try {
    load(Base.getStream("preferences.txt"));
  }
 catch (  Exception e) {
    Base.showError(null,"Could not read default settings.\n" + "You'll need to reinstall Processing.",e);
  }
  String platformExt="." + PConstants.platformNames[PApplet.platform];
  int platformExtLength=platformExt.length();
  Enumeration e=table.keys();
  while (e.hasMoreElements()) {
    String key=(String)e.nextElement();
    if (key.endsWith(platformExt)) {
      String actualKey=key.substring(0,key.length() - platformExtLength);
      String value=get(key);
      table.put(actualKey,value);
    }
  }
  defaults=(Hashtable)table.clone();
  setColor("run.window.bgcolor",SystemColor.control);
  if (commandLinePrefs != null) {
    try {
      load(new FileInputStream(commandLinePrefs));
    }
 catch (    Exception poe) {
      Base.showError("Error","Could not read preferences from " + commandLinePrefs,poe);
    }
  }
 else   if (!Base.isCommandLine()) {
    preferencesFile=Base.getSettingsFile(PREFS_FILE);
    if (!preferencesFile.exists()) {
      save();
    }
 else {
      try {
        load(new FileInputStream(preferencesFile));
      }
 catch (      Exception ex) {
        Base.showError("Error reading preferences","Error reading the preferences file. " + "Please delete (or move)\n" + preferencesFile.getAbsolutePath() + " and restart Processing.",ex);
      }
    }
    try {
      load(Base.getStream("theme/settings.txt"));
    }
 catch (    Exception te) {
      Base.showError(null,"Could not read color theme settings.\n" + "You'll need to reinstall Processing.",te);
    }
  }
}
