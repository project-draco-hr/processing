{
  setBoolean("editor.antialias",editorAntialiasBox.isSelected());
  setBoolean("export.applet.separate_jar_files",exportSeparateBox.isSelected());
  setBoolean("export.delete_target_folder",deletePreviousBox.isSelected());
  String oldPath=get("sketchbook.path");
  String newPath=sketchbookLocationField.getText();
  if (!newPath.equals(oldPath)) {
    editor.base.setSketchbookFolder(new File(newPath));
  }
  setBoolean("editor.external",externalEditorBox.isSelected());
  setBoolean("update.check",checkUpdatesBox.isSelected());
  int displayIndex=0;
  for (int d=0; d < displaySelectionBox.getItemCount(); d++) {
    if (displaySelectionBox.getSelectedIndex() == d) {
      displayIndex=d;
    }
  }
  setInteger("run.display",displayIndex + 1);
  setBoolean("run.options.memory",memoryOverrideBox.isSelected());
  int memoryMin=Preferences.getInteger("run.options.memory.initial");
  int memoryMax=Preferences.getInteger("run.options.memory.maximum");
  try {
    memoryMax=Integer.parseInt(memoryField.getText().trim());
    if (memoryMax < memoryMin)     memoryMax=memoryMin;
    setInteger("run.options.memory.maximum",memoryMax);
  }
 catch (  NumberFormatException e) {
    System.err.println("Ignoring bad memory setting");
  }
  if (Base.isMacOS()) {
    String oldBits=get("run.options.bits");
    String newBits=bitsThirtyTwoButton.isSelected() ? "32" : "64";
    if (!oldBits.equals(newBits)) {
      set("run.options.bits",newBits);
      for (      Mode m : editor.base.getModeList()) {
        m.rebuildLibraryList();
      }
    }
  }
  String newSizeText=fontSizeField.getText();
  try {
    int newSize=Integer.parseInt(newSizeText.trim());
    String pieces[]=PApplet.split(get("editor.font"),',');
    pieces[2]=String.valueOf(newSize);
    set("editor.font",PApplet.join(pieces,','));
  }
 catch (  Exception e) {
    System.err.println("ignoring invalid font size " + newSizeText);
  }
  if (autoAssociateBox != null) {
    setBoolean("platform.auto_file_type_associations",autoAssociateBox.isSelected());
  }
  editor.applyPreferences();
}
