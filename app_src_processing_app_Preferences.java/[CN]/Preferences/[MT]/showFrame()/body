{
  editorAntialiasBox.setSelected(getBoolean("editor.smooth"));
  inputMethodBox.setSelected(getBoolean("editor.input_method_support"));
  errorCheckerBox.setSelected(getBoolean("pdex.errorCheckEnabled"));
  warningsCheckerBox.setSelected(getBoolean("pdex.warningsEnabled"));
  codeCompletionBox.setSelected(getBoolean("pdex.ccEnabled"));
  codeCompletionTriggerBox.setSelected(getBoolean("pdex.ccTriggerEnabled"));
  deletePreviousBox.setSelected(getBoolean("export.delete_target_folder"));
  sketchbookLocationField.setText(getSketchbookPath());
  checkUpdatesBox.setSelected(getBoolean("update.check"));
  whinyBox.setSelected(getBoolean("header.hide.image") || getBoolean("buttons.hide.image"));
  updateDisplayList();
  int displayNum=getInteger("run.display");
  if (displayNum >= 0 && displayNum < displayCount) {
    displaySelectionBox.setSelectedIndex(displayNum);
  }
  new Thread(new Runnable(){
    public void run(){
      initFontList();
    }
  }
).start();
  fontSizeField.setSelectedItem(getInteger("editor.font.size"));
  consoleSizeField.setSelectedItem(getInteger("console.font.size"));
  presentColor.setBackground(Preferences.getColor("run.present.bgcolor"));
  presentColorHex.setText(Preferences.get("run.present.bgcolor").substring(1));
  memoryOverrideBox.setSelected(getBoolean("run.options.memory"));
  memoryField.setText(get("run.options.memory.maximum"));
  if (autoAssociateBox != null) {
    autoAssociateBox.setSelected(getBoolean("platform.auto_file_type_associations"));
  }
  dialog.setVisible(true);
}
